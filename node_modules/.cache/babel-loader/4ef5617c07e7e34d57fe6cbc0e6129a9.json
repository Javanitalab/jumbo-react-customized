{"ast":null,"code":"import { CHANGE_DIRECTION, CHANGE_NAVIGATION_STYLE, DARK_THEME, DRAWER_TYPE, FIXED_DRAWER, HORIZONTAL_MENU_POSITION, INSIDE_THE_HEADER, SWITCH_LANGUAGE, THEME_COLOR, TOGGLE_COLLAPSED_NAV, VERTICAL_NAVIGATION, WINDOW_WIDTH } from \"constants/ActionTypes\";\nimport { DARK_INDIGO } from \"constants/ThemeColors\";\nconst rltLocale = [\"ar\"];\nconst initialSettings = {\n  navCollapsed: false,\n  drawerType: FIXED_DRAWER,\n  themeColor: DARK_INDIGO,\n  darkTheme: false,\n  width: window.innerWidth,\n  isDirectionRTL: false,\n  navigationStyle: VERTICAL_NAVIGATION,\n  horizontalNavPosition: INSIDE_THE_HEADER,\n  locale: {\n    languageId: \"persian\",\n    locale: \"fa_IR\",\n    name: \"Persian\",\n    icon: \"ir\"\n  }\n};\n\nconst settings = (state = initialSettings, action) => {\n  switch (action.type) {\n    case \"@@router/LOCATION_CHANGE\":\n      return { ...state,\n        navCollapsed: false\n      };\n\n    case TOGGLE_COLLAPSED_NAV:\n      return { ...state,\n        navCollapsed: action.isNavCollapsed\n      };\n\n    case DRAWER_TYPE:\n      return { ...state,\n        drawerType: action.drawerType\n      };\n\n    case WINDOW_WIDTH:\n      return { ...state,\n        width: action.width\n      };\n\n    case THEME_COLOR:\n      return { ...state,\n        darkTheme: false,\n        themeColor: action.color\n      };\n\n    case DARK_THEME:\n      return { ...state,\n        darkTheme: !state.darkTheme\n      };\n\n    case SWITCH_LANGUAGE:\n      return { ...state,\n        locale: action.payload,\n        isDirectionRTL: rltLocale.includes(action.payload.locale)\n      };\n\n    case CHANGE_DIRECTION:\n      return { ...state,\n        isDirectionRTL: !state.isDirectionRTL\n      };\n\n    case CHANGE_NAVIGATION_STYLE:\n      return { ...state,\n        navigationStyle: action.payload\n      };\n\n    case HORIZONTAL_MENU_POSITION:\n      return { ...state,\n        horizontalNavPosition: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default settings;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/reducers/Settings.js"],"names":["CHANGE_DIRECTION","CHANGE_NAVIGATION_STYLE","DARK_THEME","DRAWER_TYPE","FIXED_DRAWER","HORIZONTAL_MENU_POSITION","INSIDE_THE_HEADER","SWITCH_LANGUAGE","THEME_COLOR","TOGGLE_COLLAPSED_NAV","VERTICAL_NAVIGATION","WINDOW_WIDTH","DARK_INDIGO","rltLocale","initialSettings","navCollapsed","drawerType","themeColor","darkTheme","width","window","innerWidth","isDirectionRTL","navigationStyle","horizontalNavPosition","locale","languageId","name","icon","settings","state","action","type","isNavCollapsed","color","payload","includes"],"mappings":"AAAA,SACEA,gBADF,EAEEC,uBAFF,EAGEC,UAHF,EAIEC,WAJF,EAKEC,YALF,EAMEC,wBANF,EAOEC,iBAPF,EAQEC,eARF,EASEC,WATF,EAUEC,oBAVF,EAWEC,mBAXF,EAYEC,YAZF,QAaO,uBAbP;AAcA,SAASC,WAAT,QAA4B,uBAA5B;AAEA,MAAMC,SAAS,GAAG,CAAC,IAAD,CAAlB;AACA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,YAAY,EAAE,KADQ;AAEtBC,EAAAA,UAAU,EAAEZ,YAFU;AAGtBa,EAAAA,UAAU,EAAEL,WAHU;AAItBM,EAAAA,SAAS,EAAE,KAJW;AAKtBC,EAAAA,KAAK,EAAEC,MAAM,CAACC,UALQ;AAMtBC,EAAAA,cAAc,EAAE,KANM;AAOtBC,EAAAA,eAAe,EAAEb,mBAPK;AAQtBc,EAAAA,qBAAqB,EAAElB,iBARD;AAStBmB,EAAAA,MAAM,EAAE;AACNC,IAAAA,UAAU,EAAE,SADN;AAEND,IAAAA,MAAM,EAAE,OAFF;AAGNE,IAAAA,IAAI,EAAE,SAHA;AAINC,IAAAA,IAAI,EAAE;AAJA;AATc,CAAxB;;AAiBA,MAAMC,QAAQ,GAAG,CAACC,KAAK,GAAGhB,eAAT,EAA0BiB,MAA1B,KAAqC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,0BAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELf,QAAAA,YAAY,EAAE;AAFT,OAAP;;AAIF,SAAKN,oBAAL;AACE,aAAO,EACL,GAAGqB,KADE;AAELf,QAAAA,YAAY,EAAEgB,MAAM,CAACE;AAFhB,OAAP;;AAIF,SAAK9B,WAAL;AACE,aAAO,EACL,GAAG2B,KADE;AAELd,QAAAA,UAAU,EAAEe,MAAM,CAACf;AAFd,OAAP;;AAIF,SAAKL,YAAL;AACE,aAAO,EACL,GAAGmB,KADE;AAELX,QAAAA,KAAK,EAAEY,MAAM,CAACZ;AAFT,OAAP;;AAIF,SAAKX,WAAL;AACE,aAAO,EACL,GAAGsB,KADE;AAELZ,QAAAA,SAAS,EAAE,KAFN;AAGLD,QAAAA,UAAU,EAAEc,MAAM,CAACG;AAHd,OAAP;;AAKF,SAAKhC,UAAL;AACE,aAAO,EACL,GAAG4B,KADE;AAELZ,QAAAA,SAAS,EAAE,CAACY,KAAK,CAACZ;AAFb,OAAP;;AAIF,SAAKX,eAAL;AACE,aAAO,EACL,GAAGuB,KADE;AAELL,QAAAA,MAAM,EAAEM,MAAM,CAACI,OAFV;AAGLb,QAAAA,cAAc,EAAET,SAAS,CAACuB,QAAV,CAAmBL,MAAM,CAACI,OAAP,CAAeV,MAAlC;AAHX,OAAP;;AAKF,SAAKzB,gBAAL;AACE,aAAO,EACL,GAAG8B,KADE;AAELR,QAAAA,cAAc,EAAE,CAACQ,KAAK,CAACR;AAFlB,OAAP;;AAKF,SAAKrB,uBAAL;AACE,aAAO,EACL,GAAG6B,KADE;AAELP,QAAAA,eAAe,EAAEQ,MAAM,CAACI;AAFnB,OAAP;;AAKF,SAAK9B,wBAAL;AACE,aAAO,EACL,GAAGyB,KADE;AAELN,QAAAA,qBAAqB,EAAEO,MAAM,CAACI;AAFzB,OAAP;;AAKF;AACE,aAAOL,KAAP;AAzDJ;AA2DD,CA5DD;;AA8DA,eAAeD,QAAf","sourcesContent":["import {\n  CHANGE_DIRECTION,\n  CHANGE_NAVIGATION_STYLE,\n  DARK_THEME,\n  DRAWER_TYPE,\n  FIXED_DRAWER,\n  HORIZONTAL_MENU_POSITION,\n  INSIDE_THE_HEADER,\n  SWITCH_LANGUAGE,\n  THEME_COLOR,\n  TOGGLE_COLLAPSED_NAV,\n  VERTICAL_NAVIGATION,\n  WINDOW_WIDTH,\n} from \"constants/ActionTypes\";\nimport { DARK_INDIGO } from \"constants/ThemeColors\";\n\nconst rltLocale = [\"ar\"];\nconst initialSettings = {\n  navCollapsed: false,\n  drawerType: FIXED_DRAWER,\n  themeColor: DARK_INDIGO,\n  darkTheme: false,\n  width: window.innerWidth,\n  isDirectionRTL: false,\n  navigationStyle: VERTICAL_NAVIGATION,\n  horizontalNavPosition: INSIDE_THE_HEADER,\n  locale: {\n    languageId: \"persian\",\n    locale: \"fa_IR\",\n    name: \"Persian\",\n    icon: \"ir\",\n  },\n};\n\nconst settings = (state = initialSettings, action) => {\n  switch (action.type) {\n    case \"@@router/LOCATION_CHANGE\":\n      return {\n        ...state,\n        navCollapsed: false,\n      };\n    case TOGGLE_COLLAPSED_NAV:\n      return {\n        ...state,\n        navCollapsed: action.isNavCollapsed,\n      };\n    case DRAWER_TYPE:\n      return {\n        ...state,\n        drawerType: action.drawerType,\n      };\n    case WINDOW_WIDTH:\n      return {\n        ...state,\n        width: action.width,\n      };\n    case THEME_COLOR:\n      return {\n        ...state,\n        darkTheme: false,\n        themeColor: action.color,\n      };\n    case DARK_THEME:\n      return {\n        ...state,\n        darkTheme: !state.darkTheme,\n      };\n    case SWITCH_LANGUAGE:\n      return {\n        ...state,\n        locale: action.payload,\n        isDirectionRTL: rltLocale.includes(action.payload.locale),\n      };\n    case CHANGE_DIRECTION:\n      return {\n        ...state,\n        isDirectionRTL: !state.isDirectionRTL,\n      };\n\n    case CHANGE_NAVIGATION_STYLE:\n      return {\n        ...state,\n        navigationStyle: action.payload,\n      };\n\n    case HORIZONTAL_MENU_POSITION:\n      return {\n        ...state,\n        horizontalNavPosition: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default settings;\n"]},"metadata":{},"sourceType":"module"}