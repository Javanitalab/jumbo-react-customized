{"ast":null,"code":"import _classCallCheck from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Button from'@material-ui/core/Button';import{GoogleMap,OverlayView,withGoogleMap}from'react-google-maps';var STYLES={mapContainer:{height:500},overlayView:{background:'#fff',border:'1px solid #ccc',padding:15}};function getPixelPositionOffset(width,height){return{x:-(width/2),y:-(height/2)};}var OverlayViewExampleGoogleMap=withGoogleMap(function(props){return React.createElement(GoogleMap,{defaultZoom:15,defaultCenter:{lat:47.646935,lng:-122.303763}},React.createElement(OverlayView,{position:{lat:47.646935,lng:-122.303763}/*\n       * An alternative to specifying position is specifying bounds.\n       * bounds can either be an instance of google.maps.LatLngBounds\n       * or an object in the following format:\n       * bounds={{\n       *    ne: { lat: 62.400471, lng: -150.005608 },\n       *    sw: { lat: 62.281819, lng: -150.287132 }\n       * }}\n       */ /*\n       * 1. Specify the pane the OverlayView will be rendered to. For\n       *    mouse interactivity, use `OverlayView.OVERLAY_MOUSE_TARGET`.\n       *    Defaults to `OverlayView.OVERLAY_LAYER`.\n       */,mapPaneName:OverlayView.OVERLAY_MOUSE_TARGET/*\n       * 2. Tweak the OverlayView's pixel position. In this case, we're\n       *    centering the content.\n       */,getPixelPositionOffset:getPixelPositionOffset/*\n       * 3. Create OverlayView content using standard React components.\n       */},React.createElement(\"div\",{style:STYLES.overlayView},React.createElement(\"h1\",null,\"OverlayView\"),React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:props.onClick},\"I have been clicked \",props.count,\" time\",props.count===1?\"\":\"s\"))));});/*\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\n */var MapOverlay=/*#__PURE__*/function(_Component){_inherits(MapOverlay,_Component);function MapOverlay(){var _getPrototypeOf2;var _this;_classCallCheck(this,MapOverlay);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(MapOverlay)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={count:0};_this.handleClick=_this.handleClick.bind(_assertThisInitialized(_this));return _this;}_createClass(MapOverlay,[{key:\"handleClick\",value:function handleClick(){this.setState({count:this.state.count+1});}},{key:\"render\",value:function render(){return React.createElement(OverlayViewExampleGoogleMap,{containerElement:React.createElement(\"div\",{className:\"embed-responsive embed-responsive-21by9\"}),mapElement:React.createElement(\"div\",{className:\"embed-responsive-item\"}),count:this.state.count,onClick:this.handleClick});}}]);return MapOverlay;}(Component);export{MapOverlay as default};","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/map/routes/mapOverlay/Components/MapOverlay.js"],"names":["React","Component","Button","GoogleMap","OverlayView","withGoogleMap","STYLES","mapContainer","height","overlayView","background","border","padding","getPixelPositionOffset","width","x","y","OverlayViewExampleGoogleMap","props","lat","lng","OVERLAY_MOUSE_TARGET","onClick","count","MapOverlay","state","handleClick","bind","setState"],"mappings":"o1BAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,OAAQC,SAAR,CAAmBC,WAAnB,CAAgCC,aAAhC,KAAoD,mBAApD,CAEA,GAAMC,CAAAA,MAAM,CAAG,CACbC,YAAY,CAAE,CACZC,MAAM,CAAE,GADI,CADD,CAIbC,WAAW,CAAE,CACXC,UAAU,CAAE,MADD,CAEXC,MAAM,CAAE,gBAFG,CAGXC,OAAO,CAAE,EAHE,CAJA,CAAf,CAWA,QAASC,CAAAA,sBAAT,CAAgCC,KAAhC,CAAuCN,MAAvC,CAA+C,CAC7C,MAAO,CAACO,CAAC,CAAE,EAAED,KAAK,CAAG,CAAV,CAAJ,CAAkBE,CAAC,CAAE,EAAER,MAAM,CAAG,CAAX,CAArB,CAAP,CACD,CAED,GAAMS,CAAAA,2BAA2B,CAAGZ,aAAa,CAAC,SAAAa,KAAK,QACrD,qBAAC,SAAD,EACE,WAAW,CAAE,EADf,CAEE,aAAa,CAAE,CAACC,GAAG,CAAE,SAAN,CAAiBC,GAAG,CAAE,CAAC,UAAvB,CAFjB,EAIE,oBAAC,WAAD,EACE,QAAQ,CAAE,CAACD,GAAG,CAAE,SAAN,CAAiBC,GAAG,CAAE,CAAC,UAAvB,CACV;;;;;;;;SAFF,CAWE;;;;SAXF,CAgBE,WAAW,CAAEhB,WAAW,CAACiB,oBACzB;;;SAjBF,CAqBE,sBAAsB,CAAER,sBACxB;;SAtBF,EA0BE,2BAAK,KAAK,CAAEP,MAAM,CAACG,WAAnB,EACE,4CADF,CAEE,oBAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,KAAK,CAAC,SAAlC,CAA4C,OAAO,CAAES,KAAK,CAACI,OAA3D,yBACuBJ,KAAK,CAACK,KAD7B,SACyCL,KAAK,CAACK,KAAN,GAAgB,CAAhB,OADzC,CAFF,CA1BF,CAJF,CADqD,EAAN,CAAjD,CAyCA;;MAGqBC,CAAAA,U,+YACnBC,K,CAAQ,CACNF,KAAK,CAAE,CADD,C,OAIRG,W,CAAc,MAAKA,WAAL,CAAiBC,IAAjB,+B,uFAEA,CACZ,KAAKC,QAAL,CAAc,CAACL,KAAK,CAAE,KAAKE,KAAL,CAAWF,KAAX,CAAmB,CAA3B,CAAd,EACD,C,uCAEQ,CACP,MACE,qBAAC,2BAAD,EACE,gBAAgB,CACd,2BAAK,SAAS,CAAC,yCAAf,EAFJ,CAIE,UAAU,CAAE,2BAAK,SAAS,CAAC,uBAAf,EAJd,CAKE,KAAK,CAAE,KAAKE,KAAL,CAAWF,KALpB,CAME,OAAO,CAAE,KAAKG,WANhB,EADF,CAUD,C,wBAtBqCzB,S,SAAnBuB,U","sourcesContent":["import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button'\nimport {GoogleMap, OverlayView, withGoogleMap} from 'react-google-maps';\n\nconst STYLES = {\n  mapContainer: {\n    height: 500,\n  },\n  overlayView: {\n    background: '#fff',\n    border: '1px solid #ccc',\n    padding: 15,\n  },\n};\n\nfunction getPixelPositionOffset(width, height) {\n  return {x: -(width / 2), y: -(height / 2)};\n}\n\nconst OverlayViewExampleGoogleMap = withGoogleMap(props => (\n  <GoogleMap\n    defaultZoom={15}\n    defaultCenter={{lat: 47.646935, lng: -122.303763}}\n  >\n    <OverlayView\n      position={{lat: 47.646935, lng: -122.303763}}\n      /*\n       * An alternative to specifying position is specifying bounds.\n       * bounds can either be an instance of google.maps.LatLngBounds\n       * or an object in the following format:\n       * bounds={{\n       *    ne: { lat: 62.400471, lng: -150.005608 },\n       *    sw: { lat: 62.281819, lng: -150.287132 }\n       * }}\n       */\n      /*\n       * 1. Specify the pane the OverlayView will be rendered to. For\n       *    mouse interactivity, use `OverlayView.OVERLAY_MOUSE_TARGET`.\n       *    Defaults to `OverlayView.OVERLAY_LAYER`.\n       */\n      mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\n      /*\n       * 2. Tweak the OverlayView's pixel position. In this case, we're\n       *    centering the content.\n       */\n      getPixelPositionOffset={getPixelPositionOffset}\n      /*\n       * 3. Create OverlayView content using standard React components.\n       */\n    >\n      <div style={STYLES.overlayView}>\n        <h1>OverlayView</h1>\n        <Button variant=\"contained\" color=\"primary\" onClick={props.onClick}>\n          I have been clicked {props.count} time{props.count === 1 ? `` : `s`}\n        </Button>\n      </div>\n    </OverlayView>\n  </GoogleMap>\n));\n\n/*\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\n */\nexport default class MapOverlay extends Component {\n  state = {\n    count: 0,\n  };\n\n  handleClick = this.handleClick.bind(this);\n\n  handleClick() {\n    this.setState({count: this.state.count + 1});\n  }\n\n  render() {\n    return (\n      <OverlayViewExampleGoogleMap\n        containerElement={\n          <div className=\"embed-responsive embed-responsive-21by9\"/>\n        }\n        mapElement={<div className=\"embed-responsive-item\"/>}\n        count={this.state.count}\n        onClick={this.handleClick}\n      />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}