{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/stepper/nonLinear/HorizontalNonLinearStepper.js\";\nimport React from 'react';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Step 1: Select campaign settings...';\n\n    case 1:\n      return 'Step 2: What is an ad group anyways?';\n\n    case 2:\n      return 'Step 3: This is the bit I really care about!';\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nclass HorizontalNonLinearStepper extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeStep: 0,\n      completed: {}\n    };\n\n    this.totalSteps = () => {\n      return getSteps().length;\n    };\n\n    this.handleNext = () => {\n      let activeStep;\n\n      if (this.isLastStep() && !this.allStepsCompleted()) {\n        // It's the last step, but not all steps have been completed,\n        // find the first step that has been completed\n        const steps = getSteps();\n        activeStep = steps.findIndex((step, i) => !(i in this.state.completed));\n      } else {\n        activeStep = this.state.activeStep + 1;\n      }\n\n      this.setState({\n        activeStep\n      });\n    };\n\n    this.handleBack = () => {\n      const {\n        activeStep\n      } = this.state;\n      this.setState({\n        activeStep: activeStep - 1\n      });\n    };\n\n    this.handleStep = step => () => {\n      this.setState({\n        activeStep: step\n      });\n    };\n\n    this.handleComplete = () => {\n      const {\n        completed\n      } = this.state;\n      completed[this.state.activeStep] = true;\n      this.setState({\n        completed\n      });\n      this.handleNext();\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        activeStep: 0,\n        completed: {}\n      });\n    };\n  }\n\n  completedSteps() {\n    return Object.keys(this.state.completed).length;\n  }\n\n  isLastStep() {\n    return this.state.activeStep === this.totalSteps() - 1;\n  }\n\n  allStepsCompleted() {\n    return this.completedSteps() === this.totalSteps();\n  }\n\n  render() {\n    const steps = getSteps();\n    const {\n      activeStep\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"w-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Stepper, {\n      nonLinear: true,\n      activeStep: activeStep,\n      className: \"horizontal-stepper-linear\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, steps.map((label, index) => {\n      return React.createElement(Step, {\n        key: label,\n        className: `horizontal-stepper ${index === activeStep ? 'active' : ''}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(StepButton, {\n        className: \"stepperbutton\",\n        onClick: this.handleStep(index),\n        completed: this.state.completed[index],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, label));\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.allStepsCompleted() ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: \"my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"All steps completed - you\\\"re finished\"), React.createElement(Button, {\n      className: \"jr-btn\",\n      onClick: this.handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Reset\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: \"my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, getStepContent(activeStep)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Button, {\n      disabled: activeStep === 0,\n      onClick: this.handleBack,\n      className: \"jr-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Back\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleNext,\n      className: \"jr-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Next\"), activeStep !== steps.length && (this.state.completed[this.state.activeStep] ? React.createElement(Typography, {\n      variant: \"caption\",\n      className: \"my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Step \", activeStep + 1, \" already completed\") : React.createElement(Button, {\n      className: \"jr-btn\",\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleComplete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, this.completedSteps() === this.totalSteps() - 1 ? 'Finish' : 'Complete Step'))))));\n  }\n\n}\n\nexport default HorizontalNonLinearStepper;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/stepper/nonLinear/HorizontalNonLinearStepper.js"],"names":["React","Stepper","Step","StepButton","Button","Typography","getSteps","getStepContent","step","HorizontalNonLinearStepper","Component","state","activeStep","completed","totalSteps","length","handleNext","isLastStep","allStepsCompleted","steps","findIndex","i","setState","handleBack","handleStep","handleComplete","handleReset","completedSteps","Object","keys","render","map","label","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Step 1: Select campaign settings...';\n    case 1:\n      return 'Step 2: What is an ad group anyways?';\n    case 2:\n      return 'Step 3: This is the bit I really care about!';\n    default:\n      return 'Unknown step';\n  }\n}\n\nclass HorizontalNonLinearStepper extends React.Component {\n  state = {\n    activeStep: 0,\n    completed: {},\n  };\n  totalSteps = () => {\n    return getSteps().length;\n  };\n  handleNext = () => {\n    let activeStep;\n\n    if (this.isLastStep() && !this.allStepsCompleted()) {\n      // It's the last step, but not all steps have been completed,\n      // find the first step that has been completed\n      const steps = getSteps();\n      activeStep = steps.findIndex((step, i) => !(i in this.state.completed));\n    } else {\n      activeStep = this.state.activeStep + 1;\n    }\n    this.setState({\n      activeStep,\n    });\n  };\n  handleBack = () => {\n    const {activeStep} = this.state;\n    this.setState({\n      activeStep: activeStep - 1,\n    });\n  };\n  handleStep = step => () => {\n    this.setState({\n      activeStep: step,\n    });\n  };\n  handleComplete = () => {\n    const {completed} = this.state;\n    completed[this.state.activeStep] = true;\n    this.setState({\n      completed,\n    });\n    this.handleNext();\n  };\n  handleReset = () => {\n    this.setState({\n      activeStep: 0,\n      completed: {},\n    });\n  };\n\n  completedSteps() {\n    return Object.keys(this.state.completed).length;\n  }\n\n  isLastStep() {\n    return this.state.activeStep === this.totalSteps() - 1;\n  }\n\n  allStepsCompleted() {\n    return this.completedSteps() === this.totalSteps();\n  }\n\n  render() {\n    const steps = getSteps();\n    const {activeStep} = this.state;\n\n    return (\n      <div className=\"w-100\">\n        <Stepper nonLinear activeStep={activeStep} className=\"horizontal-stepper-linear\">\n          {steps.map((label, index) => {\n            return (\n              <Step key={label} className={`horizontal-stepper ${index === activeStep ? 'active' : ''}`}>\n                <StepButton className=\"stepperbutton\"\n                            onClick={this.handleStep(index)}\n                            completed={this.state.completed[index]}\n                >\n                  {label}\n                </StepButton>\n              </Step>\n            );\n          })}\n        </Stepper>\n        <div>\n          {this.allStepsCompleted() ? (\n            <div>\n              <Typography className=\"my-2\">\n                All steps completed - you&quot;re finished\n              </Typography>\n              <Button className=\"jr-btn\" onClick={this.handleReset}>Reset</Button>\n            </div>\n          ) : (\n            <div>\n              <Typography className=\"my-2\">{getStepContent(activeStep)}</Typography>\n              <div>\n                <Button\n                  disabled={activeStep === 0}\n                  onClick={this.handleBack}\n                  className=\"jr-btn\"\n                >\n                  Back\n                </Button>\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleNext} className=\"jr-btn\">\n                  Next\n                </Button>\n                {activeStep !== steps.length &&\n                (this.state.completed[this.state.activeStep] ? (\n                  <Typography variant=\"caption\" className=\"my-2\">\n                    Step {activeStep + 1} already completed\n                  </Typography>\n                ) : (\n                  <Button className=\"jr-btn\" variant=\"contained\" color=\"primary\"\n                          onClick={this.handleComplete}>\n                    {this.completedSteps() === this.totalSteps() - 1 ? 'Finish' : 'Complete Step'}\n                  </Button>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HorizontalNonLinearStepper;"]},"metadata":{},"sourceType":"module"}