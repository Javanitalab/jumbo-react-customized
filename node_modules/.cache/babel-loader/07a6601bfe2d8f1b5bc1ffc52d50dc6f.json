{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/map/routes/MapWithSearchBox/Components/MapWithASearchBox.js\";\nimport React, { Component } from \"react\";\nconst google = window.google;\n\nconst _ = require(\"lodash\");\n\nconst {\n  compose,\n  withProps,\n  lifecycle\n} = require(\"recompose\");\n\nconst {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} = require(\"react-google-maps\");\n\nconst {\n  SearchBox\n} = require(\"react-google-maps/lib/components/places/SearchBox\");\n\nconst MapWithASearchBoxs = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=places,geometry,drawing&key=AIzaSyC9dEjps9u3AP1ce5dxcXCTYDRUege490k\",\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: `400px`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }),\n  mapElement: React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })\n}), lifecycle({\n  componentWillMount() {\n    const refs = {};\n    this.setState({\n      bounds: null,\n      center: {\n        lat: 41.9,\n        lng: -87.624\n      },\n      markers: [],\n      onMapMounted: ref => {\n        refs.map = ref;\n      },\n      onBoundsChanged: () => {\n        this.setState({\n          bounds: refs.map.getBounds(),\n          center: refs.map.getCenter()\n        });\n      },\n      onSearchBoxMounted: ref => {\n        refs.searchBox = ref;\n      },\n      onPlacesChanged: () => {\n        const places = refs.searchBox.getPlaces();\n        const bounds = new google.maps.LatLngBounds();\n        places.forEach(place => {\n          if (place.geometry.viewport) {\n            bounds.union(place.geometry.viewport);\n          } else {\n            bounds.extend(place.geometry.location);\n          }\n        });\n        const nextMarkers = places.map(place => ({\n          position: place.geometry.location\n        }));\n\n        const nextCenter = _.get(nextMarkers, '0.position', this.state.center);\n\n        this.setState({\n          center: nextCenter,\n          markers: nextMarkers\n        }); // refs.map.fitBounds(bounds);\n      }\n    });\n  }\n\n}), withScriptjs, withGoogleMap)(props => React.createElement(GoogleMap, {\n  ref: props.onMapMounted,\n  defaultZoom: 15,\n  center: props.center,\n  defaultOptions: {\n    mapTypeControl: false\n  },\n  onBoundsChanged: props.onBoundsChanged,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}, React.createElement(SearchBox, {\n  ref: props.onSearchBoxMounted,\n  bounds: props.bounds // controlPosition={new google.maps.ControlPosition.TOP_LEFT}\n  ,\n  onPlacesChanged: props.onPlacesChanged,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79\n  },\n  __self: this\n}, React.createElement(\"input\", {\n  type: \"text\",\n  placeholder: \"Enter search location\",\n  style: {\n    boxSizing: `border-box`,\n    border: `1px solid transparent`,\n    width: `240px`,\n    height: `32px`,\n    marginTop: `27px`,\n    padding: `0 12px`,\n    borderRadius: `3px`,\n    boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n    fontSize: `14px`,\n    outline: `none`,\n    marginLeft: '20px',\n    textOverflow: `ellipses`\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84\n  },\n  __self: this\n})), props.markers.map((marker, index) => React.createElement(Marker, {\n  key: index,\n  position: marker.position,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104\n  },\n  __self: this\n}))));\nexport default class MapWithASearchBox extends Component {\n  render() {\n    let styleName = this.props.styleName;\n\n    if (!styleName) {\n      styleName = 'embed-responsive-21by9';\n    }\n\n    return React.createElement(MapWithASearchBoxs, {\n      containerElement: React.createElement(\"div\", {\n        className: `embed-responsive ${styleName}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }),\n      mapElement: React.createElement(\"div\", {\n        className: \"embed-responsive-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/map/routes/MapWithSearchBox/Components/MapWithASearchBox.js"],"names":["React","Component","google","window","_","require","compose","withProps","lifecycle","withScriptjs","withGoogleMap","GoogleMap","Marker","SearchBox","MapWithASearchBoxs","googleMapURL","loadingElement","height","containerElement","mapElement","componentWillMount","refs","setState","bounds","center","lat","lng","markers","onMapMounted","ref","map","onBoundsChanged","getBounds","getCenter","onSearchBoxMounted","searchBox","onPlacesChanged","places","getPlaces","maps","LatLngBounds","forEach","place","geometry","viewport","union","extend","location","nextMarkers","position","nextCenter","get","state","props","mapTypeControl","boxSizing","border","width","marginTop","padding","borderRadius","boxShadow","fontSize","outline","marginLeft","textOverflow","marker","index","MapWithASearchBox","render","styleName"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\n\nconst google = window.google;\n\nconst _ = require(\"lodash\");\nconst {compose, withProps, lifecycle} = require(\"recompose\");\nconst {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n} = require(\"react-google-maps\");\nconst {SearchBox} = require(\"react-google-maps/lib/components/places/SearchBox\");\n\nconst MapWithASearchBoxs = compose(\n  withProps({\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=places,geometry,drawing&key=AIzaSyC9dEjps9u3AP1ce5dxcXCTYDRUege490k\",\n    loadingElement: <div style={{height: `100%`}}/>,\n    containerElement: <div style={{height: `400px`}}/>,\n    mapElement: <div style={{height: `100%`}}/>,\n  }),\n  lifecycle({\n    componentWillMount() {\n      const refs = {}\n\n      this.setState({\n        bounds: null,\n        center: {\n          lat: 41.9, lng: -87.624\n        },\n        markers: [],\n        onMapMounted: ref => {\n          refs.map = ref;\n        },\n        onBoundsChanged: () => {\n          this.setState({\n            bounds: refs.map.getBounds(),\n            center: refs.map.getCenter(),\n          })\n        },\n        onSearchBoxMounted: ref => {\n          refs.searchBox = ref;\n        },\n        onPlacesChanged: () => {\n          const places = refs.searchBox.getPlaces();\n          const bounds = new google.maps.LatLngBounds();\n\n          places.forEach(place => {\n            if (place.geometry.viewport) {\n              bounds.union(place.geometry.viewport)\n            } else {\n              bounds.extend(place.geometry.location)\n            }\n          });\n          const nextMarkers = places.map(place => ({\n            position: place.geometry.location,\n          }));\n          const nextCenter = _.get(nextMarkers, '0.position', this.state.center);\n\n          this.setState({\n            center: nextCenter,\n            markers: nextMarkers,\n          });\n          // refs.map.fitBounds(bounds);\n        },\n      })\n    },\n  }),\n  withScriptjs,\n  withGoogleMap\n)(props =>\n  <GoogleMap\n    ref={props.onMapMounted}\n    defaultZoom={15}\n    center={props.center}\n    defaultOptions={{mapTypeControl: false}}\n    onBoundsChanged={props.onBoundsChanged}\n  >\n    <SearchBox\n      ref={props.onSearchBoxMounted}\n      bounds={props.bounds}\n      // controlPosition={new google.maps.ControlPosition.TOP_LEFT}\n      onPlacesChanged={props.onPlacesChanged}>\n      <input\n        type=\"text\"\n        placeholder=\"Enter search location\"\n        style={{\n          boxSizing: `border-box`,\n          border: `1px solid transparent`,\n          width: `240px`,\n          height: `32px`,\n          marginTop: `27px`,\n          padding: `0 12px`,\n          borderRadius: `3px`,\n          boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n          fontSize: `14px`,\n          outline: `none`,\n          marginLeft: '20px',\n          textOverflow: `ellipses`,\n        }}\n      />\n    </SearchBox>\n    {props.markers.map((marker, index) =>\n      <Marker key={index} position={marker.position}/>\n    )}\n  </GoogleMap>\n);\n\nexport default class MapWithASearchBox extends Component {\n\n  render() {\n    let styleName = this.props.styleName;\n    if (!styleName) {\n      styleName = 'embed-responsive-21by9'\n    }\n    return (\n      <MapWithASearchBoxs\n        containerElement={\n          <div className={`embed-responsive ${styleName}`}/>\n        }\n        mapElement={<div className=\"embed-responsive-item\"/>}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}