{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/textFields/formattedInputs/FormattedInputs.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport Input from '@material-ui/core/Input';\n\nclass TextMaskCustom extends React.Component {\n  render() {\n    return React.createElement(MaskedInput, Object.assign({}, this.props, {\n      mask: ['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n      placeholderChar: '\\u2000',\n      showMask: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass NumberFormatCustom extends React.Component {\n  render() {\n    return React.createElement(NumberFormat, Object.assign({}, this.props, {\n      onValueChange: values => {\n        this.props.onChange({\n          target: {\n            value: values.value\n          }\n        });\n      },\n      thousandSeparator: true,\n      prefix: \"$\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }));\n  }\n\n}\n\nNumberFormatCustom.propTypes = {\n  onChange: PropTypes.func.isRequired\n};\n\nclass FormattedInputs extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      textmask: '(1  )    -    ',\n      numberformat: '1320'\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-4 col-sm-6 col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Input, {\n      value: this.state.textmask,\n      inputComponent: TextMaskCustom,\n      onChange: this.handleChange('textmask'),\n      className: \"w-100 mb-3\",\n      inputProps: {\n        'aria-label': 'Description'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-lg-4 col-sm-6 col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Input, {\n      value: this.state.numberformat,\n      onChange: this.handleChange('numberformat'),\n      inputComponent: NumberFormatCustom,\n      className: \"w-100 mb-3\",\n      inputProps: {\n        'aria-label': 'Description'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default FormattedInputs;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/textFields/formattedInputs/FormattedInputs.js"],"names":["React","PropTypes","MaskedInput","NumberFormat","Input","TextMaskCustom","Component","render","props","NumberFormatCustom","values","onChange","target","value","propTypes","func","isRequired","FormattedInputs","state","textmask","numberformat","handleChange","name","event","setState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;AAEA,MAAMC,cAAN,SAA6BL,KAAK,CAACM,SAAnC,CAA6C;AAC3CC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,WAAD,oBACM,KAAKC,KADX;AAEE,MAAA,IAAI,EAAE,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,IAArB,EAA2B,GAA3B,EAAgC,GAAhC,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,GAAvD,EAA4D,IAA5D,EAAkE,IAAlE,EAAwE,IAAxE,EAA8E,IAA9E,CAFR;AAGE,MAAA,eAAe,EAAE,QAHnB;AAIE,MAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAQD;;AAV0C;;AAa7C,MAAMC,kBAAN,SAAiCT,KAAK,CAACM,SAAvC,CAAiD;AAC/CC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,YAAD,oBACM,KAAKC,KADX;AAEE,MAAA,aAAa,EAAEE,MAAM,IAAI;AACvB,aAAKF,KAAL,CAAWG,QAAX,CAAoB;AAClBC,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAEH,MAAM,CAACG;AADR;AADU,SAApB;AAKD,OARH;AASE,MAAA,iBAAiB,MATnB;AAUE,MAAA,MAAM,EAAC,GAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAcD;;AAhB8C;;AAmBjDJ,kBAAkB,CAACK,SAAnB,GAA+B;AAC7BH,EAAAA,QAAQ,EAAEV,SAAS,CAACc,IAAV,CAAeC;AADI,CAA/B;;AAIA,MAAMC,eAAN,SAA8BjB,KAAK,CAACM,SAApC,CAA8C;AAAA;AAAA;AAAA,SAC5CY,KAD4C,GACpC;AACNC,MAAAA,QAAQ,EAAE,gBADJ;AAENC,MAAAA,YAAY,EAAE;AAFR,KADoC;;AAAA,SAM5CC,YAN4C,GAM7BC,IAAI,IAAIC,KAAK,IAAI;AAC9B,WAAKC,QAAL,CAAc;AACZ,SAACF,IAAD,GAAQC,KAAK,CAACX,MAAN,CAAaC;AADT,OAAd;AAGD,KAV2C;AAAA;;AAY5CN,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKW,KAAL,CAAWC,QADpB;AAEE,MAAA,cAAc,EAAEd,cAFlB;AAGE,MAAA,QAAQ,EAAE,KAAKgB,YAAL,CAAkB,UAAlB,CAHZ;AAIE,MAAA,SAAS,EAAC,YAJZ;AAKE,MAAA,UAAU,EAAE;AACV,sBAAc;AADJ,OALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAaE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,YADpB;AAEE,MAAA,QAAQ,EAAE,KAAKC,YAAL,CAAkB,cAAlB,CAFZ;AAGE,MAAA,cAAc,EAAEZ,kBAHlB;AAIE,MAAA,SAAS,EAAC,YAJZ;AAKE,MAAA,UAAU,EAAE;AACV,sBAAc;AADJ,OALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAbF,CADF;AA2BD;;AAxC2C;;AA2C9C,eAAeQ,eAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport Input from '@material-ui/core/Input';\n\nclass TextMaskCustom extends React.Component {\n  render() {\n    return (\n      <MaskedInput\n        {...this.props}\n        mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n        placeholderChar={'\\u2000'}\n        showMask\n      />\n    );\n  }\n}\n\nclass NumberFormatCustom extends React.Component {\n  render() {\n    return (\n      <NumberFormat\n        {...this.props}\n        onValueChange={values => {\n          this.props.onChange({\n            target: {\n              value: values.value,\n            },\n          });\n        }}\n        thousandSeparator\n        prefix=\"$\"\n      />\n    );\n  }\n}\n\nNumberFormatCustom.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n\nclass FormattedInputs extends React.Component {\n  state = {\n    textmask: '(1  )    -    ',\n    numberformat: '1320',\n  };\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col-lg-4 col-sm-6 col-12\">\n          <Input\n            value={this.state.textmask}\n            inputComponent={TextMaskCustom}\n            onChange={this.handleChange('textmask')}\n            className=\"w-100 mb-3\"\n            inputProps={{\n              'aria-label': 'Description',\n            }}\n          />\n        </div>\n\n        <div className=\"col-lg-4 col-sm-6 col-12\">\n          <Input\n            value={this.state.numberformat}\n            onChange={this.handleChange('numberformat')}\n            inputComponent={NumberFormatCustom}\n            className=\"w-100 mb-3\"\n            inputProps={{\n              'aria-label': 'Description',\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FormattedInputs;"]},"metadata":{},"sourceType":"module"}