{"ast":null,"code":"import { CHANGE_DIRECTION, CHANGE_NAVIGATION_STYLE, DARK_THEME, DRAWER_TYPE, FIXED_DRAWER, HORIZONTAL_MENU_POSITION, INSIDE_THE_HEADER, SWITCH_LANGUAGE, THEME_COLOR, TOGGLE_COLLAPSED_NAV, VERTICAL_NAVIGATION, WINDOW_WIDTH } from \"constants/ActionTypes\";\nimport LanguageData from \"../components/LanguageSwitcher/data\";\nimport { DARK_INDIGO } from \"constants/ThemeColors\";\nconst rltLocale = [\"fa\", \"ar\"];\nconst selectedLanguageId = localStorage.getItem(\"langId\");\nconst currentLanguage = selectedLanguageId ? LanguageData.find(l => l.locale == selectedLanguageId) : {\n  languageId: \"farsi\",\n  locale: \"fa\",\n  name: \"Farsi\",\n  icon: \"ir\"\n};\nconst initialSettings = {\n  navCollapsed: false,\n  drawerType: FIXED_DRAWER,\n  themeColor: DARK_INDIGO,\n  darkTheme: false,\n  width: window.innerWidth,\n  isDirectionRTL: rltLocale.includes(currentLanguage.locale),\n  navigationStyle: VERTICAL_NAVIGATION,\n  horizontalNavPosition: INSIDE_THE_HEADER,\n  locale: currentLanguage\n};\n\nconst settings = (state = initialSettings, action) => {\n  switch (action.type) {\n    case \"@@router/LOCATION_CHANGE\":\n      return { ...state,\n        navCollapsed: false\n      };\n\n    case TOGGLE_COLLAPSED_NAV:\n      return { ...state,\n        navCollapsed: action.isNavCollapsed\n      };\n\n    case DRAWER_TYPE:\n      return { ...state,\n        drawerType: action.drawerType\n      };\n\n    case WINDOW_WIDTH:\n      return { ...state,\n        width: action.width\n      };\n\n    case THEME_COLOR:\n      return { ...state,\n        darkTheme: false,\n        themeColor: action.color\n      };\n\n    case DARK_THEME:\n      return { ...state,\n        darkTheme: !state.darkTheme\n      };\n\n    case SWITCH_LANGUAGE:\n      return { ...state,\n        locale: action.payload,\n        isDirectionRTL: rltLocale.includes(action.payload.locale)\n      };\n\n    case CHANGE_DIRECTION:\n      return { ...state,\n        isDirectionRTL: !state.isDirectionRTL\n      };\n\n    case CHANGE_NAVIGATION_STYLE:\n      return { ...state,\n        navigationStyle: action.payload\n      };\n\n    case HORIZONTAL_MENU_POSITION:\n      return { ...state,\n        horizontalNavPosition: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default settings;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/reducers/Settings.js"],"names":["CHANGE_DIRECTION","CHANGE_NAVIGATION_STYLE","DARK_THEME","DRAWER_TYPE","FIXED_DRAWER","HORIZONTAL_MENU_POSITION","INSIDE_THE_HEADER","SWITCH_LANGUAGE","THEME_COLOR","TOGGLE_COLLAPSED_NAV","VERTICAL_NAVIGATION","WINDOW_WIDTH","LanguageData","DARK_INDIGO","rltLocale","selectedLanguageId","localStorage","getItem","currentLanguage","find","l","locale","languageId","name","icon","initialSettings","navCollapsed","drawerType","themeColor","darkTheme","width","window","innerWidth","isDirectionRTL","includes","navigationStyle","horizontalNavPosition","settings","state","action","type","isNavCollapsed","color","payload"],"mappings":"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","sourcesContent":["import {\n  CHANGE_DIRECTION,\n  CHANGE_NAVIGATION_STYLE,\n  DARK_THEME,\n  DRAWER_TYPE,\n  FIXED_DRAWER,\n  HORIZONTAL_MENU_POSITION,\n  INSIDE_THE_HEADER,\n  SWITCH_LANGUAGE,\n  THEME_COLOR,\n  TOGGLE_COLLAPSED_NAV,\n  VERTICAL_NAVIGATION,\n  WINDOW_WIDTH,\n} from \"constants/ActionTypes\";\nimport LanguageData from \"../components/LanguageSwitcher/data\";\nimport { DARK_INDIGO } from \"constants/ThemeColors\";\n\nconst rltLocale = [\"fa\", \"ar\"];\nconst selectedLanguageId = localStorage.getItem(\"langId\");\nconst currentLanguage = selectedLanguageId\n  ? LanguageData.find((l) => l.locale == selectedLanguageId)\n  : {\n      languageId: \"farsi\",\n      locale: \"fa\",\n      name: \"Farsi\",\n      icon: \"ir\",\n    };\nconst initialSettings = {\n  navCollapsed: false,\n  drawerType: FIXED_DRAWER,\n  themeColor: DARK_INDIGO,\n  darkTheme: false,\n  width: window.innerWidth,\n  isDirectionRTL: rltLocale.includes(currentLanguage.locale),\n  navigationStyle: VERTICAL_NAVIGATION,\n  horizontalNavPosition: INSIDE_THE_HEADER,\n  locale: currentLanguage,\n};\n\nconst settings = (state = initialSettings, action) => {\n  switch (action.type) {\n    case \"@@router/LOCATION_CHANGE\":\n      return {\n        ...state,\n        navCollapsed: false,\n      };\n    case TOGGLE_COLLAPSED_NAV:\n      return {\n        ...state,\n        navCollapsed: action.isNavCollapsed,\n      };\n    case DRAWER_TYPE:\n      return {\n        ...state,\n        drawerType: action.drawerType,\n      };\n    case WINDOW_WIDTH:\n      return {\n        ...state,\n        width: action.width,\n      };\n    case THEME_COLOR:\n      return {\n        ...state,\n        darkTheme: false,\n        themeColor: action.color,\n      };\n    case DARK_THEME:\n      return {\n        ...state,\n        darkTheme: !state.darkTheme,\n      };\n    case SWITCH_LANGUAGE:\n      return {\n        ...state,\n        locale: action.payload,\n        isDirectionRTL: rltLocale.includes(action.payload.locale),\n      };\n    case CHANGE_DIRECTION:\n      return {\n        ...state,\n        isDirectionRTL: !state.isDirectionRTL,\n      };\n\n    case CHANGE_NAVIGATION_STYLE:\n      return {\n        ...state,\n        navigationStyle: action.payload,\n      };\n\n    case HORIZONTAL_MENU_POSITION:\n      return {\n        ...state,\n        horizontalNavPosition: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default settings;\n"]},"metadata":{},"sourceType":"module"}