{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/mail/basic/index.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Drawer from '@material-ui/core/Drawer';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { connect } from 'react-redux';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport mails from '../data/mails';\nimport folders from '../data/folders';\nimport filters from '../data/filters';\nimport labels from '../data/labels';\nimport options from '../data/options';\nimport MailList from 'components/mail/MailList';\nimport ComposeMail from 'components/mail/Compose/index';\nimport AppModuleHeader from 'components/AppModuleHeader/index';\nimport MailDetail from 'components/mail/MailDetail/index';\nimport IntlMessages from 'util/IntlMessages';\nimport CustomScrollbars from 'util/CustomScrollbars';\n\nclass Mail extends Component {\n  constructor() {\n    super();\n\n    this.MailSideBar = () => {\n      return React.createElement(\"div\", {\n        className: \"module-side\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"module-side-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"module-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-email mr-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"mail.mailbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"module-side-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(CustomScrollbars, {\n        className: \"module-side-scroll scrollbar\",\n        style: {\n          height: this.props.width >= 1200 ? 'calc(100vh - 200px)' : 'calc(100vh - 80px)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"module-add-task\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: \"btn-block\",\n        onClick: () => {\n          this.setState({\n            composeMail: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-edit zmdi-hc-fw\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(IntlMessages, {\n        id: \"mail.compose\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), \" \")), React.createElement(\"ul\", {\n        className: \"module-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.getNavFolders(), React.createElement(\"li\", {\n        className: \"module-nav-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"mail.filters\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), this.getNavFilters(), React.createElement(\"li\", {\n        className: \"module-nav-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"mail.labels\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), this.getNavLabels()))));\n    };\n\n    this.onDeleteMail = () => {\n      const mails = this.state.allMail.map(mail => mail.selected && mail.folder === this.state.selectedFolder ? { ...mail,\n        folder: 4,\n        selected: false\n      } : mail);\n      this.setState({\n        alertMessage: 'Mail Deleted Successfully',\n        showMessage: true,\n        selectedMails: 0,\n        allMail: mails,\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n    };\n\n    this.getNavFolders = () => {\n      return folders.map((folder, index) => React.createElement(\"li\", {\n        key: index,\n        onClick: () => {\n          const filterMails = this.state.allMail.filter(mail => mail.folder === folder.id);\n          this.setState({\n            selectedFolder: folder.id,\n            noContentFoundMessage: 'No mail found in selected folder',\n            currentMail: null,\n            loader: true,\n            folderMails: filterMails\n          });\n          setTimeout(() => {\n            this.setState({\n              loader: false\n            });\n          }, 1500);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: `jr-link ${this.state.selectedFolder === folder.id ? 'active' : ''}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: `zmdi zmdi-${folder.icon}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, folder.title))));\n    };\n\n    this.onFolderMenuItemSelect = folderId => {\n      this.handleRequestClose();\n      const mails = this.state.allMail.map(mail => mail.selected && mail.folder === this.state.selectedFolder ? { ...mail,\n        folder: folderId,\n        selected: false\n      } : mail);\n      this.setState({\n        selectedMails: 0,\n        allMail: mails,\n        noContentFoundMessage: 'No mail found in selected folder',\n        alertMessage: 'Mail has been moved successfully',\n        showMessage: true,\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n    };\n\n    this.onLabelMenuItemSelect = label => {\n      this.handleRequestClose();\n      const mails = this.state.allMail.map(mail => {\n        if (mail.selected && mail.folder === this.state.selectedFolder) {\n          if (mail.labels.includes(label.id)) {\n            return { ...mail,\n              labels: this.removeLabel(mail, label.id)\n            };\n          } else {\n            return { ...mail,\n              labels: this.addLabel(mail, label.id)\n            };\n          }\n        } else {\n          return mail;\n        }\n      });\n      this.setState({\n        noContentFoundMessage: 'No mail found in selected label',\n        alertMessage: 'Label Updated Successfully',\n        showMessage: true,\n        allMail: mails,\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n    };\n\n    this.handleRequestClose = () => {\n      this.setState({\n        composeMail: false,\n        showMessage: false,\n        folderMenuState: false,\n        labelMenuState: false,\n        optionMenuState: false\n      });\n    };\n\n    this.getNavFilters = () => {\n      return filters.map((filter, index) => React.createElement(\"li\", {\n        key: index,\n        onClick: () => {\n          const filterMails = this.state.allMail.filter(mail => {\n            if (filter.id === 0 && mail.starred) {\n              return mail;\n            } else if (filter.id === 1 && mail.important) {\n              return mail;\n            }\n\n            return null;\n          });\n          this.setState({\n            noContentFoundMessage: 'No mail found in selected filter',\n            loader: true,\n            folderMails: filterMails\n          });\n          setTimeout(() => {\n            this.setState({\n              loader: false\n            });\n          }, 1500);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"jr-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: `zmdi zmdi-${filter.icon}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, filter.title))));\n    };\n\n    this.onFolderSelect = event => {\n      this.setState({\n        anchorEl: event.currentTarget,\n        folderMenuState: !this.state.folderMenuState\n      });\n    };\n\n    this.onLabelSelect = event => {\n      this.setState({\n        anchorEl: event.currentTarget,\n        labelMenuState: !this.state.labelMenuState\n      });\n    };\n\n    this.onOptionMenuSelect = event => {\n      this.setState({\n        anchorEl: event.currentTarget,\n        optionMenuState: !this.state.optionMenuState\n      });\n    };\n\n    this.onOptionMenuItemSelect = option => {\n      switch (option.title) {\n        case 'All':\n          this.handleRequestClose();\n          this.getAllMail();\n          break;\n\n        case 'None':\n          this.handleRequestClose();\n          this.getUnselectedAllMail();\n          break;\n\n        case 'Read':\n          this.handleRequestClose();\n          this.getReadMail();\n          break;\n\n        case 'Unread':\n          this.handleRequestClose();\n          this.getUnreadMail();\n          break;\n\n        case 'Starred':\n          this.handleRequestClose();\n          this.getStarredMail();\n          break;\n\n        case 'Unstarred':\n          this.handleRequestClose();\n          this.getUnStarredMail();\n          break;\n\n        case 'Important':\n          this.handleRequestClose();\n          this.getImportantMail();\n          break;\n\n        case 'Unimportant':\n          this.handleRequestClose();\n          this.getUnimportantMail();\n          break;\n\n        default:\n          this.handleRequestClose();\n          this.getAllMail();\n      }\n    };\n\n    this.getAllMail = () => {\n      let mails = this.state.allMail.map(mail => mail.folder === this.state.selectedFolder ? { ...mail,\n        selected: true\n      } : mail);\n      this.setState({\n        selectedMails: mails.length,\n        allMail: mails,\n        optionName: 'All',\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n    };\n\n    this.getUnselectedAllMail = () => {\n      let mails = this.state.allMail.map(mail => mail.folder === this.state.selectedFolder ? { ...mail,\n        selected: false\n      } : mail);\n      this.setState({\n        selectedMails: 0,\n        allMail: mails,\n        optionName: 'None',\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n    };\n\n    this.getReadMail = () => {\n      let selectedMail = 0;\n      let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\n      mails = mails.map(mail => {\n        if (mail.read) {\n          selectedMail++;\n          return { ...mail,\n            selected: true\n          };\n        }\n\n        return { ...mail,\n          selected: false\n        };\n      });\n      this.setState({\n        selectedMails: selectedMail,\n        allMail: mails,\n        optionName: 'Read',\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n      return mails;\n    };\n\n    this.getUnreadMail = () => {\n      let selectedMail = 0;\n      let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\n      mails = mails.map(mail => {\n        if (!mail.read) {\n          selectedMail++;\n          return { ...mail,\n            selected: true\n          };\n        }\n\n        return { ...mail,\n          selected: false\n        };\n      });\n      this.setState({\n        selectedMails: selectedMail,\n        allMail: mails,\n        optionName: 'Unread',\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n      return mails;\n    };\n\n    this.getStarredMail = () => {\n      let selectedMail = 0;\n      let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\n      mails = mails.map(mail => {\n        if (mail.starred) {\n          selectedMail++;\n          return { ...mail,\n            selected: true\n          };\n        }\n\n        return { ...mail,\n          selected: false\n        };\n      });\n      this.setState({\n        selectedMails: selectedMail,\n        allMail: mails,\n        optionName: 'Starred',\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n      return mails;\n    };\n\n    this.getUnStarredMail = () => {\n      let selectedMail = 0;\n      let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\n      mails = mails.map(mail => {\n        if (!mail.starred) {\n          selectedMail++;\n          return { ...mail,\n            selected: true\n          };\n        }\n\n        return { ...mail,\n          selected: false\n        };\n      });\n      this.setState({\n        selectedMails: selectedMail,\n        allMail: mails,\n        optionName: 'UnStarred',\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n      return mails;\n    };\n\n    this.getImportantMail = () => {\n      let selectedMail = 0;\n      let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\n      mails = mails.map(mail => {\n        if (mail.important) {\n          selectedMail++;\n          return { ...mail,\n            selected: true\n          };\n        }\n\n        return { ...mail,\n          selected: false\n        };\n      });\n      this.setState({\n        selectedMails: selectedMail,\n        allMail: mails,\n        optionName: 'Important',\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n      return mails;\n    };\n\n    this.getUnimportantMail = () => {\n      let selectedMail = 0;\n      let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\n      mails = mails.map(mail => {\n        if (!mail.important) {\n          selectedMail++;\n          return { ...mail,\n            selected: true\n          };\n        }\n\n        return { ...mail,\n          selected: false\n        };\n      });\n      this.setState({\n        selectedMails: selectedMail,\n        optionName: 'Unimportant',\n        allMail: mails,\n        noContentFoundMessage: 'No Mail found in selected Label',\n        folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n      });\n      return mails;\n    };\n\n    this.getNavLabels = () => {\n      return labels.map((label, index) => React.createElement(\"li\", {\n        key: index,\n        onClick: () => {\n          const filterMails = this.state.allMail.filter(mail => mail.labels.includes(label.id));\n          this.setState({\n            loader: true,\n            noContentFoundMessage: 'No mail found in selected label',\n            folderMails: filterMails\n          });\n          setTimeout(() => {\n            this.setState({\n              loader: false\n            });\n          }, 1500);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"jr-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: `zmdi zmdi-circle text-${label.color}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, label.title))));\n    };\n\n    this.searchMail = searchText => {\n      if (searchText === '') {\n        this.setState({\n          folderMails: this.state.allMail.filter(mail => !mail.deleted)\n        });\n      } else {\n        const searchMails = this.state.allMail.filter(mail => !mail.deleted && mail.subject.toLowerCase().indexOf(searchText.toLowerCase()) > -1);\n        this.setState({\n          folderMails: searchMails\n        });\n      }\n    };\n\n    this.displayMail = (currentMail, folderMails, noContentFoundMessage) => {\n      return React.createElement(\"div\", {\n        className: \"module-box-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }, currentMail === null ? folderMails.length === 0 ? React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        style: {\n          height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, noContentFoundMessage) : React.createElement(MailList, {\n        mails: folderMails,\n        onStartSelect: this.onStartSelect.bind(this),\n        onMailSelect: this.onMailSelect.bind(this),\n        width: this.props.width,\n        onMailChecked: this.onMailChecked.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }) : React.createElement(MailDetail, {\n        mail: currentMail,\n        onStartSelect: this.onStartSelect.bind(this),\n        width: this.props.width,\n        onImportantSelect: this.onImportantSelect.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }));\n    };\n\n    this.getMailActions = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        onClick: this.onFolderSelect.bind(this),\n        className: \"icon-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-folder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      })), React.createElement(IconButton, {\n        onClick: this.onDeleteMail.bind(this),\n        className: \"icon-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      })), React.createElement(IconButton, {\n        onClick: this.onLabelSelect.bind(this),\n        className: \"icon-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-label-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      })));\n    };\n\n    this.state = {\n      searchMail: '',\n      noContentFoundMessage: 'No mail found in selected folder',\n      alertMessage: '',\n      showMessage: false,\n      drawerState: false,\n      optionName: 'None',\n      anchorEl: null,\n      allMail: mails,\n      loader: true,\n      currentMail: null,\n      user: {\n        name: 'Robert Johnson',\n        email: 'robert@example.com',\n        avatar: 'https://via.placeholder.com/150x150'\n      },\n      selectedMails: 0,\n      selectedFolder: 0,\n      composeMail: false,\n      labelMenuState: false,\n      folderMenuState: false,\n      optionMenuState: false,\n      folderMails: mails.filter(mail => mail.folder === 0)\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        loader: false\n      });\n    }, 1500);\n  }\n\n  onMailChecked(data) {\n    data.selected = !data.selected;\n    let selectedMail = 0;\n    const mails = this.state.folderMails.map(mail => {\n      if (mail.selected) {\n        selectedMail++;\n      }\n\n      if (mail.id === data.id) {\n        if (mail.selected) {\n          selectedMail++;\n        }\n\n        return data;\n      } else {\n        return mail;\n      }\n    });\n    this.setState({\n      selectedMails: selectedMail,\n      folderMails: mails\n    });\n  }\n\n  onAllMailSelect() {\n    const selectAll = this.state.selectedMails <= this.state.folderMails.length;\n\n    if (selectAll) {\n      this.getAllMail();\n    } else {\n      this.getUnselectedAllMail();\n    }\n  }\n\n  removeLabel(mail, label) {\n    mail.labels.splice(mail.labels.indexOf(label), 1);\n\n    if (this.state.currentMail !== null && mail.id === this.state.currentMail.id) {\n      this.setState({\n        currentMail: { ...mail,\n          labels: mail.labels\n        }\n      });\n    }\n\n    return mail.labels;\n  }\n\n  onStartSelect(data) {\n    data.starred = !data.starred;\n    this.setState({\n      alertMessage: data.starred ? 'Mail Mark as Star' : 'Mail Remove as Star',\n      showMessage: true,\n      folderMails: this.state.folderMails.map(mail => mail.id === data.id ? data : mail)\n    });\n  }\n\n  onImportantSelect(data) {\n    data.important = !data.important;\n    this.setState({\n      alertMessage: data.important ? 'Mail Mark as Important' : 'Mail Remove as Important',\n      showMessage: true,\n      folderMails: this.state.folderMails.map(mail => mail.id === data.id ? data : mail)\n    });\n  }\n\n  onMailSend(data) {\n    this.setState({\n      alertMessage: 'Mail Sent Successfully',\n      showMessage: true,\n      folderMails: this.state.allMail.concat(data),\n      allMail: this.state.allMail.concat(data)\n    });\n  }\n\n  onMailSelect(mail) {\n    this.setState({\n      loader: true,\n      currentMail: mail\n    });\n    setTimeout(() => {\n      this.setState({\n        loader: false\n      });\n    }, 1500);\n  }\n\n  addLabel(mail, label) {\n    if (this.state.currentMail !== null && mail.id === this.state.currentMail.id) {\n      this.setState({\n        currentMail: { ...mail,\n          labels: mail.labels.concat(label)\n        }\n      });\n    }\n\n    return mail.labels.concat(label);\n  }\n\n  updateSearch(evt) {\n    this.setState({\n      searchMail: evt.target.value\n    });\n    this.searchMail(evt.target.value);\n  }\n\n  onToggleDrawer() {\n    this.setState({\n      drawerState: !this.state.drawerState\n    });\n  }\n\n  render() {\n    const {\n      selectedMails,\n      loader,\n      currentMail,\n      folderMails,\n      composeMail,\n      user,\n      alertMessage,\n      showMessage,\n      noContentFoundMessage\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"app-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"animated slideInUpTiny animation-duration-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"app-module\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-block d-xl-none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591\n      },\n      __self: this\n    }, React.createElement(Drawer, {\n      open: this.state.drawerState,\n      onClose: this.onToggleDrawer.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592\n      },\n      __self: this\n    }, this.MailSideBar())), React.createElement(\"div\", {\n      className: \"app-module-sidenav d-none d-xl-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598\n      },\n      __self: this\n    }, this.MailSideBar()), React.createElement(\"div\", {\n      className: \"module-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"module-box-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: \"drawer-btn d-block d-xl-none\",\n      \"aria-label\": \"Menu\",\n      onClick: this.onToggleDrawer.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"zmdi zmdi-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608\n      },\n      __self: this\n    })), React.createElement(AppModuleHeader, {\n      placeholder: \"Search mails\",\n      user: this.state.user,\n      onChange: this.updateSearch.bind(this),\n      value: this.state.searchMail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"module-box-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"module-box-topbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617\n      },\n      __self: this\n    }, this.state.currentMail === null ? React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      color: \"primary\",\n      indeterminate: selectedMails > 0 && selectedMails < folderMails.length,\n      checked: selectedMails > 0,\n      onChange: this.onAllMailSelect.bind(this),\n      value: \"SelectMail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"d-flex align-items-center\",\n      onClick: this.onOptionMenuSelect.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"px-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626\n      },\n      __self: this\n    }, \" \", this.state.optionName), React.createElement(IconButton, {\n      className: \"icon-btn-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"zmdi zmdi-caret-down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628\n      },\n      __self: this\n    })))) : React.createElement(IconButton, {\n      className: \"icon-btn\",\n      onClick: () => {\n        this.setState({\n          currentMail: null\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"zmdi zmdi-arrow-back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639\n      },\n      __self: this\n    })), selectedMails > 0 && this.getMailActions(), React.createElement(Menu, {\n      id: \"option-menu\",\n      anchorEl: this.state.anchorEl,\n      open: this.state.optionMenuState,\n      onClose: this.handleRequestClose,\n      MenuListProps: {\n        style: {\n          width: 150\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646\n      },\n      __self: this\n    }, options.map(option => React.createElement(MenuItem, {\n      key: option.title,\n      onClick: this.onOptionMenuItemSelect.bind(this, option),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656\n      },\n      __self: this\n    }, option.title))), React.createElement(Menu, {\n      id: \"folder-menu\",\n      anchorEl: this.state.anchorEl,\n      open: this.state.folderMenuState,\n      onClose: this.handleRequestClose,\n      MenuListProps: {\n        style: {\n          width: 150\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663\n      },\n      __self: this\n    }, folders.map(folder => React.createElement(MenuItem, {\n      key: folder.id,\n      onClick: this.onFolderMenuItemSelect.bind(this, folder.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673\n      },\n      __self: this\n    }, folder.title))), React.createElement(Menu, {\n      id: \"label-menu\",\n      anchorEl: this.state.anchorEl,\n      open: this.state.labelMenuState,\n      onClose: this.handleRequestClose,\n      MenuListProps: {\n        style: {\n          width: 150\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679\n      },\n      __self: this\n    }, labels.map(label => React.createElement(MenuItem, {\n      key: label.id,\n      onClick: this.onLabelMenuItemSelect.bind(this, label),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689\n      },\n      __self: this\n    }, label.title)))), loader ? React.createElement(\"div\", {\n      className: \"loader-view\",\n      style: {\n        height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700\n      },\n      __self: this\n    })) : this.displayMail(currentMail, folderMails, noContentFoundMessage), React.createElement(ComposeMail, {\n      open: composeMail,\n      user: user,\n      onClose: this.handleRequestClose.bind(this),\n      onMailSend: this.onMailSend.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 703\n      },\n      __self: this\n    })))), React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      open: showMessage,\n      autoHideDuration: 3000,\n      onClose: this.handleRequestClose,\n      ContentProps: {\n        'aria-describedby': 'message-id'\n      },\n      message: React.createElement(\"span\", {\n        id: \"message-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718\n        },\n        __self: this\n      }, alertMessage),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = ({\n  settings\n}) => {\n  const {\n    width\n  } = settings;\n  return {\n    width\n  };\n};\n\nexport default connect(mapStateToProps)(Mail);","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/mail/basic/index.js"],"names":["React","Component","Button","Drawer","Checkbox","Snackbar","connect","IconButton","Menu","MenuItem","CircularProgress","mails","folders","filters","labels","options","MailList","ComposeMail","AppModuleHeader","MailDetail","IntlMessages","CustomScrollbars","Mail","constructor","MailSideBar","height","props","width","setState","composeMail","getNavFolders","getNavFilters","getNavLabels","onDeleteMail","state","allMail","map","mail","selected","folder","selectedFolder","alertMessage","showMessage","selectedMails","folderMails","filter","index","filterMails","id","noContentFoundMessage","currentMail","loader","setTimeout","icon","title","onFolderMenuItemSelect","folderId","handleRequestClose","onLabelMenuItemSelect","label","includes","removeLabel","addLabel","folderMenuState","labelMenuState","optionMenuState","starred","important","onFolderSelect","event","anchorEl","currentTarget","onLabelSelect","onOptionMenuSelect","onOptionMenuItemSelect","option","getAllMail","getUnselectedAllMail","getReadMail","getUnreadMail","getStarredMail","getUnStarredMail","getImportantMail","getUnimportantMail","length","optionName","selectedMail","read","color","searchMail","searchText","deleted","searchMails","subject","toLowerCase","indexOf","displayMail","onStartSelect","bind","onMailSelect","onMailChecked","onImportantSelect","getMailActions","drawerState","user","name","email","avatar","componentDidMount","data","onAllMailSelect","selectAll","splice","onMailSend","concat","updateSearch","evt","target","value","onToggleDrawer","render","style","vertical","horizontal","mapStateToProps","settings"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Drawer from '@material-ui/core/Drawer';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport {connect} from 'react-redux';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport mails from '../data/mails';\nimport folders from '../data/folders';\nimport filters from '../data/filters';\nimport labels from '../data/labels';\nimport options from '../data/options';\nimport MailList from 'components/mail/MailList';\n\nimport ComposeMail from 'components/mail/Compose/index';\nimport AppModuleHeader from 'components/AppModuleHeader/index';\nimport MailDetail from 'components/mail/MailDetail/index';\nimport IntlMessages from 'util/IntlMessages';\nimport CustomScrollbars from 'util/CustomScrollbars';\n\n\nclass Mail extends Component {\n\n  MailSideBar = () => {\n    return <div className=\"module-side\">\n\n      <div className=\"module-side-header\">\n        <div className=\"module-logo\">\n          <i className=\"zmdi zmdi-email mr-3\"/>\n          <span><IntlMessages id=\"mail.mailbox\"/></span>\n        </div>\n\n      </div>\n\n      <div className=\"module-side-content\">\n        <CustomScrollbars className=\"module-side-scroll scrollbar\"\n                          style={{height: this.props.width >= 1200 ? 'calc(100vh - 200px)' : 'calc(100vh - 80px)'}}>\n          <div className=\"module-add-task\">\n            <Button variant=\"contained\" color=\"primary\" className=\"btn-block\"\n                    onClick={() => {\n                      this.setState({composeMail: true})\n                    }}>\n              <i className=\"zmdi zmdi-edit zmdi-hc-fw\"/>\n              <IntlMessages id=\"mail.compose\"/> </Button>\n          </div>\n\n          <ul className=\"module-nav\">\n\n            {this.getNavFolders()}\n\n            <li className=\"module-nav-label\">\n              <IntlMessages id=\"mail.filters\"/>\n            </li>\n\n            {this.getNavFilters()}\n\n            <li className=\"module-nav-label\">\n              <IntlMessages id=\"mail.labels\"/>\n            </li>\n\n            {this.getNavLabels()}\n\n          </ul>\n        </CustomScrollbars>\n      </div>\n    </div>\n  };\n\n  onDeleteMail = () => {\n    const mails = this.state.allMail.map(mail =>\n      mail.selected && (mail.folder === this.state.selectedFolder) ?\n        {...mail, folder: 4, selected: false,} : mail\n    );\n    this.setState({\n      alertMessage: 'Mail Deleted Successfully',\n      showMessage: true,\n      selectedMails: 0,\n      allMail: mails,\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n    });\n  };\n  getNavFolders = () => {\n    return folders.map((folder, index) =>\n      <li key={index} onClick={() => {\n        const filterMails = this.state.allMail.filter(mail => mail.folder === folder.id);\n        this.setState({\n          selectedFolder: folder.id,\n          noContentFoundMessage: 'No mail found in selected folder',\n          currentMail: null,\n          loader: true,\n          folderMails: filterMails\n        });\n        setTimeout(() => {\n          this.setState({loader: false});\n        }, 1500);\n      }\n      }>\n        <span className={`jr-link ${this.state.selectedFolder === folder.id ? 'active' : ''}`}>\n          <i className={`zmdi zmdi-${folder.icon}`}/>\n          <span>{folder.title}</span>\n        </span>\n      </li>\n    )\n  };\n  onFolderMenuItemSelect = (folderId) => {\n    this.handleRequestClose();\n    const mails = this.state.allMail.map(mail =>\n      mail.selected && (mail.folder === this.state.selectedFolder) ?\n        {...mail, folder: folderId, selected: false,} : mail\n    );\n    this.setState({\n      selectedMails: 0,\n      allMail: mails,\n      noContentFoundMessage: 'No mail found in selected folder',\n      alertMessage: 'Mail has been moved successfully',\n      showMessage: true,\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n    });\n  };\n  onLabelMenuItemSelect = (label) => {\n    this.handleRequestClose();\n    const mails = this.state.allMail.map(mail => {\n        if (mail.selected && (mail.folder === this.state.selectedFolder)) {\n          if (mail.labels.includes(label.id)) {\n            return {...mail, labels: this.removeLabel(mail, label.id)};\n          } else {\n            return {...mail, labels: this.addLabel(mail, label.id)};\n          }\n        } else {\n          return mail;\n        }\n      }\n    );\n    this.setState({\n      noContentFoundMessage: 'No mail found in selected label',\n      alertMessage: 'Label Updated Successfully',\n      showMessage: true,\n      allMail: mails,\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n    });\n  };\n  handleRequestClose = () => {\n    this.setState({\n      composeMail: false,\n      showMessage: false,\n      folderMenuState: false,\n      labelMenuState: false,\n      optionMenuState: false\n    });\n  };\n  getNavFilters = () => {\n    return filters.map((filter, index) =>\n      <li key={index} onClick={() => {\n        const filterMails = this.state.allMail.filter(mail => {\n          if (filter.id === 0 && mail.starred) {\n            return mail\n          } else if (filter.id === 1 && mail.important) {\n            return mail\n          }\n          return null;\n        });\n        this.setState({\n          noContentFoundMessage: 'No mail found in selected filter',\n          loader: true,\n          folderMails: filterMails\n        });\n        setTimeout(() => {\n          this.setState({loader: false});\n        }, 1500);\n      }\n      }>\n        <span className=\"jr-link\">\n          <i className={`zmdi zmdi-${filter.icon}`}/>\n          <span>{filter.title}</span>\n        </span>\n      </li>\n    )\n  };\n  onFolderSelect = event => {\n    this.setState({\n      anchorEl: event.currentTarget,\n      folderMenuState: !this.state.folderMenuState\n    })\n  };\n  onLabelSelect = event => {\n    this.setState({\n      anchorEl: event.currentTarget,\n      labelMenuState: !this.state.labelMenuState\n    })\n  };\n  onOptionMenuSelect = event => {\n    this.setState({\n      anchorEl: event.currentTarget,\n      optionMenuState: !this.state.optionMenuState\n    })\n  };\n  onOptionMenuItemSelect = (option) => {\n    switch (option.title) {\n      case 'All':\n        this.handleRequestClose();\n        this.getAllMail();\n        break;\n      case 'None':\n        this.handleRequestClose();\n        this.getUnselectedAllMail();\n        break;\n      case 'Read':\n        this.handleRequestClose();\n        this.getReadMail();\n        break;\n      case 'Unread':\n        this.handleRequestClose();\n        this.getUnreadMail();\n        break;\n      case 'Starred':\n        this.handleRequestClose();\n        this.getStarredMail();\n        break;\n      case 'Unstarred':\n        this.handleRequestClose();\n        this.getUnStarredMail();\n        break;\n      case 'Important':\n        this.handleRequestClose();\n        this.getImportantMail();\n        break;\n      case 'Unimportant':\n        this.handleRequestClose();\n        this.getUnimportantMail();\n        break;\n      default:\n        this.handleRequestClose();\n        this.getAllMail();\n    }\n  };\n  getAllMail = () => {\n    let mails = this.state.allMail.map((mail) => mail.folder === this.state.selectedFolder ? {\n      ...mail,\n      selected: true\n    } : mail);\n    this.setState({\n      selectedMails: mails.length,\n      allMail: mails,\n      optionName: 'All',\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n    });\n  };\n  getUnselectedAllMail = () => {\n    let mails = this.state.allMail.map((mail) => mail.folder === this.state.selectedFolder ? {\n      ...mail,\n      selected: false\n    } : mail);\n    this.setState({\n      selectedMails: 0,\n      allMail: mails,\n      optionName: 'None',\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n    });\n  };\n  getReadMail = () => {\n    let selectedMail = 0;\n    let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\n    mails = mails.map((mail) => {\n      if (mail.read) {\n        selectedMail++;\n        return {...mail, selected: true};\n      }\n      return {...mail, selected: false}\n    });\n    this.setState({\n      selectedMails: selectedMail,\n      allMail: mails,\n      optionName: 'Read',\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n    });\n    return mails;\n  };\n  getUnreadMail = () => {\n    let selectedMail = 0;\n    let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\n    mails = mails.map((mail) => {\n      if (!mail.read) {\n        selectedMail++;\n        return {...mail, selected: true};\n      }\n      return {...mail, selected: false}\n    });\n    this.setState({\n      selectedMails: selectedMail,\n      allMail: mails,\n      optionName: 'Unread',\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n    });\n    return mails;\n  };\n  getStarredMail = () => {\n    let selectedMail = 0;\n    let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\n    mails = mails.map((mail) => {\n      if (mail.starred) {\n        selectedMail++;\n        return {...mail, selected: true};\n      }\n      return {...mail, selected: false}\n    });\n    this.setState({\n      selectedMails: selectedMail,\n      allMail: mails,\n      optionName: 'Starred',\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n    });\n    return mails;\n  };\n  getUnStarredMail = () => {\n    let selectedMail = 0;\n    let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\n    mails = mails.map((mail) => {\n      if (!mail.starred) {\n        selectedMail++;\n        return {...mail, selected: true};\n      }\n      return {...mail, selected: false}\n    });\n    this.setState({\n      selectedMails: selectedMail,\n      allMail: mails,\n      optionName: 'UnStarred',\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n    });\n    return mails;\n  };\n  getImportantMail = () => {\n    let selectedMail = 0;\n    let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\n    mails = mails.map((mail) => {\n      if (mail.important) {\n        selectedMail++;\n        return {...mail, selected: true};\n      }\n      return {...mail, selected: false}\n    });\n    this.setState({\n      selectedMails: selectedMail,\n      allMail: mails,\n      optionName: 'Important',\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n    });\n    return mails;\n  };\n  getUnimportantMail = () => {\n    let selectedMail = 0;\n    let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\n    mails = mails.map((mail) => {\n      if (!mail.important) {\n        selectedMail++;\n        return {...mail, selected: true};\n      }\n      return {...mail, selected: false}\n    });\n    this.setState({\n      selectedMails: selectedMail,\n      optionName: 'Unimportant',\n      allMail: mails,\n      noContentFoundMessage: 'No Mail found in selected Label',\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\n    });\n    return mails;\n  };\n  getNavLabels = () => {\n    return labels.map((label, index) =>\n      <li key={index} onClick={() => {\n        const filterMails = this.state.allMail.filter(mail => mail.labels.includes(label.id));\n        this.setState({\n          loader: true,\n          noContentFoundMessage: 'No mail found in selected label',\n          folderMails: filterMails\n        });\n        setTimeout(() => {\n          this.setState({loader: false});\n        }, 1500);\n      }\n      }>\n        <span className=\"jr-link\">\n          <i className={`zmdi zmdi-circle text-${label.color}`}/>\n          <span>{label.title}</span>\n        </span>\n      </li>\n    )\n  };\n  searchMail = (searchText) => {\n    if (searchText === '') {\n      this.setState({folderMails: this.state.allMail.filter((mail) => !mail.deleted)});\n    } else {\n      const searchMails = this.state.allMail.filter((mail) =>\n        !mail.deleted && mail.subject.toLowerCase().indexOf(searchText.toLowerCase()) > -1);\n      this.setState({\n        folderMails: searchMails\n      });\n    }\n  };\n  displayMail = (currentMail, folderMails, noContentFoundMessage) => {\n    return (<div className=\"module-box-column\">\n      {currentMail === null ?\n        folderMails.length === 0 ?\n          <div className=\"d-flex align-items-center justify-content-center\"\n               style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\n            {noContentFoundMessage}\n          </div>\n          :\n          <MailList mails={folderMails} onStartSelect={this.onStartSelect.bind(this)}\n                    onMailSelect={this.onMailSelect.bind(this)}\n                    width={this.props.width}\n                    onMailChecked={this.onMailChecked.bind(this)}/>\n        :\n        <MailDetail mail={currentMail} onStartSelect={this.onStartSelect.bind(this)}\n                    width={this.props.width}\n                    onImportantSelect={this.onImportantSelect.bind(this)}/>}\n    </div>)\n  };\n  getMailActions = () => {\n    return <div>\n      <IconButton onClick={this.onFolderSelect.bind(this)} className=\"icon-btn\">\n        <i className=\"zmdi zmdi-folder\"/>\n      </IconButton>\n\n      <IconButton onClick={this.onDeleteMail.bind(this)} className=\"icon-btn\">\n        <i className=\"zmdi zmdi-delete\"/>\n      </IconButton>\n\n      <IconButton\n        onClick={this.onLabelSelect.bind(this)} className=\"icon-btn\">\n        <i className=\"zmdi zmdi-label-alt\"/>\n      </IconButton>\n    </div>\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      searchMail: '',\n      noContentFoundMessage: 'No mail found in selected folder',\n      alertMessage: '',\n      showMessage: false,\n      drawerState: false,\n      optionName: 'None',\n      anchorEl: null,\n      allMail: mails,\n      loader: true,\n      currentMail: null,\n      user: {\n        name: 'Robert Johnson',\n        email: 'robert@example.com',\n        avatar: 'https://via.placeholder.com/150x150'\n      },\n      selectedMails: 0,\n      selectedFolder: 0,\n      composeMail: false,\n      labelMenuState: false,\n      folderMenuState: false,\n      optionMenuState: false,\n      folderMails: mails.filter(mail => mail.folder === 0)\n    }\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({loader: false});\n    }, 1500);\n  }\n\n  onMailChecked(data) {\n    data.selected = !data.selected;\n    let selectedMail = 0;\n    const mails = this.state.folderMails.map(mail => {\n        if (mail.selected) {\n          selectedMail++;\n        }\n        if (mail.id === data.id) {\n          if (mail.selected) {\n            selectedMail++;\n          }\n          return data;\n        } else {\n          return mail;\n        }\n      }\n    );\n    this.setState({\n      selectedMails: selectedMail,\n      folderMails: mails\n    });\n  }\n\n  onAllMailSelect() {\n    const selectAll = this.state.selectedMails <= this.state.folderMails.length;\n    if (selectAll) {\n      this.getAllMail();\n    } else {\n      this.getUnselectedAllMail();\n    }\n  }\n\n  removeLabel(mail, label) {\n    mail.labels.splice(mail.labels.indexOf(label), 1);\n    if (this.state.currentMail !== null && mail.id === this.state.currentMail.id) {\n      this.setState({\n        currentMail: {...mail, labels: mail.labels}\n      })\n    }\n    return mail.labels;\n  }\n\n  onStartSelect(data) {\n    data.starred = !data.starred;\n    this.setState({\n      alertMessage: data.starred ? 'Mail Mark as Star' : 'Mail Remove as Star',\n      showMessage: true,\n      folderMails: this.state.folderMails.map(mail =>\n        mail.id === data.id ?\n          data : mail\n      )\n    });\n  }\n\n  onImportantSelect(data) {\n    data.important = !data.important;\n    this.setState({\n      alertMessage: data.important ? 'Mail Mark as Important' : 'Mail Remove as Important',\n      showMessage: true,\n      folderMails: this.state.folderMails.map(mail =>\n        mail.id === data.id ?\n          data : mail\n      )\n    });\n  }\n\n  onMailSend(data) {\n    this.setState(\n      {\n        alertMessage: 'Mail Sent Successfully',\n        showMessage: true,\n        folderMails: this.state.allMail.concat(data),\n        allMail: this.state.allMail.concat(data)\n      }\n    );\n  }\n\n  onMailSelect(mail) {\n    this.setState({\n      loader: true,\n      currentMail: mail,\n    });\n    setTimeout(() => {\n      this.setState({loader: false});\n    }, 1500);\n  }\n\n  addLabel(mail, label) {\n    if (this.state.currentMail !== null && mail.id === this.state.currentMail.id) {\n      this.setState({\n        currentMail: {...mail, labels: mail.labels.concat(label)}\n      })\n    }\n    return mail.labels.concat(label)\n  }\n\n  updateSearch(evt) {\n    this.setState({\n      searchMail: evt.target.value,\n    });\n    this.searchMail(evt.target.value)\n  }\n\n  onToggleDrawer() {\n    this.setState({\n      drawerState: !this.state.drawerState\n    });\n  }\n\n  render() {\n    const {selectedMails, loader, currentMail, folderMails, composeMail, user, alertMessage, showMessage, noContentFoundMessage} = this.state;\n    return (\n\n      <div className=\"app-wrapper\">\n        <div className=\"animated slideInUpTiny animation-duration-3\">\n          <div className=\"app-module\">\n\n            <div className=\"d-block d-xl-none\">\n              <Drawer\n                open={this.state.drawerState}\n                onClose={this.onToggleDrawer.bind(this)}>\n                {this.MailSideBar()}\n              </Drawer>\n            </div>\n            <div className=\"app-module-sidenav d-none d-xl-flex\">\n              {this.MailSideBar()}\n            </div>\n\n            <div className=\"module-box\">\n\n              <div className=\"module-box-header\">\n\n                <IconButton className=\"drawer-btn d-block d-xl-none\" aria-label=\"Menu\"\n                            onClick={this.onToggleDrawer.bind(this)}>\n                  <i className=\"zmdi zmdi-menu\"/>\n                </IconButton>\n                <AppModuleHeader placeholder=\"Search mails\" user={this.state.user}\n                                 onChange={this.updateSearch.bind(this)}\n                                 value={this.state.searchMail}/>\n\n              </div>\n\n              <div className=\"module-box-content\">\n                <div className=\"module-box-topbar\">\n                  {this.state.currentMail === null ?\n                    <div className=\"d-flex\">\n                      <Checkbox color=\"primary\"\n                                indeterminate={selectedMails > 0 && selectedMails < folderMails.length}\n                                checked={selectedMails > 0}\n                                onChange={this.onAllMailSelect.bind(this)}\n                                value=\"SelectMail\"/>\n                      <div className=\"d-flex align-items-center\" onClick={this.onOptionMenuSelect.bind(this)}>\n                        <span className=\"px-2\"> {this.state.optionName}</span>\n                        <IconButton className=\"icon-btn-sm\">\n                          <i className=\"zmdi zmdi-caret-down\"/>\n                        </IconButton>\n                      </div>\n                    </div>\n                    :\n                    <IconButton className=\"icon-btn\"\n                                onClick={() => {\n                                  this.setState({\n                                    currentMail: null\n                                  })\n                                }}>\n                      <i className=\"zmdi zmdi-arrow-back\"/>\n                    </IconButton>\n                  }\n\n                  {(selectedMails > 0) && this.getMailActions()}\n\n\n                  <Menu id=\"option-menu\"\n                        anchorEl={this.state.anchorEl}\n                        open={this.state.optionMenuState}\n                        onClose={this.handleRequestClose}\n                        MenuListProps={{\n                          style: {\n                            width: 150,\n                          },\n                        }}>\n                    {options.map(option =>\n                      <MenuItem key={option.title}\n                                onClick={this.onOptionMenuItemSelect.bind(this, option)}>\n                        {option.title}\n                      </MenuItem>,\n                    )}\n                  </Menu>\n\n                  <Menu id=\"folder-menu\"\n                        anchorEl={this.state.anchorEl}\n                        open={this.state.folderMenuState}\n                        onClose={this.handleRequestClose}\n                        MenuListProps={{\n                          style: {\n                            width: 150,\n                          },\n                        }}>\n                    {folders.map(folder =>\n                      <MenuItem key={folder.id}\n                                onClick={this.onFolderMenuItemSelect.bind(this, folder.id)}>\n                        {folder.title}\n                      </MenuItem>,\n                    )}\n                  </Menu>\n                  <Menu id=\"label-menu\"\n                        anchorEl={this.state.anchorEl}\n                        open={this.state.labelMenuState}\n                        onClose={this.handleRequestClose}\n                        MenuListProps={{\n                          style: {\n                            width: 150,\n                          },\n                        }}>\n                    {labels.map(label =>\n                      <MenuItem key={label.id}\n                                onClick={this.onLabelMenuItemSelect.bind(this, label)}>\n                        {label.title}\n                      </MenuItem>,\n                    )}\n                  </Menu>\n                </div>\n\n                {loader ?\n                  <div className=\"loader-view\"\n                       style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\n                    <CircularProgress/>\n                  </div> : this.displayMail(currentMail, folderMails, noContentFoundMessage)}\n\n                <ComposeMail open={composeMail} user={user}\n                             onClose={this.handleRequestClose.bind(this)}\n                             onMailSend={this.onMailSend.bind(this)}/>\n\n              </div>\n            </div>\n          </div>\n          <Snackbar\n            anchorOrigin={{vertical: 'top', horizontal: 'center'}}\n            open={showMessage}\n            autoHideDuration={3000}\n            onClose={this.handleRequestClose}\n            ContentProps={{\n              'aria-describedby': 'message-id',\n            }}\n            message={<span id=\"message-id\">{alertMessage}</span>}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({settings}) => {\n  const {width} = settings;\n  return {width}\n};\nexport default connect(mapStateToProps)(Mail);"]},"metadata":{},"sourceType":"module"}