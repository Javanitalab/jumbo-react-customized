{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/list/checkBoxListControl/CheckBoxListControl.js\";\nimport React, { Component } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { Badge } from \"reactstrap\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nconst users = [{\n  id: 1,\n  image: 'https://via.placeholder.com/150x150',\n  email: 'henrric@example.com'\n}, {\n  id: 2,\n  image: 'https://via.placeholder.com/120x120',\n  email: 'stella02@example.com'\n}, {\n  id: 3,\n  image: 'https://via.placeholder.com/150x150',\n  email: 'chrris@example.com'\n}, {\n  id: 4,\n  image: 'https://via.placeholder.com/260x260',\n  email: 'jhonson@example.com'\n}, {\n  id: 5,\n  image: 'https://via.placeholder.com/208x208',\n  email: 'domnic@example.com'\n}];\n\nclass CheckBoxListControl extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      checked: [1]\n    };\n\n    this.handleToggle = (event, value) => {\n      const {\n        checked\n      } = this.state;\n      const currentIndex = checked.indexOf(value);\n      const newChecked = [...checked];\n\n      if (currentIndex === -1) {\n        newChecked.push(value);\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n\n      this.setState({\n        checked: newChecked\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, users.map(user => React.createElement(ListItem, {\n      button: true,\n      key: user.email,\n      onClick: event => this.handleToggle(event, user.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(ListItemAvatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      alt: \"Remy Sharp\",\n      src: user.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      className: \"br-break\",\n      primary: user.email,\n      secondary: \"Nov 8, 2017\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Badge, {\n      className: \"mr-4 mt-2 text-uppercase\",\n      color: \"success\",\n      pill: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Agent\"), React.createElement(ListItemSecondaryAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      color: \"primary\",\n      checked: this.state.checked.indexOf(user.id) !== -1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default CheckBoxListControl;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/list/checkBoxListControl/CheckBoxListControl.js"],"names":["React","Component","List","ListItem","ListItemSecondaryAction","ListItemText","Checkbox","Avatar","Badge","ListItemAvatar","users","id","image","email","CheckBoxListControl","state","checked","handleToggle","event","value","currentIndex","indexOf","newChecked","push","splice","setState","render","map","user"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { Badge } from \"reactstrap\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\n\nconst users = [\n  {id: 1, image: 'https://via.placeholder.com/150x150', email: 'henrric@example.com'},\n  {id: 2, image: 'https://via.placeholder.com/120x120', email: 'stella02@example.com'},\n  {id: 3, image: 'https://via.placeholder.com/150x150', email: 'chrris@example.com'},\n  {id: 4, image: 'https://via.placeholder.com/260x260', email: 'jhonson@example.com'},\n  {id: 5, image: 'https://via.placeholder.com/208x208', email: 'domnic@example.com'}];\n\nclass CheckBoxListControl extends Component {\n  state = {\n    checked: [1],\n  };\n\n  handleToggle = (event, value) => {\n    const {checked} = this.state;\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    this.setState({\n      checked: newChecked,\n    });\n  };\n\n  render() {\n    return (\n      <List>\n        {users.map(user =>\n          <ListItem button key={user.email} onClick={event => this.handleToggle(event, user.id)}>\n            <ListItemAvatar>\n              <Avatar alt=\"Remy Sharp\" src={user.image}/>\n            </ListItemAvatar>\n            <ListItemText className=\"br-break\" primary={user.email} secondary=\"Nov 8, 2017\"/>\n            <Badge className=\"mr-4 mt-2 text-uppercase\" color=\"success\" pill>Agent</Badge>\n            <ListItemSecondaryAction>\n              <Checkbox color=\"primary\"\n                        checked={this.state.checked.indexOf(user.id) !== -1}\n              />\n            </ListItemSecondaryAction>\n          </ListItem>,\n        )}\n      </List>\n    );\n  }\n}\n\nexport default CheckBoxListControl;"]},"metadata":{},"sourceType":"module"}