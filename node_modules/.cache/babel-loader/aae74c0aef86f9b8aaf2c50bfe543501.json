{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/todo/basic/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Drawer from '@material-ui/core/Drawer';\nimport { arrayMove } from 'react-sortable-hoc';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport toDos from '../data/todo';\nimport filters from '../data/filters';\nimport labels from '../data/labels';\nimport options from '../data/options';\nimport todoConversation from '../data/todoConversation';\nimport ToDoList from 'components/todo/ToDoList';\nimport ToDoDetail from 'components/todo/ToDoDetail/index';\nimport AppModuleHeader from 'components/AppModuleHeader/index';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IntlMessages from 'util/IntlMessages';\nimport CustomScrollbars from 'util/CustomScrollbars';\n\nclass ToDo extends Component {\n  constructor() {\n    super();\n\n    this.onSortEnd = ({\n      oldIndex,\n      newIndex\n    }) => {\n      this.setState({\n        toDos: arrayMove(this.state.toDos, oldIndex, newIndex)\n      });\n    };\n\n    this.onLabelSelect = event => {\n      this.setState({\n        anchorEl: event.currentTarget,\n        labelMenuState: !this.state.labelMenuState\n      });\n    };\n\n    this.onOptionMenuSelect = event => {\n      this.setState({\n        anchorEl: event.currentTarget,\n        optionMenuState: !this.state.optionMenuState\n      });\n    };\n\n    this.onOptionMenuItemSelect = option => {\n      switch (option.title) {\n        case 'All':\n          this.handleRequestClose();\n          this.getAllTodo();\n          break;\n\n        case 'None':\n          this.handleRequestClose();\n          this.getUnselectedAllTodo();\n          break;\n\n        case 'Starred':\n          this.handleRequestClose();\n          this.getStarredToDo();\n          break;\n\n        case 'Unstarred':\n          this.handleRequestClose();\n          this.getUnStarredTodo();\n          break;\n\n        case 'Important':\n          this.handleRequestClose();\n          this.getImportantToDo();\n          break;\n\n        case 'Unimportant':\n          this.handleRequestClose();\n          this.getUnimportantToDo();\n          break;\n\n        default:\n          this.handleRequestClose();\n          this.getAllTodo();\n      }\n    };\n\n    this.getAllTodo = () => {\n      let toDos = this.state.allToDos.map(todo => todo ? { ...todo,\n        selected: true\n      } : todo);\n      this.setState({\n        selectedToDos: toDos.length,\n        allToDos: toDos,\n        optionName: 'All',\n        toDos: toDos\n      });\n    };\n\n    this.getUnselectedAllTodo = () => {\n      let toDos = this.state.allToDos.map(todo => todo ? { ...todo,\n        selected: false\n      } : todo);\n      this.setState({\n        selectedToDos: 0,\n        allToDos: toDos,\n        optionName: 'None',\n        toDos: toDos\n      });\n    };\n\n    this.getStarredToDo = () => {\n      let selectedToDos = 0;\n      let toDos = this.state.allToDos.map(todo => {\n        if (todo.starred) {\n          selectedToDos++;\n          return { ...todo,\n            selected: true\n          };\n        }\n\n        return { ...todo,\n          selected: false\n        };\n      });\n      this.setState({\n        selectedToDos: selectedToDos,\n        allToDos: toDos,\n        toDos: toDos.filter(todo => !todo.deleted)\n      });\n      return toDos;\n    };\n\n    this.getUnStarredTodo = () => {\n      let selectedToDos = 0;\n      let toDos = this.state.allToDos.map(todo => {\n        if (!todo.starred) {\n          selectedToDos++;\n          return { ...todo,\n            selected: true\n          };\n        }\n\n        return { ...todo,\n          selected: false\n        };\n      });\n      this.setState({\n        selectedToDos: selectedToDos,\n        allToDos: toDos,\n        optionName: 'Unstarred',\n        toDos: toDos.filter(todo => !todo.deleted)\n      });\n      return toDos;\n    };\n\n    this.getImportantToDo = () => {\n      let selectedToDos = 0;\n      let toDos = this.state.allToDos.map(todo => {\n        if (todo.important) {\n          selectedToDos++;\n          return { ...todo,\n            selected: true\n          };\n        }\n\n        return { ...todo,\n          selected: false\n        };\n      });\n      this.setState({\n        selectedToDos: selectedToDos,\n        allToDos: toDos,\n        optionName: 'Important',\n        toDos: toDos.filter(todo => !todo.deleted)\n      });\n      return toDos;\n    };\n\n    this.getUnimportantToDo = () => {\n      let selectedToDos = 0;\n      let toDos = this.state.allToDos.map(todo => {\n        if (!todo.important) {\n          selectedToDos++;\n          return { ...todo,\n            selected: true\n          };\n        }\n\n        return { ...todo,\n          selected: false\n        };\n      });\n      this.setState({\n        selectedToDos: selectedToDos,\n        allToDos: toDos,\n        optionName: 'Unimportant',\n        toDos: toDos.filter(todo => !todo.deleted)\n      });\n      return toDos;\n    };\n\n    this.onLabelMenuItemSelect = label => {\n      this.handleRequestClose();\n      const toDos = this.state.allToDos.map(todo => {\n        if (todo.selected) {\n          if (todo.labels.includes(label.id)) {\n            return { ...todo,\n              labels: this.removeLabel(todo, label.id)\n            };\n          } else {\n            return { ...todo,\n              labels: this.addLabel(todo, label.id)\n            };\n          }\n        } else {\n          return todo;\n        }\n      });\n      this.setState({\n        alertMessage: 'Label Updated Successfully',\n        showMessage: true,\n        allToDos: toDos,\n        toDos: toDos\n      });\n    };\n\n    this.handleRequestClose = () => {\n      this.setState({\n        showMessage: false,\n        addTodo: false,\n        labelMenuState: false,\n        optionMenuState: false\n      });\n    };\n\n    this.onLabelUpdate = (data, label) => {\n      if (data.labels.includes(label.id)) {\n        data.labels = this.removeLabel(data, label.id);\n      } else {\n        data.labels = this.addLabel(data, label.id);\n      }\n\n      this.handleRequestClose();\n      const toDos = this.state.allToDos.map(todo => {\n        if (todo.id === data.id) {\n          return data;\n        } else {\n          return todo;\n        }\n      });\n      this.setState({\n        alertMessage: 'Label Updated Successfully',\n        showMessage: true,\n        currentTodo: data,\n        allToDos: toDos,\n        toDos: toDos\n      });\n    };\n\n    this.onMarkAsStart = data => {\n      const toDos = this.state.allToDos.map(todo => {\n        if (todo.id === data.id) {\n          return data;\n        } else {\n          return todo;\n        }\n      });\n      this.setState({\n        alertMessage: 'ToDo Updated Successfully',\n        showMessage: true,\n        allToDos: toDos,\n        toDos: toDos\n      });\n    };\n\n    this.onToDoUpdate = data => {\n      this.handleRequestClose();\n      const toDos = this.state.allToDos.map(todo => {\n        if (todo.id === data.id) {\n          return data;\n        } else {\n          return todo;\n        }\n      });\n      this.setState({\n        alertMessage: 'ToDo Updated Successfully',\n        showMessage: true,\n        currentTodo: data,\n        allToDos: toDos,\n        toDos: toDos\n      });\n    };\n\n    this.onDeleteToDo = data => {\n      let selectedToDos = 0;\n      const toDos = this.state.allToDos.map(todo => {\n        if (todo.selected) {\n          selectedToDos++;\n        }\n\n        if (data.id === todo.id) {\n          if (todo.selected) {\n            selectedToDos--;\n          }\n\n          return { ...todo,\n            deleted: true\n          };\n        } else {\n          return todo;\n        }\n      });\n      this.setState({\n        alertMessage: 'ToDo Deleted Successfully',\n        showMessage: true,\n        allToDos: toDos,\n        currentTodo: null,\n        selectedToDos: selectedToDos,\n        toDos: toDos.filter(todo => !todo.deleted)\n      });\n    };\n\n    this.getNavFilters = () => {\n      return filters.map((filter, index) => React.createElement(\"li\", {\n        key: index,\n        onClick: () => {\n          const filterMails = this.state.allToDos.filter(todo => {\n            if (filter.id === 0 && todo.starred) {\n              return todo;\n            } else if (filter.id === 1 && todo.important) {\n              return todo;\n            } else if (filter.id === 2 && todo.important) {\n              return todo;\n            } else if (filter.id === 3 && todo.important) {\n              return todo;\n            } else if (filter.id === 4 && todo.completed) {\n              return todo;\n            } else if (filter.id === 5 && todo.deleted) {\n              return todo;\n            } else return todo;\n          });\n          this.setState({\n            loader: true,\n            currentTodo: null,\n            filter: filter.id,\n            toDos: filterMails\n          });\n          setTimeout(() => {\n            this.setState({\n              loader: false\n            });\n          }, 1500);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: `jr-link ${filter.id === this.state.selectedSectionId ? 'active' : ''}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: `zmdi zmdi-${filter.icon}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, filter.title))));\n    };\n\n    this.getNavLabels = () => {\n      return labels.map((label, index) => React.createElement(\"li\", {\n        key: index,\n        onClick: () => {\n          const filterMails = this.state.allToDos.filter(todo => todo.labels.includes(label.id));\n          this.setState({\n            loader: true,\n            currentTodo: null,\n            toDos: filterMails\n          });\n          setTimeout(() => {\n            this.setState({\n              loader: false\n            });\n          }, 1500);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"jr-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: `zmdi zmdi-circle text-${label.color}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, label.title))));\n    };\n\n    this.ToDoSideBar = () => {\n      return React.createElement(\"div\", {\n        className: \"module-side\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"module-side-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"module-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-email mr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"sidebar.appModule.toDo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"module-side-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, React.createElement(CustomScrollbars, {\n        className: \"module-side-scroll scrollbar\",\n        style: {\n          height: this.props.width >= 1200 ? 'calc(100vh - 200px)' : 'calc(100vh - 80px)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"module-add-task\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: \"btn btn-primary btn-block\",\n        onClick: () => {\n          this.setState({\n            addTodo: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, \" \", React.createElement(IntlMessages, {\n        id: \"todo.addTask\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }), \" \")), React.createElement(\"ul\", {\n        className: \"module-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        onClick: () => {\n          this.setState({\n            currentTodo: null,\n            toDos: this.state.allToDos\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"jr-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"todo.all\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      })))), React.createElement(\"li\", {\n        className: \"module-nav-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"todo.filters\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      })), this.getNavFilters(), React.createElement(\"li\", {\n        className: \"module-nav-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"todo.labels\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      })), this.getNavLabels()))));\n    };\n\n    this.searchTodo = searchText => {\n      if (searchText === '') {\n        this.setState({\n          toDos: this.state.allToDos.filter(todo => !todo.deleted)\n        });\n      } else {\n        const searchToDos = this.state.allToDos.filter(todo => !todo.deleted && todo.title.toLowerCase().indexOf(searchText.toLowerCase()) > -1);\n        this.setState({\n          toDos: searchToDos\n        });\n      }\n    };\n\n    this.showToDos = ({\n      currentTodo,\n      toDos,\n      conversation,\n      user\n    }) => {\n      return currentTodo === null ? React.createElement(ToDoList, {\n        toDos: toDos,\n        onSortEnd: this.onSortEnd,\n        onMarkAsStart: this.onMarkAsStart.bind(this),\n        width: this.props.width,\n        onTodoSelect: this.onTodoSelect.bind(this),\n        onTodoChecked: this.onTodoChecked.bind(this),\n        useDragHandle: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }) : React.createElement(ToDoDetail, {\n        todo: currentTodo,\n        user: user,\n        width: this.props.width,\n        conversation: conversation,\n        onLabelUpdate: this.onLabelUpdate.bind(this),\n        onToDoUpdate: this.onToDoUpdate.bind(this),\n        onDeleteToDo: this.onDeleteToDo.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      });\n    };\n\n    this.state = {\n      searchTodo: '',\n      alertMessage: '',\n      loader: false,\n      showMessage: false,\n      drawerState: false,\n      optionName: 'None',\n      anchorEl: null,\n      allToDos: toDos,\n      currentTodo: null,\n      user: {\n        name: 'Robert Johnson',\n        email: 'robert.johnson@example.com',\n        avatar: 'https://via.placeholder.com/150x150'\n      },\n      selectedToDos: 0,\n      labelMenuState: false,\n      optionMenuState: false,\n      toDos: toDos,\n      filter: -1,\n      todoConversation,\n      conversation: null\n    };\n  }\n\n  getToDoConversation(id) {\n    return todoConversation.find(conversation => conversation.id === id);\n  }\n\n  onTodoChecked(data) {\n    data.selected = !data.selected;\n    let selectedToDos = 0;\n    const toDos = this.state.toDos.map(todo => {\n      if (todo.selected) {\n        selectedToDos++;\n      }\n\n      if (todo.id === data.id) {\n        if (todo.selected) {\n          selectedToDos++;\n        }\n\n        return data;\n      } else {\n        return todo;\n      }\n    });\n    this.setState({\n      selectedToDos: selectedToDos,\n      toDos: toDos\n    });\n  }\n\n  onAllTodoSelect() {\n    const selectAll = this.state.selectedToDos < this.state.toDos.length;\n\n    if (selectAll) {\n      this.getAllTodo();\n    } else {\n      this.getUnselectedAllTodo();\n    }\n  }\n\n  onTodoAdd(data) {\n    this.setState({\n      toDos: this.state.allToDos.concat(data),\n      allToDos: this.state.allToDos.concat(data)\n    });\n  }\n\n  onTodoSelect(todo) {\n    let conversationList = this.getToDoConversation(todo.id);\n\n    if (conversationList) {\n      conversationList = conversationList.conversationData;\n    } else {\n      conversationList = [];\n    }\n\n    this.setState({\n      currentTodo: todo,\n      loader: true,\n      conversation: conversationList\n    });\n    setTimeout(() => {\n      this.setState({\n        loader: false\n      });\n    }, 1500);\n  }\n\n  removeLabel(todo, label) {\n    todo.labels.splice(todo.labels.indexOf(label), 1);\n    return todo.labels;\n  }\n\n  addLabel(todo, label) {\n    todo.labels = todo.labels.concat(label);\n    return todo.labels;\n  }\n\n  onToggleDrawer() {\n    this.setState({\n      drawerState: !this.state.drawerState\n    });\n  }\n\n  updateSearch(evt) {\n    this.setState({\n      searchTodo: evt.target.value\n    });\n    this.searchTodo(evt.target.value);\n  }\n\n  render() {\n    const {\n      selectedToDos,\n      loader,\n      toDos,\n      alertMessage,\n      showMessage\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"app-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"animated slideInUpTiny animation-duration-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"app-module\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-block d-xl-none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }, React.createElement(Drawer, {\n      open: this.state.drawerState,\n      onClose: this.onToggleDrawer.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530\n      },\n      __self: this\n    }, this.ToDoSideBar())), React.createElement(\"div\", {\n      className: \"app-module-sidenav d-none d-xl-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536\n      },\n      __self: this\n    }, this.ToDoSideBar()), React.createElement(\"div\", {\n      className: \"module-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"module-box-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: \"drawer-btn d-block d-xl-none\",\n      \"aria-label\": \"Menu\",\n      onClick: this.onToggleDrawer.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"zmdi zmdi-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545\n      },\n      __self: this\n    })), React.createElement(AppModuleHeader, {\n      placeholder: \"Search To Do\",\n      user: this.state.user,\n      onChange: this.updateSearch.bind(this),\n      value: this.state.searchTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"module-box-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    }, this.state.currentTodo === null ? React.createElement(\"div\", {\n      className: \"module-box-topbar module-box-topbar-todo d-flex flex-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      color: \"primary\",\n      indeterminate: selectedToDos > 0 && selectedToDos < toDos.length,\n      checked: selectedToDos > 0,\n      onChange: this.onAllTodoSelect.bind(this),\n      value: \"SelectMail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"d-flex align-items-center\",\n      onClick: this.onOptionMenuSelect.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"px-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561\n      },\n      __self: this\n    }, \" \", this.state.optionName), React.createElement(IconButton, {\n      className: \"icon-btn-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"zmdi zmdi-caret-down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    }))), selectedToDos > 0 && React.createElement(IconButton, {\n      className: \"icon-btn\",\n      onClick: this.onLabelSelect.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"zmdi zmdi-label-alt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570\n      },\n      __self: this\n    }))) : React.createElement(\"div\", {\n      className: \"module-box-topbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: \"icon-btn\",\n      onClick: () => {\n        this.setState({\n          currentTodo: null\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"zmdi zmdi-arrow-back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581\n      },\n      __self: this\n    }))), React.createElement(Menu, {\n      id: \"option-menu\",\n      anchorEl: this.state.anchorEl,\n      open: this.state.optionMenuState,\n      onClose: this.handleRequestClose,\n      MenuListProps: {\n        style: {\n          width: 150\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587\n      },\n      __self: this\n    }, options.map(option => React.createElement(MenuItem, {\n      key: option.title,\n      onClick: this.onOptionMenuItemSelect.bind(this, option),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598\n      },\n      __self: this\n    }, option.title))), React.createElement(Menu, {\n      id: \"label-menu\",\n      anchorEl: this.state.anchorEl,\n      open: this.state.labelMenuState,\n      onClose: this.handleRequestClose,\n      MenuListProps: {\n        style: {\n          width: 150\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605\n      },\n      __self: this\n    }, labels.map(label => React.createElement(MenuItem, {\n      key: label.id,\n      onClick: this.onLabelMenuItemSelect.bind(this, label),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616\n      },\n      __self: this\n    }, label.title))), loader ? React.createElement(\"div\", {\n      className: \"loader-view\",\n      style: {\n        height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626\n      },\n      __self: this\n    })) : this.showToDos(this.state)))), React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      open: showMessage,\n      autoHideDuration: 3000,\n      onClose: this.handleRequestClose,\n      ContentProps: {\n        'aria-describedby': 'message-id'\n      },\n      message: React.createElement(\"span\", {\n        id: \"message-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641\n        },\n        __self: this\n      }, alertMessage),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = ({\n  settings\n}) => {\n  const {\n    width\n  } = settings;\n  return {\n    width\n  };\n};\n\nexport default connect(mapStateToProps)(ToDo);","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/todo/basic/index.js"],"names":["React","Component","connect","Drawer","arrayMove","Button","Snackbar","Checkbox","IconButton","Menu","MenuItem","toDos","filters","labels","options","todoConversation","ToDoList","ToDoDetail","AppModuleHeader","CircularProgress","IntlMessages","CustomScrollbars","ToDo","constructor","onSortEnd","oldIndex","newIndex","setState","state","onLabelSelect","event","anchorEl","currentTarget","labelMenuState","onOptionMenuSelect","optionMenuState","onOptionMenuItemSelect","option","title","handleRequestClose","getAllTodo","getUnselectedAllTodo","getStarredToDo","getUnStarredTodo","getImportantToDo","getUnimportantToDo","allToDos","map","todo","selected","selectedToDos","length","optionName","starred","filter","deleted","important","onLabelMenuItemSelect","label","includes","id","removeLabel","addLabel","alertMessage","showMessage","addTodo","onLabelUpdate","data","currentTodo","onMarkAsStart","onToDoUpdate","onDeleteToDo","getNavFilters","index","filterMails","completed","loader","setTimeout","selectedSectionId","icon","getNavLabels","color","ToDoSideBar","height","props","width","searchTodo","searchText","searchToDos","toLowerCase","indexOf","showToDos","conversation","user","bind","onTodoSelect","onTodoChecked","drawerState","name","email","avatar","getToDoConversation","find","onAllTodoSelect","selectAll","onTodoAdd","concat","conversationList","conversationData","splice","onToggleDrawer","updateSearch","evt","target","value","render","style","vertical","horizontal","mapStateToProps","settings"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport Drawer from '@material-ui/core/Drawer';\nimport {arrayMove} from 'react-sortable-hoc';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport toDos from '../data/todo';\nimport filters from '../data/filters';\nimport labels from '../data/labels';\nimport options from '../data/options';\nimport todoConversation from '../data/todoConversation';\nimport ToDoList from 'components/todo/ToDoList';\nimport ToDoDetail from 'components/todo/ToDoDetail/index';\nimport AppModuleHeader from 'components/AppModuleHeader/index';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IntlMessages from 'util/IntlMessages';\nimport CustomScrollbars from 'util/CustomScrollbars';\n\n\nclass ToDo extends Component {\n\n  onSortEnd = ({oldIndex, newIndex}) => {\n    this.setState({\n      toDos: arrayMove(this.state.toDos, oldIndex, newIndex),\n    });\n  };\n  onLabelSelect = event => {\n    this.setState({\n      anchorEl: event.currentTarget,\n      labelMenuState: !this.state.labelMenuState\n    })\n  };\n  onOptionMenuSelect = event => {\n    this.setState({\n      anchorEl: event.currentTarget,\n      optionMenuState: !this.state.optionMenuState\n    })\n  };\n  onOptionMenuItemSelect = (option) => {\n    switch (option.title) {\n      case 'All':\n        this.handleRequestClose();\n        this.getAllTodo();\n        break;\n      case 'None':\n        this.handleRequestClose();\n        this.getUnselectedAllTodo();\n        break;\n      case 'Starred':\n        this.handleRequestClose();\n        this.getStarredToDo();\n        break;\n      case 'Unstarred':\n        this.handleRequestClose();\n        this.getUnStarredTodo();\n        break;\n      case 'Important':\n        this.handleRequestClose();\n        this.getImportantToDo();\n        break;\n      case 'Unimportant':\n        this.handleRequestClose();\n        this.getUnimportantToDo();\n        break;\n      default:\n        this.handleRequestClose();\n        this.getAllTodo();\n    }\n  };\n  getAllTodo = () => {\n    let toDos = this.state.allToDos.map((todo) => todo ? {\n      ...todo,\n      selected: true\n    } : todo);\n    this.setState({\n      selectedToDos: toDos.length,\n      allToDos: toDos,\n      optionName: 'All',\n      toDos: toDos\n    });\n  };\n  getUnselectedAllTodo = () => {\n    let toDos = this.state.allToDos.map((todo) => todo ? {\n      ...todo,\n      selected: false\n    } : todo);\n    this.setState({\n      selectedToDos: 0,\n      allToDos: toDos,\n      optionName: 'None',\n      toDos: toDos\n    });\n  };\n  getStarredToDo = () => {\n    let selectedToDos = 0;\n    let toDos = this.state.allToDos.map((todo) => {\n      if (todo.starred) {\n        selectedToDos++;\n        return {...todo, selected: true};\n      }\n      return {...todo, selected: false}\n    });\n    this.setState({\n      selectedToDos: selectedToDos,\n      allToDos: toDos,\n      toDos: toDos.filter(todo => !todo.deleted)\n    });\n    return toDos;\n  };\n  getUnStarredTodo = () => {\n    let selectedToDos = 0;\n    let toDos = this.state.allToDos.map((todo) => {\n      if (!todo.starred) {\n        selectedToDos++;\n        return {...todo, selected: true};\n      }\n      return {...todo, selected: false}\n    });\n    this.setState({\n      selectedToDos: selectedToDos,\n      allToDos: toDos,\n      optionName: 'Unstarred',\n      toDos: toDos.filter(todo => !todo.deleted)\n    });\n    return toDos;\n  };\n  getImportantToDo = () => {\n    let selectedToDos = 0;\n    let toDos = this.state.allToDos.map((todo) => {\n      if (todo.important) {\n        selectedToDos++;\n        return {...todo, selected: true};\n      }\n      return {...todo, selected: false}\n    });\n    this.setState({\n      selectedToDos: selectedToDos,\n      allToDos: toDos,\n      optionName: 'Important',\n      toDos: toDos.filter(todo => !todo.deleted)\n    });\n    return toDos;\n  };\n  getUnimportantToDo = () => {\n    let selectedToDos = 0;\n    let toDos = this.state.allToDos.map((todo) => {\n      if (!todo.important) {\n        selectedToDos++;\n        return {...todo, selected: true};\n      }\n      return {...todo, selected: false}\n    });\n    this.setState({\n      selectedToDos: selectedToDos,\n      allToDos: toDos,\n      optionName: 'Unimportant',\n      toDos: toDos.filter(todo => !todo.deleted)\n    });\n\n    return toDos;\n  };\n  onLabelMenuItemSelect = (label) => {\n    this.handleRequestClose();\n    const toDos = this.state.allToDos.map(todo => {\n        if (todo.selected) {\n          if (todo.labels.includes(label.id)) {\n            return {...todo, labels: this.removeLabel(todo, label.id)};\n          } else {\n            return {...todo, labels: this.addLabel(todo, label.id)};\n          }\n        } else {\n          return todo;\n        }\n      }\n    );\n    this.setState({\n      alertMessage: 'Label Updated Successfully',\n      showMessage: true,\n      allToDos: toDos,\n      toDos: toDos\n    });\n  };\n  handleRequestClose = () => {\n    this.setState({showMessage: false, addTodo: false, labelMenuState: false, optionMenuState: false,});\n  };\n  onLabelUpdate = (data, label) => {\n    if (data.labels.includes(label.id)) {\n      data.labels = this.removeLabel(data, label.id);\n    } else {\n      data.labels = this.addLabel(data, label.id);\n    }\n    this.handleRequestClose();\n    const toDos = this.state.allToDos.map(todo => {\n        if (todo.id === data.id) {\n          return data;\n        } else {\n          return todo;\n        }\n      }\n    );\n\n    this.setState({\n      alertMessage: 'Label Updated Successfully',\n      showMessage: true,\n      currentTodo: data,\n      allToDos: toDos,\n      toDos: toDos,\n    });\n  };\n  onMarkAsStart = (data) => {\n    const toDos = this.state.allToDos.map(todo => {\n      if (todo.id === data.id) {\n        return data;\n      } else {\n        return todo;\n      }\n    });\n    this.setState({\n      alertMessage: 'ToDo Updated Successfully',\n      showMessage: true,\n      allToDos: toDos,\n      toDos: toDos,\n    });\n  };\n\n  onToDoUpdate = (data) => {\n    this.handleRequestClose();\n    const toDos = this.state.allToDos.map(todo => {\n      if (todo.id === data.id) {\n        return data;\n      } else {\n        return todo;\n      }\n    });\n    this.setState({\n      alertMessage: 'ToDo Updated Successfully',\n      showMessage: true,\n      currentTodo: data,\n      allToDos: toDos,\n      toDos: toDos,\n    });\n  };\n\n\n  onDeleteToDo = (data) => {\n    let selectedToDos = 0;\n    const toDos = this.state.allToDos.map(todo => {\n        if (todo.selected) {\n          selectedToDos++\n        }\n        if (data.id === todo.id) {\n          if (todo.selected) {\n            selectedToDos--\n          }\n          return {...todo, deleted: true};\n        } else {\n          return todo;\n        }\n      }\n    );\n    this.setState({\n      alertMessage: 'ToDo Deleted Successfully',\n      showMessage: true,\n      allToDos: toDos,\n      currentTodo: null,\n      selectedToDos: selectedToDos,\n      toDos: toDos.filter((todo) => !todo.deleted)\n    });\n\n  };\n  getNavFilters = () => {\n    return filters.map((filter, index) =>\n      <li key={index} onClick={() => {\n        const filterMails = this.state.allToDos.filter(todo => {\n          if (filter.id === 0 && todo.starred) {\n            return todo\n          } else if (filter.id === 1 && todo.important) {\n            return todo\n          } else if (filter.id === 2 && todo.important) {\n            return todo\n          } else if (filter.id === 3 && todo.important) {\n            return todo\n          } else if (filter.id === 4 && todo.completed) {\n            return todo\n          } else if (filter.id === 5 && todo.deleted) {\n            return todo\n          } else return todo;\n        });\n        this.setState({\n          loader: true,\n          currentTodo: null,\n          filter: filter.id,\n          toDos: filterMails\n        });\n        setTimeout(() => {\n          this.setState({loader: false});\n        }, 1500);\n      }\n      }>\n        <span className={`jr-link ${filter.id === this.state.selectedSectionId ? 'active' : ''}`}>\n          <i className={`zmdi zmdi-${filter.icon}`}/>\n          <span>{filter.title}</span>\n        </span>\n      </li>\n    )\n  };\n  getNavLabels = () => {\n    return labels.map((label, index) =>\n      <li key={index} onClick={() => {\n        const filterMails = this.state.allToDos.filter(todo => todo.labels.includes(label.id));\n        this.setState({\n          loader: true,\n          currentTodo: null,\n          toDos: filterMails\n        });\n        setTimeout(() => {\n          this.setState({loader: false});\n        }, 1500);\n      }\n      }>\n        <span className=\"jr-link\">\n          <i className={`zmdi zmdi-circle text-${label.color}`}/>\n          <span>{label.title}</span>\n        </span>\n      </li>\n    )\n  };\n  ToDoSideBar = () => {\n    return <div className=\"module-side\">\n      <div className=\"module-side-header\">\n        <div className=\"module-logo\">\n          <i className=\"zmdi zmdi-email mr-4\"/>\n          <span><IntlMessages id=\"sidebar.appModule.toDo\"/></span>\n        </div>\n\n      </div>\n      <div className=\"module-side-content\">\n        <CustomScrollbars className=\"module-side-scroll scrollbar\"\n                          style={{height: this.props.width >= 1200 ? 'calc(100vh - 200px)' : 'calc(100vh - 80px)'}}>\n          <div className=\"module-add-task\">\n            <Button variant=\"contained\" color=\"primary\" className=\"btn btn-primary btn-block\"\n                    onClick={() => {\n                      this.setState({addTodo: true})\n                    }}> <IntlMessages id=\"todo.addTask\"/> </Button>\n          </div>\n          <ul className=\"module-nav\">\n\n            <li onClick={() => {\n              this.setState({\n                currentTodo: null,\n                toDos: this.state.allToDos\n              });\n            }\n            }>\n              <span className=\"jr-link\">\n                <i className=\"zmdi zmdi-menu\"/>\n                <span><IntlMessages id=\"todo.all\"/></span>\n              </span>\n            </li>\n\n            <li className=\"module-nav-label\">\n              <IntlMessages id=\"todo.filters\"/>\n            </li>\n\n            {this.getNavFilters()}\n\n            <li className=\"module-nav-label\">\n              <IntlMessages id=\"todo.labels\"/>\n            </li>\n\n            {this.getNavLabels()}\n\n          </ul>\n        </CustomScrollbars>\n      </div>\n    </div>\n  };\n  searchTodo = (searchText) => {\n    if (searchText === '') {\n      this.setState({toDos: this.state.allToDos.filter((todo) => !todo.deleted)});\n    } else {\n      const searchToDos = this.state.allToDos.filter((todo) =>\n        !todo.deleted && todo.title.toLowerCase().indexOf(searchText.toLowerCase()) > -1);\n      this.setState({\n        toDos: searchToDos\n      });\n    }\n  };\n  showToDos = ({currentTodo, toDos, conversation, user}) => {\n    return currentTodo === null ?\n      <ToDoList toDos={toDos} onSortEnd={this.onSortEnd}\n                onMarkAsStart={this.onMarkAsStart.bind(this)}\n                width={this.props.width}\n                onTodoSelect={this.onTodoSelect.bind(this)}\n                onTodoChecked={this.onTodoChecked.bind(this)} useDragHandle={true}/>\n      :\n      <ToDoDetail todo={currentTodo} user={user}\n                  width={this.props.width}\n                  conversation={conversation}\n                  onLabelUpdate={this.onLabelUpdate.bind(this)}\n                  onToDoUpdate={this.onToDoUpdate.bind(this)}\n                  onDeleteToDo={this.onDeleteToDo.bind(this)}/>\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      searchTodo: '',\n      alertMessage: '',\n      loader: false,\n      showMessage: false,\n      drawerState: false,\n      optionName: 'None',\n      anchorEl: null,\n      allToDos: toDos,\n      currentTodo: null,\n      user: {\n        name: 'Robert Johnson',\n        email: 'robert.johnson@example.com',\n        avatar: 'https://via.placeholder.com/150x150'\n      },\n      selectedToDos: 0,\n      labelMenuState: false,\n      optionMenuState: false,\n      toDos: toDos,\n      filter: -1,\n      todoConversation,\n      conversation: null\n    }\n  }\n\n\n  getToDoConversation(id) {\n    return todoConversation.find((conversation) => conversation.id === id);\n  }\n\n  onTodoChecked(data) {\n    data.selected = !data.selected;\n    let selectedToDos = 0;\n    const toDos = this.state.toDos.map(todo => {\n        if (todo.selected) {\n          selectedToDos++;\n        }\n        if (todo.id === data.id) {\n          if (todo.selected) {\n            selectedToDos++;\n          }\n          return data;\n        } else {\n          return todo;\n        }\n      }\n    );\n    this.setState({\n      selectedToDos: selectedToDos,\n      toDos: toDos\n    });\n  }\n\n  onAllTodoSelect() {\n    const selectAll = this.state.selectedToDos < this.state.toDos.length;\n    if (selectAll) {\n      this.getAllTodo();\n    } else {\n      this.getUnselectedAllTodo();\n    }\n  }\n\n  onTodoAdd(data) {\n    this.setState(\n      {\n        toDos: this.state.allToDos.concat(data),\n        allToDos: this.state.allToDos.concat(data)\n      }\n    );\n  }\n\n  onTodoSelect(todo) {\n    let conversationList = this.getToDoConversation(todo.id);\n    if (conversationList) {\n      conversationList = conversationList.conversationData;\n    } else {\n      conversationList = [];\n    }\n    this.setState({\n      currentTodo: todo,\n      loader: true,\n      conversation: conversationList\n    });\n    setTimeout(() => {\n      this.setState({loader: false});\n    }, 1500);\n  }\n\n  removeLabel(todo, label) {\n    todo.labels.splice(todo.labels.indexOf(label), 1);\n    return todo.labels;\n  }\n\n  addLabel(todo, label) {\n    todo.labels = todo.labels.concat(label);\n    return todo.labels\n  }\n\n  onToggleDrawer() {\n    this.setState({\n      drawerState: !this.state.drawerState\n    });\n  }\n\n  updateSearch(evt) {\n    this.setState({\n      searchTodo: evt.target.value,\n    });\n    this.searchTodo(evt.target.value)\n  }\n\n  render() {\n    const {selectedToDos, loader, toDos, alertMessage, showMessage} = this.state;\n\n    return (\n      <div className=\"app-wrapper\">\n        <div className=\"animated slideInUpTiny animation-duration-3\">\n          <div className=\"app-module\">\n            <div className=\"d-block d-xl-none\">\n              <Drawer\n                open={this.state.drawerState}\n                onClose={this.onToggleDrawer.bind(this)}>\n                {this.ToDoSideBar()}\n              </Drawer>\n            </div>\n            <div className=\"app-module-sidenav d-none d-xl-flex\">\n              {this.ToDoSideBar()}\n            </div>\n\n            <div className=\"module-box\">\n              <div className=\"module-box-header\">\n\n                <IconButton className=\"drawer-btn d-block d-xl-none\" aria-label=\"Menu\"\n                            onClick={this.onToggleDrawer.bind(this)}>\n                  <i className=\"zmdi zmdi-menu\"/>\n                </IconButton>\n                <AppModuleHeader placeholder=\"Search To Do\" user={this.state.user}\n                                 onChange={this.updateSearch.bind(this)}\n                                 value={this.state.searchTodo}/>\n              </div>\n              <div className=\"module-box-content\">\n                {this.state.currentTodo === null ?\n                  <div className=\"module-box-topbar module-box-topbar-todo d-flex flex-row\">\n                    <Checkbox color=\"primary\"\n                              indeterminate={selectedToDos > 0 && selectedToDos < toDos.length}\n                              checked={selectedToDos > 0}\n                              onChange={this.onAllTodoSelect.bind(this)}\n                              value=\"SelectMail\"/>\n\n                    <div className=\"d-flex align-items-center\" onClick={this.onOptionMenuSelect.bind(this)}>\n                      <span className=\"px-2\"> {this.state.optionName}</span>\n                      <IconButton className=\"icon-btn-sm\">\n                        <i className=\"zmdi zmdi-caret-down\"/>\n                      </IconButton>\n                    </div>\n\n                    {(selectedToDos > 0) &&\n                    <IconButton className=\"icon-btn\"\n                                onClick={this.onLabelSelect.bind(this)}>\n                      <i className=\"zmdi zmdi-label-alt\"/>\n                    </IconButton>}\n                  </div>\n                  :\n                  <div className=\"module-box-topbar\">\n                    <IconButton className=\"icon-btn\"\n                                onClick={() => {\n                                  this.setState({\n                                    currentTodo: null\n                                  })\n                                }}>\n                      <i className=\"zmdi zmdi-arrow-back\"/>\n                    </IconButton>\n                  </div>\n                }\n\n\n                <Menu id=\"option-menu\"\n                      anchorEl={this.state.anchorEl}\n                      open={this.state.optionMenuState}\n                      onClose={this.handleRequestClose}\n\n                      MenuListProps={{\n                        style: {\n                          width: 150,\n                        },\n                      }}>\n                  {options.map(option =>\n                    <MenuItem key={option.title}\n                              onClick={this.onOptionMenuItemSelect.bind(this, option)}>\n                      {option.title}\n                    </MenuItem>,\n                  )}\n                </Menu>\n\n                <Menu id=\"label-menu\"\n                      anchorEl={this.state.anchorEl}\n                      open={this.state.labelMenuState}\n                      onClose={this.handleRequestClose}\n\n                      MenuListProps={{\n                        style: {\n                          width: 150,\n                        },\n                      }}>\n                  {labels.map(label =>\n                    <MenuItem key={label.id}\n                              onClick={this.onLabelMenuItemSelect.bind(this, label)}>\n                      {label.title}\n                    </MenuItem>,\n                  )}\n                </Menu>\n\n                {loader ?\n                  <div className=\"loader-view\"\n                       style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\n                    <CircularProgress/>\n                  </div> :\n                  this.showToDos(this.state)\n                }\n              </div>\n            </div>\n          </div>\n          <Snackbar\n            anchorOrigin={{vertical: 'top', horizontal: 'center'}}\n            open={showMessage}\n            autoHideDuration={3000}\n            onClose={this.handleRequestClose}\n            ContentProps={{\n              'aria-describedby': 'message-id',\n            }}\n            message={<span id=\"message-id\">{alertMessage}</span>}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({settings}) => {\n  const {width} = settings;\n  return {width}\n};\nexport default connect(mapStateToProps)(ToDo);"]},"metadata":{},"sourceType":"module"}