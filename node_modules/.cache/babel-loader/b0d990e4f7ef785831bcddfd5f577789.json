{"ast":null,"code":"import _classCallCheck from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import{DirectionsRenderer,GoogleMap,withGoogleMap}from\"react-google-maps\";var google=window.google;var DirectionsExampleGoogleMap=withGoogleMap(function(props){return React.createElement(GoogleMap,{defaultZoom:7,defaultCenter:props.center},props.directions&&React.createElement(DirectionsRenderer,{directions:props.directions}));});/*\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\n */var MapDirections=/*#__PURE__*/function(_Component){_inherits(MapDirections,_Component);function MapDirections(){var _this;_classCallCheck(this,MapDirections);_this=_possibleConstructorReturn(this,_getPrototypeOf(MapDirections).call(this));_this.state={origin:new google.maps.LatLng(41.8507300,-87.6512600),destination:new google.maps.LatLng(41.8525800,-87.6514100),directions:null};return _this;}_createClass(MapDirections,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var DirectionsService=new google.maps.DirectionsService();DirectionsService.route({origin:this.state.origin,destination:this.state.destination,travelMode:google.maps.TravelMode.DRIVING},function(result,status){if(status===google.maps.DirectionsStatus.OK){_this2.setState({directions:result});}else{console.error(\"error fetching directions \".concat(result));}});}},{key:\"render\",value:function render(){return React.createElement(DirectionsExampleGoogleMap,{containerElement:React.createElement(\"div\",{className:\"embed-responsive embed-responsive-21by9\"}),mapElement:React.createElement(\"div\",{className:\"embed-responsive-item\"}),center:this.state.origin,directions:this.state.directions});}}]);return MapDirections;}(Component);export{MapDirections as default};","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/map/routes/directions/Components/MapDirections.js"],"names":["React","Component","DirectionsRenderer","GoogleMap","withGoogleMap","google","window","DirectionsExampleGoogleMap","props","center","directions","MapDirections","state","origin","maps","LatLng","destination","DirectionsService","route","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","setState","console","error"],"mappings":"2rBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OAAQC,kBAAR,CAA4BC,SAA5B,CAAuCC,aAAvC,KAA2D,mBAA3D,CAEA,GAAMC,CAAAA,MAAM,CAAGC,MAAM,CAACD,MAAtB,CAEA,GAAME,CAAAA,0BAA0B,CAAGH,aAAa,CAAC,SAAAI,KAAK,QACpD,qBAAC,SAAD,EACE,WAAW,CAAE,CADf,CAEE,aAAa,CAAEA,KAAK,CAACC,MAFvB,EAIGD,KAAK,CAACE,UAAN,EAAoB,oBAAC,kBAAD,EAAoB,UAAU,CAAEF,KAAK,CAACE,UAAtC,EAJvB,CADoD,EAAN,CAAhD,CASA;;MAGqBC,CAAAA,a,uEAEnB,wBAAc,+CACZ,iFACA,MAAKC,KAAL,CAAa,CACXC,MAAM,CAAE,GAAIR,CAAAA,MAAM,CAACS,IAAP,CAAYC,MAAhB,CAAuB,UAAvB,CAAmC,CAAC,UAApC,CADG,CAEXC,WAAW,CAAE,GAAIX,CAAAA,MAAM,CAACS,IAAP,CAAYC,MAAhB,CAAuB,UAAvB,CAAmC,CAAC,UAApC,CAFF,CAGXL,UAAU,CAAE,IAHD,CAAb,CAFY,aAOb,C,uFAEmB,iBAClB,GAAMO,CAAAA,iBAAiB,CAAG,GAAIZ,CAAAA,MAAM,CAACS,IAAP,CAAYG,iBAAhB,EAA1B,CAEAA,iBAAiB,CAACC,KAAlB,CAAwB,CACtBL,MAAM,CAAE,KAAKD,KAAL,CAAWC,MADG,CAEtBG,WAAW,CAAE,KAAKJ,KAAL,CAAWI,WAFF,CAGtBG,UAAU,CAAEd,MAAM,CAACS,IAAP,CAAYM,UAAZ,CAAuBC,OAHb,CAAxB,CAIG,SAACC,MAAD,CAASC,MAAT,CAAoB,CACrB,GAAIA,MAAM,GAAKlB,MAAM,CAACS,IAAP,CAAYU,gBAAZ,CAA6BC,EAA5C,CAAgD,CAC9C,MAAI,CAACC,QAAL,CAAc,CACZhB,UAAU,CAAEY,MADA,CAAd,EAGD,CAJD,IAIO,CACLK,OAAO,CAACC,KAAR,qCAA2CN,MAA3C,GACD,CACF,CAZD,EAaD,C,uCAEQ,CACP,MACE,qBAAC,0BAAD,EACE,gBAAgB,CACd,2BAAK,SAAS,CAAC,yCAAf,EAFJ,CAIE,UAAU,CAAE,2BAAK,SAAS,CAAC,uBAAf,EAJd,CAKE,MAAM,CAAE,KAAKV,KAAL,CAAWC,MALrB,CAME,UAAU,CAAE,KAAKD,KAAL,CAAWF,UANzB,EADF,CAUD,C,2BAxCwCT,S,SAAtBU,a","sourcesContent":["import React, {Component} from \"react\";\nimport {DirectionsRenderer, GoogleMap, withGoogleMap} from \"react-google-maps\";\n\nconst google = window.google;\n\nconst DirectionsExampleGoogleMap = withGoogleMap(props => (\n  <GoogleMap\n    defaultZoom={7}\n    defaultCenter={props.center}\n  >\n    {props.directions && <DirectionsRenderer directions={props.directions}/>}\n  </GoogleMap>\n));\n\n/*\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\n */\nexport default class MapDirections extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      origin: new google.maps.LatLng(41.8507300, -87.6512600),\n      destination: new google.maps.LatLng(41.8525800, -87.6514100),\n      directions: null,\n    };\n  }\n\n  componentDidMount() {\n    const DirectionsService = new google.maps.DirectionsService();\n\n    DirectionsService.route({\n      origin: this.state.origin,\n      destination: this.state.destination,\n      travelMode: google.maps.TravelMode.DRIVING,\n    }, (result, status) => {\n      if (status === google.maps.DirectionsStatus.OK) {\n        this.setState({\n          directions: result,\n        });\n      } else {\n        console.error(`error fetching directions ${result}`);\n      }\n    });\n  }\n\n  render() {\n    return (\n      <DirectionsExampleGoogleMap\n        containerElement={\n          <div className=\"embed-responsive embed-responsive-21by9\"/>\n        }\n        mapElement={<div className=\"embed-responsive-item\"/>}\n        center={this.state.origin}\n        directions={this.state.directions}\n      />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}