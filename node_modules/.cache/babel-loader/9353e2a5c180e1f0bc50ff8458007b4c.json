{"ast":null,"code":"import _classCallCheck from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import{Circle,GoogleMap,InfoWindow,withGoogleMap}from\"react-google-maps\";import canUseDOM from\"can-use-dom\";import raf from\"raf\";var geolocation=canUseDOM&&navigator.geolocation?navigator.geolocation:{getCurrentPosition:function getCurrentPosition(success,failure){failure(\"Your browser doesn't support geolocation.\");}};var GeolocationExampleGoogleMap=withGoogleMap(function(props){return React.createElement(GoogleMap,{defaultZoom:10,center:props.center},props.center&&React.createElement(InfoWindow,{position:props.center},React.createElement(\"div\",null,props.content)),props.center&&React.createElement(Circle,{center:props.center,radius:props.radius,options:{fillColor:'red',fillOpacity:0.20,strokeColor:'red',strokeOpacity:1,strokeWeight:1}}));});/*\n * https://developers.google.com/maps/documentation/javascript/examples/map-geolocation\n *\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\n */var GeolocationExample=/*#__PURE__*/function(_Component){_inherits(GeolocationExample,_Component);function GeolocationExample(){var _getPrototypeOf2;var _this;_classCallCheck(this,GeolocationExample);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(GeolocationExample)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={center:null,content:null,radius:6000};_this.isUnmounted=false;return _this;}_createClass(GeolocationExample,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var tick=function tick(){if(_this2.isUnmounted){return;}_this2.setState({radius:Math.max(_this2.state.radius-20,0)});if(_this2.state.radius>200){raf(tick);}};geolocation.getCurrentPosition(function(position){if(_this2.isUnmounted){return;}_this2.setState({center:{lat:position.coords.latitude,lng:position.coords.longitude},content:\"Location found using HTML5.\"});raf(tick);},function(reason){if(_this2.isUnmounted){return;}_this2.setState({center:{lat:60,lng:105},content:\"Error: The Geolocation service failed (\".concat(reason,\").\")});});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.isUnmounted=true;}},{key:\"render\",value:function render(){return React.createElement(GeolocationExampleGoogleMap,{containerElement:React.createElement(\"div\",{className:\"embed-responsive embed-responsive-21by9\"}),mapElement:React.createElement(\"div\",{className:\"embed-responsive-item\"}),center:this.state.center,content:this.state.content,radius:this.state.radius});}}]);return GeolocationExample;}(Component);export{GeolocationExample as default};","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/map/routes/geoLocation/Components/GeoLocation.js"],"names":["React","Component","Circle","GoogleMap","InfoWindow","withGoogleMap","canUseDOM","raf","geolocation","navigator","getCurrentPosition","success","failure","GeolocationExampleGoogleMap","props","center","content","radius","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","GeolocationExample","state","isUnmounted","tick","setState","Math","max","position","lat","coords","latitude","lng","longitude","reason"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport {Circle, GoogleMap, InfoWindow, withGoogleMap} from \"react-google-maps\";\nimport canUseDOM from \"can-use-dom\";\nimport raf from \"raf\";\n\nconst geolocation = (\n  canUseDOM && navigator.geolocation ?\n    navigator.geolocation :\n    ({\n      getCurrentPosition(success, failure) {\n        failure(`Your browser doesn't support geolocation.`);\n      },\n    })\n);\n\nconst GeolocationExampleGoogleMap = withGoogleMap(props => (\n  <GoogleMap\n    defaultZoom={10}\n    center={props.center}\n  >\n    {props.center && (\n      <InfoWindow position={props.center}>\n        <div>{props.content}</div>\n      </InfoWindow>\n    )}\n    {props.center && (\n      <Circle\n        center={props.center}\n        radius={props.radius}\n        options={{\n          fillColor: 'red',\n          fillOpacity: 0.20,\n          strokeColor: 'red',\n          strokeOpacity: 1,\n          strokeWeight: 1,\n        }}\n      />\n    )}\n  </GoogleMap>\n));\n\n/*\n * https://developers.google.com/maps/documentation/javascript/examples/map-geolocation\n *\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\n */\nexport default class GeolocationExample extends Component {\n\n  state = {\n    center: null,\n    content: null,\n    radius: 6000,\n  };\n\n  isUnmounted = false;\n\n  componentDidMount() {\n    const tick = () => {\n      if (this.isUnmounted) {\n        return;\n      }\n      this.setState({radius: Math.max(this.state.radius - 20, 0)});\n\n      if (this.state.radius > 200) {\n        raf(tick);\n      }\n    };\n    geolocation.getCurrentPosition((position) => {\n      if (this.isUnmounted) {\n        return;\n      }\n      this.setState({\n        center: {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        },\n        content: `Location found using HTML5.`,\n      });\n\n      raf(tick);\n    }, (reason) => {\n      if (this.isUnmounted) {\n        return;\n      }\n      this.setState({\n        center: {\n          lat: 60,\n          lng: 105,\n        },\n        content: `Error: The Geolocation service failed (${reason}).`,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.isUnmounted = true;\n  }\n\n  render() {\n    return (\n      <GeolocationExampleGoogleMap\n        containerElement={\n          <div className=\"embed-responsive embed-responsive-21by9\"/>\n        }\n        mapElement={<div className=\"embed-responsive-item\"/>}\n        center={this.state.center}\n        content={this.state.content}\n        radius={this.state.radius}\n      />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}