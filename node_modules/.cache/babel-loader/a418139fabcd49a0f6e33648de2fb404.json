{"ast":null,"code":"import _classCallCheck from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import{GoogleMap,InfoWindow,withGoogleMap}from\"react-google-maps\";var google=window.google;var GettingPropertiesExampleGoogleMap=withGoogleMap(function(props){return React.createElement(GoogleMap,{ref:props.onMapMounted,onZoomChanged:props.onZoomChanged,defaultCenter:props.center,zoom:props.zoom},React.createElement(InfoWindow,{defaultPosition:props.center},React.createElement(\"div\",null,props.content)));});/*\n * https://developers.google.com/maps/documentation/javascript/examples/event-properties\n *\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\n */var EventHandler=/*#__PURE__*/function(_Component){_inherits(EventHandler,_Component);function EventHandler(){var _getPrototypeOf2;var _this;_classCallCheck(this,EventHandler);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(EventHandler)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={zoom:15,content:\"Change the zoom level\"};_this.handleMapMounted=_this.handleMapMounted.bind(_assertThisInitialized(_this));_this.handleZoomChanged=_this.handleZoomChanged.bind(_assertThisInitialized(_this));return _this;}_createClass(EventHandler,[{key:\"handleMapMounted\",value:function handleMapMounted(map){this._map=map;}},{key:\"handleZoomChanged\",value:function handleZoomChanged(){var nextZoom=this._map.getZoom();if(nextZoom!==this.state.zoom){// Notice: Check zoom equality here,\n// or it will fire zoom_changed event infinitely\nthis.setState({zoom:nextZoom,content:\"Zoom: \".concat(nextZoom)});}}},{key:\"render\",value:function render(){return React.createElement(GettingPropertiesExampleGoogleMap,{containerElement:React.createElement(\"div\",{className:\"embed-responsive embed-responsive-21by9\"}),mapElement:React.createElement(\"div\",{className:\"embed-responsive-item\"}),onMapMounted:this.handleMapMounted,onZoomChanged:this.handleZoomChanged,center:new google.maps.LatLng(47.646935,-122.303763),zoom:this.state.zoom,content:this.state.content});}}]);return EventHandler;}(Component);export{EventHandler as default};","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/map/routes/eventHanlder/Components/EventHandler.js"],"names":["React","Component","GoogleMap","InfoWindow","withGoogleMap","google","window","GettingPropertiesExampleGoogleMap","props","onMapMounted","onZoomChanged","center","zoom","content","EventHandler","state","handleMapMounted","bind","handleZoomChanged","map","_map","nextZoom","getZoom","setState","maps","LatLng"],"mappings":"o1BAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OAAQC,SAAR,CAAmBC,UAAnB,CAA+BC,aAA/B,KAAmD,mBAAnD,CAEA,GAAMC,CAAAA,MAAM,CAAGC,MAAM,CAACD,MAAtB,CAEA,GAAME,CAAAA,iCAAiC,CAAGH,aAAa,CAAC,SAAAI,KAAK,QAC3D,qBAAC,SAAD,EACE,GAAG,CAAEA,KAAK,CAACC,YADb,CAEE,aAAa,CAAED,KAAK,CAACE,aAFvB,CAGE,aAAa,CAAEF,KAAK,CAACG,MAHvB,CAIE,IAAI,CAAEH,KAAK,CAACI,IAJd,EAME,oBAAC,UAAD,EACE,eAAe,CAAEJ,KAAK,CAACG,MADzB,EAGE,+BAAMH,KAAK,CAACK,OAAZ,CAHF,CANF,CAD2D,EAAN,CAAvD,CAeA;;;;MAKqBC,CAAAA,Y,uZAEnBC,K,CAAQ,CACNH,IAAI,CAAE,EADA,CAENC,OAAO,wBAFD,C,OAKRG,gB,CAAmB,MAAKA,gBAAL,CAAsBC,IAAtB,+B,OACnBC,iB,CAAoB,MAAKA,iBAAL,CAAuBD,IAAvB,+B,kGAEHE,G,CAAK,CACpB,KAAKC,IAAL,CAAYD,GAAZ,CACD,C,6DAEmB,CAClB,GAAME,CAAAA,QAAQ,CAAG,KAAKD,IAAL,CAAUE,OAAV,EAAjB,CACA,GAAID,QAAQ,GAAK,KAAKN,KAAL,CAAWH,IAA5B,CAAkC,CAChC;AACA;AACA,KAAKW,QAAL,CAAc,CACZX,IAAI,CAAES,QADM,CAEZR,OAAO,iBAAWQ,QAAX,CAFK,CAAd,EAID,CACF,C,uCAEQ,CACP,MACE,qBAAC,iCAAD,EACE,gBAAgB,CACd,2BAAK,SAAS,CAAC,yCAAf,EAFJ,CAIE,UAAU,CAAE,2BAAK,SAAS,CAAC,uBAAf,EAJd,CAKE,YAAY,CAAE,KAAKL,gBALrB,CAME,aAAa,CAAE,KAAKE,iBANtB,CAOE,MAAM,CAAE,GAAIb,CAAAA,MAAM,CAACmB,IAAP,CAAYC,MAAhB,CAAuB,SAAvB,CAAkC,CAAC,UAAnC,CAPV,CAQE,IAAI,CAAE,KAAKV,KAAL,CAAWH,IARnB,CASE,OAAO,CAAE,KAAKG,KAAL,CAAWF,OATtB,EADF,CAaD,C,0BAxCuCZ,S,SAArBa,Y","sourcesContent":["import React, {Component} from \"react\";\nimport {GoogleMap, InfoWindow, withGoogleMap} from \"react-google-maps\";\n\nconst google = window.google;\n\nconst GettingPropertiesExampleGoogleMap = withGoogleMap(props => (\n  <GoogleMap\n    ref={props.onMapMounted}\n    onZoomChanged={props.onZoomChanged}\n    defaultCenter={props.center}\n    zoom={props.zoom}\n  >\n    <InfoWindow\n      defaultPosition={props.center}\n    >\n      <div>{props.content}</div>\n    </InfoWindow>\n  </GoogleMap>\n));\n\n/*\n * https://developers.google.com/maps/documentation/javascript/examples/event-properties\n *\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\n */\nexport default class EventHandler extends Component {\n\n  state = {\n    zoom: 15,\n    content: `Change the zoom level`,\n  };\n\n  handleMapMounted = this.handleMapMounted.bind(this);\n  handleZoomChanged = this.handleZoomChanged.bind(this);\n\n  handleMapMounted(map) {\n    this._map = map;\n  }\n\n  handleZoomChanged() {\n    const nextZoom = this._map.getZoom();\n    if (nextZoom !== this.state.zoom) {\n      // Notice: Check zoom equality here,\n      // or it will fire zoom_changed event infinitely\n      this.setState({\n        zoom: nextZoom,\n        content: `Zoom: ${nextZoom}`,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <GettingPropertiesExampleGoogleMap\n        containerElement={\n          <div className=\"embed-responsive embed-responsive-21by9\"/>\n        }\n        mapElement={<div className=\"embed-responsive-item\"/>}\n        onMapMounted={this.handleMapMounted}\n        onZoomChanged={this.handleZoomChanged}\n        center={new google.maps.LatLng(47.646935, -122.303763)}\n        zoom={this.state.zoom}\n        content={this.state.content}\n      />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}