{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/containers/SignIn.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport TextField from \"@material-ui/core/TextField\"; // import IconButton from \"@material-ui/core/IconButton\";\n\nimport Button from \"@material-ui/core/Button\";\nimport { NotificationContainer, NotificationManager } from \"react-notifications\";\nimport IntlMessages from \"util/IntlMessages\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SignInApi from \"../api/AuthApi\";\nimport { hideMessage, showAuthLoader, userFacebookSignIn, userGithubSignIn, userGoogleSignIn, userSignIn, userTwitterSignIn } from \"actions/Auth\";\n\nclass SignIn extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showMessage: false,\n      username: \"demo\",\n      password: \"demo#123\",\n      error: false,\n      errormes: \"\",\n      loader: false\n    };\n  }\n\n  async login() {\n    this.setState({\n      loader: true\n    }); // var basUrl = \"https://enrouteservice.com/api/\";\n\n    var Data = {\n      username: this.state.username,\n      password: this.state.password\n    };\n    var self = this;\n    var response = await SignInApi(Data);\n\n    if (response.error === false) {\n      localStorage.setItem(\"user_id\", response.data.result.related_user._id);\n      localStorage.setItem(\"token\", response.data.result.token);\n      window.location.reload(false);\n      self.setState({\n        loader: false\n      });\n      console.log(response);\n    } else {\n      self.setState({\n        error: true,\n        errormes: response.message,\n        loader: false\n      });\n      console.log(response);\n    }\n  }\n\n  unsuccessfullSignInNotification(message) {\n    this.setState({\n      error: true,\n      errormes: message,\n      loader: false\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.state.error) {\n      setTimeout(() => {\n        this.setState({\n          error: false\n        });\n      }, 1000);\n    }\n\n    if (localStorage.getItem(\"token\") != null) {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  render() {\n    const {\n      username,\n      password\n    } = this.state;\n    const {\n      showMessage,\n      loader,\n      alertMessage\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"app-login-container d-flex justify-content-center align-items-center animated slideInUpTiny animation-duration-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"app-login-main-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"app-logo-content d-flex align-items-center justify-content-center\",\n      style: {\n        backgroundColor: \"green\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"logo-lg\",\n      to: \"/\",\n      title: \"Jambo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"assets/images/ebcom_logo.jpg\"),\n      alt: \"ebcom\",\n      title: \"ebcom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"app-login-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"app-login-header mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(IntlMessages, {\n      id: \"appModule.username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"app-login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: React.createElement(IntlMessages, {\n        id: \"appModule.username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }),\n      fullWidth: true,\n      onChange: event => this.setState({\n        username: event.target.value\n      }),\n      defaultValue: username,\n      margin: \"normal\",\n      className: \"mt-1 my-sm-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      type: \"password\",\n      label: React.createElement(IntlMessages, {\n        id: \"appModule.password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }),\n      fullWidth: true,\n      onChange: event => this.setState({\n        password: event.target.value\n      }),\n      defaultValue: password,\n      margin: \"normal\",\n      className: \"mt-1 my-sm-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"mb-3 d-flex align-items-center justify-content-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => {\n        this.props.showAuthLoader();\n        this.props.userSignIn({\n          username,\n          password\n        }); // this.login();\n      },\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(IntlMessages, {\n      id: \"appModule.signIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })))))))), this.state.loader && React.createElement(\"div\", {\n      className: \"loader-view\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })), this.state.error && NotificationManager.error(this.state.errormes), React.createElement(NotificationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = ({\n  auth\n}) => {\n  const {\n    loader,\n    alertMessage,\n    showMessage,\n    authUser\n  } = auth;\n  return {\n    loader,\n    alertMessage,\n    showMessage,\n    authUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  userSignIn,\n  hideMessage,\n  showAuthLoader,\n  userFacebookSignIn,\n  userGoogleSignIn,\n  userGithubSignIn,\n  userTwitterSignIn\n})(SignIn);","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/containers/SignIn.js"],"names":["React","Link","connect","TextField","Button","NotificationContainer","NotificationManager","IntlMessages","CircularProgress","SignInApi","hideMessage","showAuthLoader","userFacebookSignIn","userGithubSignIn","userGoogleSignIn","userSignIn","userTwitterSignIn","SignIn","Component","constructor","state","showMessage","username","password","error","errormes","loader","login","setState","Data","self","response","localStorage","setItem","data","result","related_user","_id","token","window","location","reload","console","log","message","unsuccessfullSignInNotification","componentDidUpdate","setTimeout","getItem","props","history","push","render","alertMessage","backgroundColor","require","event","target","value","mapStateToProps","auth","authUser"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport TextField from \"@material-ui/core/TextField\";\n// import IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\nimport IntlMessages from \"util/IntlMessages\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SignInApi from \"../api/AuthApi\";\nimport {\n  hideMessage,\n  showAuthLoader,\n  userFacebookSignIn,\n  userGithubSignIn,\n  userGoogleSignIn,\n  userSignIn,\n  userTwitterSignIn,\n} from \"actions/Auth\";\n\nclass SignIn extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showMessage: false,\n      username: \"demo\",\n      password: \"demo#123\",\n      error: false,\n      errormes: \"\",\n      loader: false,\n    };\n  }\n\n  async login() {\n    this.setState({ loader: true });\n    // var basUrl = \"https://enrouteservice.com/api/\";\n    var Data = {\n      username: this.state.username,\n      password: this.state.password,\n    };\n    var self = this;\n\n    var response = await SignInApi(Data);\n    if (response.error === false) {\n      localStorage.setItem(\"user_id\", response.data.result.related_user._id);\n      localStorage.setItem(\"token\", response.data.result.token);\n      window.location.reload(false);\n      self.setState({ loader: false });\n      console.log(response);\n    } else {\n      self.setState({\n        error: true,\n        errormes: response.message,\n        loader: false,\n      });\n      console.log(response);\n    }\n  }\n\n  unsuccessfullSignInNotification(message) {\n    this.setState({\n      error: true,\n      errormes: message,\n      loader: false,\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.state.error) {\n      setTimeout(() => {\n        this.setState({ error: false });\n      }, 1000);\n    }\n    if (localStorage.getItem(\"token\") != null) {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  render() {\n    const { username, password } = this.state;\n    const { showMessage, loader, alertMessage } = this.props;\n    return (\n      <div className=\"app-login-container d-flex justify-content-center align-items-center animated slideInUpTiny animation-duration-3\">\n        <div className=\"app-login-main-content\">\n          <div\n            className=\"app-logo-content d-flex align-items-center justify-content-center\"\n            style={{ backgroundColor: \"green\" }}\n          >\n            <Link className=\"logo-lg\" to=\"/\" title=\"Jambo\">\n              <img\n                src={require(\"assets/images/ebcom_logo.jpg\")}\n                alt=\"ebcom\"\n                title=\"ebcom\"\n              />\n            </Link>\n          </div>\n\n          <div className=\"app-login-content\">\n            <div className=\"app-login-header mb-4\">\n              <h1>\n                <IntlMessages id=\"appModule.username\" />\n              </h1>\n            </div>\n\n            <div className=\"app-login-form\">\n              <form>\n                <fieldset>\n                  <TextField\n                    label={<IntlMessages id=\"appModule.username\" />}\n                    fullWidth\n                    onChange={(event) =>\n                      this.setState({ username: event.target.value })\n                    }\n                    defaultValue={username}\n                    margin=\"normal\"\n                    className=\"mt-1 my-sm-3\"\n                  />\n                  <TextField\n                    type=\"password\"\n                    label={<IntlMessages id=\"appModule.password\" />}\n                    fullWidth\n                    onChange={(event) =>\n                      this.setState({ password: event.target.value })\n                    }\n                    defaultValue={password}\n                    margin=\"normal\"\n                    className=\"mt-1 my-sm-3\"\n                  />\n\n                  <div className=\"mb-3 d-flex align-items-center justify-content-between\">\n                    <Button\n                      onClick={() => {\n                        this.props.showAuthLoader();\n                        this.props.userSignIn({ username, password });\n                        // this.login();\n                      }}\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      <IntlMessages id=\"appModule.signIn\" />\n                    </Button>\n\n                    {/* <Link to=\"/signup\">\n                      <IntlMessages id=\"signIn.signUp\" />\n                    </Link> */}\n                  </div>\n\n                  {/* <div className=\"app-social-block my-1 my-sm-3\">\n                    <IntlMessages id=\"signIn.connectWith\" />\n                    <ul className=\"social-link\">\n                      <li>\n                        <IconButton\n                          className=\"icon\"\n                          onClick={() => {\n                            this.props.showAuthLoader();\n                            this.props.userFacebookSignIn();\n                          }}\n                        >\n                          <i className=\"zmdi zmdi-facebook\" />\n                        </IconButton>\n                      </li>\n\n                      <li>\n                        <IconButton\n                          className=\"icon\"\n                          onClick={() => {\n                            this.props.showAuthLoader();\n                            this.props.userTwitterSignIn();\n                          }}\n                        >\n                          <i className=\"zmdi zmdi-twitter\" />\n                        </IconButton>\n                      </li>\n\n                      <li>\n                        <IconButton\n                          className=\"icon\"\n                          onClick={() => {\n                            this.props.showAuthLoader();\n                            this.props.userGoogleSignIn();\n                          }}\n                        >\n                          <i className=\"zmdi zmdi-google-plus\" />\n                        </IconButton>\n                      </li>\n\n                      <li>\n                        <IconButton\n                          className=\"icon\"\n                          onClick={() => {\n                            this.props.showAuthLoader();\n                            this.props.userGithubSignIn();\n                          }}\n                        >\n                          <i className=\"zmdi zmdi-github\" />\n                        </IconButton>\n                      </li>\n                    </ul>\n                  </div> */}\n                </fieldset>\n              </form>\n            </div>\n          </div>\n        </div>\n        {this.state.loader && (\n          <div className=\"loader-view\">\n            <CircularProgress />\n          </div>\n        )}\n        {this.state.error && NotificationManager.error(this.state.errormes)}\n        <NotificationContainer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }) => {\n  const { loader, alertMessage, showMessage, authUser } = auth;\n  return { loader, alertMessage, showMessage, authUser };\n};\n\nexport default connect(mapStateToProps, {\n  userSignIn,\n  hideMessage,\n  showAuthLoader,\n  userFacebookSignIn,\n  userGoogleSignIn,\n  userGithubSignIn,\n  userTwitterSignIn,\n})(SignIn);\n"]},"metadata":{},"sourceType":"module"}