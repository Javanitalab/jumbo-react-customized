{"ast":null,"code":"import{applyMiddleware,compose,createStore}from'redux';import reducers from'../reducers/index';import{createBrowserHistory}from'history';import{routerMiddleware}from'connected-react-router';import createSagaMiddleware from'redux-saga';import rootSaga from'../sagas/index';var history=createBrowserHistory();var routeMiddleware=routerMiddleware(history);var sagaMiddleware=createSagaMiddleware();var middlewares=[sagaMiddleware,routeMiddleware];var composeEnhancers=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||compose;export default function configureStore(initialState){var store=createStore(reducers(history),initialState,composeEnhancers(applyMiddleware.apply(void 0,middlewares)));sagaMiddleware.run(rootSaga);if(module.hot){// Enable Webpack hot module replacement for reducers\nmodule.hot.accept('../reducers/index',function(){var nextRootReducer=require('../reducers/index');store.replaceReducer(nextRootReducer);});}return store;}export{history};","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/store/index.js"],"names":["applyMiddleware","compose","createStore","reducers","createBrowserHistory","routerMiddleware","createSagaMiddleware","rootSaga","history","routeMiddleware","sagaMiddleware","middlewares","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","initialState","store","run","module","hot","accept","nextRootReducer","require","replaceReducer"],"mappings":"AAAA,OAAQA,eAAR,CAAyBC,OAAzB,CAAkCC,WAAlC,KAAoD,OAApD,CACA,MAAOC,CAAAA,QAAP,KAAqB,mBAArB,CACA,OAAQC,oBAAR,KAAmC,SAAnC,CACA,OAAQC,gBAAR,KAA+B,wBAA/B,CACA,MAAOC,CAAAA,oBAAP,KAAiC,YAAjC,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CAGA,GAAMC,CAAAA,OAAO,CAAGJ,oBAAoB,EAApC,CACA,GAAMK,CAAAA,eAAe,CAAGJ,gBAAgB,CAACG,OAAD,CAAxC,CACA,GAAME,CAAAA,cAAc,CAAGJ,oBAAoB,EAA3C,CAEA,GAAMK,CAAAA,WAAW,CAAG,CAACD,cAAD,CAAiBD,eAAjB,CAApB,CACA,GAAMG,CAAAA,gBAAgB,CAAGC,MAAM,CAACC,oCAAP,EAA+Cb,OAAxE,CAGA,cAAe,SAASc,CAAAA,cAAT,CAAwBC,YAAxB,CAAsC,CACnD,GAAMC,CAAAA,KAAK,CAAGf,WAAW,CAACC,QAAQ,CAACK,OAAD,CAAT,CAAoBQ,YAApB,CACvBJ,gBAAgB,CAACZ,eAAe,MAAf,QAAmBW,WAAnB,CAAD,CADO,CAAzB,CAGAD,cAAc,CAACQ,GAAf,CAAmBX,QAAnB,EAEA,GAAIY,MAAM,CAACC,GAAX,CAAgB,CACd;AACAD,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,mBAAlB,CAAuC,UAAM,CAC3C,GAAMC,CAAAA,eAAe,CAAGC,OAAO,CAAC,mBAAD,CAA/B,CACAN,KAAK,CAACO,cAAN,CAAqBF,eAArB,EACD,CAHD,EAID,CACD,MAAOL,CAAAA,KAAP,CACD,CACD,OAAQT,OAAR","sourcesContent":["import {applyMiddleware, compose, createStore} from 'redux';\nimport reducers from '../reducers/index';\nimport {createBrowserHistory} from 'history'\nimport {routerMiddleware} from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas/index';\n\n\nconst history = createBrowserHistory();\nconst routeMiddleware = routerMiddleware(history);\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware, routeMiddleware];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n\nexport default function configureStore(initialState) {\n  const store = createStore(reducers(history), initialState,\n    composeEnhancers(applyMiddleware(...middlewares)));\n\n  sagaMiddleware.run(rootSaga);\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('../reducers/index', () => {\n      const nextRootReducer = require('../reducers/index');\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n  return store;\n}\nexport {history};\n"]},"metadata":{},"sourceType":"module"}