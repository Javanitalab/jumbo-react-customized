{"ast":null,"code":"import _defineProperty from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import MaskedInput from'react-text-mask';import NumberFormat from'react-number-format';import Input from'@material-ui/core/Input';var TextMaskCustom=/*#__PURE__*/function(_React$Component){_inherits(TextMaskCustom,_React$Component);function TextMaskCustom(){_classCallCheck(this,TextMaskCustom);return _possibleConstructorReturn(this,_getPrototypeOf(TextMaskCustom).apply(this,arguments));}_createClass(TextMaskCustom,[{key:\"render\",value:function render(){return React.createElement(MaskedInput,Object.assign({},this.props,{mask:['(',/[1-9]/,/\\d/,/\\d/,')',' ',/\\d/,/\\d/,/\\d/,'-',/\\d/,/\\d/,/\\d/,/\\d/],placeholderChar:\"\\u2000\",showMask:true}));}}]);return TextMaskCustom;}(React.Component);var NumberFormatCustom=/*#__PURE__*/function(_React$Component2){_inherits(NumberFormatCustom,_React$Component2);function NumberFormatCustom(){_classCallCheck(this,NumberFormatCustom);return _possibleConstructorReturn(this,_getPrototypeOf(NumberFormatCustom).apply(this,arguments));}_createClass(NumberFormatCustom,[{key:\"render\",value:function render(){var _this=this;return React.createElement(NumberFormat,Object.assign({},this.props,{onValueChange:function onValueChange(values){_this.props.onChange({target:{value:values.value}});},thousandSeparator:true,prefix:\"$\"}));}}]);return NumberFormatCustom;}(React.Component);var FormattedInputs=/*#__PURE__*/function(_React$Component3){_inherits(FormattedInputs,_React$Component3);function FormattedInputs(){var _getPrototypeOf2;var _this2;_classCallCheck(this,FormattedInputs);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this2=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(FormattedInputs)).call.apply(_getPrototypeOf2,[this].concat(args)));_this2.state={textmask:'(1  )    -    ',numberformat:'1320'};_this2.handleChange=function(name){return function(event){_this2.setState(_defineProperty({},name,event.target.value));};};return _this2;}_createClass(FormattedInputs,[{key:\"render\",value:function render(){return React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"col-lg-4 col-sm-6 col-12\"},React.createElement(Input,{value:this.state.textmask,inputComponent:TextMaskCustom,onChange:this.handleChange('textmask'),className:\"w-100 mb-3\",inputProps:{'aria-label':'Description'}})),React.createElement(\"div\",{className:\"col-lg-4 col-sm-6 col-12\"},React.createElement(Input,{value:this.state.numberformat,onChange:this.handleChange('numberformat'),inputComponent:NumberFormatCustom,className:\"w-100 mb-3\",inputProps:{'aria-label':'Description'}})));}}]);return FormattedInputs;}(React.Component);export default FormattedInputs;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/textFields/formattedInputs/FormattedInputs.js"],"names":["React","MaskedInput","NumberFormat","Input","TextMaskCustom","props","Component","NumberFormatCustom","values","onChange","target","value","FormattedInputs","state","textmask","numberformat","handleChange","name","event","setState"],"mappings":"s0BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,WAAP,KAAwB,iBAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,qBAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,C,GAEMC,CAAAA,c,oTACK,CACP,MACE,qBAAC,WAAD,kBACM,KAAKC,KADX,EAEE,IAAI,CAAE,CAAC,GAAD,CAAM,OAAN,CAAe,IAAf,CAAqB,IAArB,CAA2B,GAA3B,CAAgC,GAAhC,CAAqC,IAArC,CAA2C,IAA3C,CAAiD,IAAjD,CAAuD,GAAvD,CAA4D,IAA5D,CAAkE,IAAlE,CAAwE,IAAxE,CAA8E,IAA9E,CAFR,CAGE,eAAe,CAAE,QAHnB,CAIE,QAAQ,KAJV,GADF,CAQD,C,4BAV0BL,KAAK,CAACM,S,KAa7BC,CAAAA,kB,0UACK,gBACP,MACE,qBAAC,YAAD,kBACM,KAAKF,KADX,EAEE,aAAa,CAAE,uBAAAG,MAAM,CAAI,CACvB,KAAI,CAACH,KAAL,CAAWI,QAAX,CAAoB,CAClBC,MAAM,CAAE,CACNC,KAAK,CAAEH,MAAM,CAACG,KADR,CADU,CAApB,EAKD,CARH,CASE,iBAAiB,KATnB,CAUE,MAAM,CAAC,GAVT,GADF,CAcD,C,gCAhB8BX,KAAK,CAACM,S,KAuBjCM,CAAAA,e,obACJC,K,CAAQ,CACNC,QAAQ,CAAE,gBADJ,CAENC,YAAY,CAAE,MAFR,C,QAKRC,Y,CAAe,SAAAC,IAAI,QAAI,UAAAC,KAAK,CAAI,CAC9B,OAAKC,QAAL,oBACGF,IADH,CACUC,KAAK,CAACR,MAAN,CAAaC,KADvB,GAGD,CAJkB,E,mFAMV,CACP,MACE,4BAAK,SAAS,CAAC,KAAf,EACE,2BAAK,SAAS,CAAC,0BAAf,EACE,oBAAC,KAAD,EACE,KAAK,CAAE,KAAKE,KAAL,CAAWC,QADpB,CAEE,cAAc,CAAEV,cAFlB,CAGE,QAAQ,CAAE,KAAKY,YAAL,CAAkB,UAAlB,CAHZ,CAIE,SAAS,CAAC,YAJZ,CAKE,UAAU,CAAE,CACV,aAAc,aADJ,CALd,EADF,CADF,CAaE,2BAAK,SAAS,CAAC,0BAAf,EACE,oBAAC,KAAD,EACE,KAAK,CAAE,KAAKH,KAAL,CAAWE,YADpB,CAEE,QAAQ,CAAE,KAAKC,YAAL,CAAkB,cAAlB,CAFZ,CAGE,cAAc,CAAET,kBAHlB,CAIE,SAAS,CAAC,YAJZ,CAKE,UAAU,CAAE,CACV,aAAc,aADJ,CALd,EADF,CAbF,CADF,CA2BD,C,6BAxC2BP,KAAK,CAACM,S,EA2CpC,cAAeM,CAAAA,eAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport Input from '@material-ui/core/Input';\n\nclass TextMaskCustom extends React.Component {\n  render() {\n    return (\n      <MaskedInput\n        {...this.props}\n        mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n        placeholderChar={'\\u2000'}\n        showMask\n      />\n    );\n  }\n}\n\nclass NumberFormatCustom extends React.Component {\n  render() {\n    return (\n      <NumberFormat\n        {...this.props}\n        onValueChange={values => {\n          this.props.onChange({\n            target: {\n              value: values.value,\n            },\n          });\n        }}\n        thousandSeparator\n        prefix=\"$\"\n      />\n    );\n  }\n}\n\nNumberFormatCustom.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n\nclass FormattedInputs extends React.Component {\n  state = {\n    textmask: '(1  )    -    ',\n    numberformat: '1320',\n  };\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col-lg-4 col-sm-6 col-12\">\n          <Input\n            value={this.state.textmask}\n            inputComponent={TextMaskCustom}\n            onChange={this.handleChange('textmask')}\n            className=\"w-100 mb-3\"\n            inputProps={{\n              'aria-label': 'Description',\n            }}\n          />\n        </div>\n\n        <div className=\"col-lg-4 col-sm-6 col-12\">\n          <Input\n            value={this.state.numberformat}\n            onChange={this.handleChange('numberformat')}\n            inputComponent={NumberFormatCustom}\n            className=\"w-100 mb-3\"\n            inputProps={{\n              'aria-label': 'Description',\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FormattedInputs;"]},"metadata":{},"sourceType":"module"}