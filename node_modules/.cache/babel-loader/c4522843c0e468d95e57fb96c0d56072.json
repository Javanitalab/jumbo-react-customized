{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/autoComplete/downshift/IntegrationDownshift.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Downshift from 'downshift';\nconst suggestions = [{\n  label: 'Afghanistan'\n}, {\n  label: 'Aland Islands'\n}, {\n  label: 'Albania'\n}, {\n  label: 'Algeria'\n}, {\n  label: 'American Samoa'\n}, {\n  label: 'Andorra'\n}, {\n  label: 'Angola'\n}, {\n  label: 'Anguilla'\n}, {\n  label: 'Antarctica'\n}, {\n  label: 'Antigua and Barbuda'\n}, {\n  label: 'Argentina'\n}, {\n  label: 'Armenia'\n}, {\n  label: 'Aruba'\n}, {\n  label: 'Australia'\n}, {\n  label: 'Austria'\n}, {\n  label: 'Azerbaijan'\n}, {\n  label: 'Bahamas'\n}, {\n  label: 'Bahrain'\n}, {\n  label: 'Bangladesh'\n}, {\n  label: 'Barbados'\n}, {\n  label: 'Belarus'\n}, {\n  label: 'Belgium'\n}, {\n  label: 'Belize'\n}, {\n  label: 'Benin'\n}, {\n  label: 'Bermuda'\n}, {\n  label: 'Bhutan'\n}, {\n  label: 'Bolivia, Plurinational State of'\n}, {\n  label: 'Bonaire, Sint Eustatius and Saba'\n}, {\n  label: 'Bosnia and Herzegovina'\n}, {\n  label: 'Botswana'\n}, {\n  label: 'Bouvet Island'\n}, {\n  label: 'Brazil'\n}, {\n  label: 'British Indian Ocean Territory'\n}, {\n  label: 'Brunei Darussalam'\n}];\n\nfunction renderInput(inputProps) {\n  const {\n    InputProps,\n    classes,\n    ref,\n    ...other\n  } = inputProps;\n  return React.createElement(TextField, Object.assign({}, other, {\n    inputref: ref,\n    InputProps: {\n      classes: {\n        input: classes.input\n      },\n      ...InputProps\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }));\n}\n\nfunction renderSuggestion(params) {\n  const {\n    suggestion,\n    index,\n    itemProps,\n    highlightedIndex,\n    selectedItem\n  } = params;\n  const isHighlighted = highlightedIndex === index;\n  const isSelected = selectedItem === suggestion.label;\n  return React.createElement(MenuItem, Object.assign({}, itemProps, {\n    key: suggestion.label,\n    selected: isHighlighted,\n    component: \"div\",\n    style: {\n      fontWeight: isSelected ? 500 : 400\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), suggestion.label);\n}\n\nfunction getSuggestions(inputValue) {\n  let count = 0;\n  return suggestions.filter(suggestion => {\n    const keep = (!inputValue || suggestion.label.toLowerCase().includes(inputValue.toLowerCase())) && count < 5;\n\n    if (keep) {\n      count += 1;\n    }\n\n    return keep;\n  });\n}\n\nconst styles = {\n  container: {\n    flexGrow: 1,\n    height: 100,\n    width: '90%'\n  }\n};\n\nfunction IntegrationDownshift(props) {\n  const {\n    classes\n  } = props;\n  return React.createElement(Downshift, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, ({\n    getInputProps,\n    getItemProps,\n    isOpen,\n    inputValue,\n    selectedItem,\n    highlightedIndex\n  }) => React.createElement(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, renderInput({\n    fullWidth: true,\n    classes,\n    InputProps: getInputProps({\n      placeholder: 'Search a country (start with a)',\n      id: 'integration-downshift'\n    })\n  }), isOpen ? React.createElement(Paper, {\n    square: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, getSuggestions(inputValue).map((suggestion, index) => renderSuggestion({\n    suggestion,\n    index,\n    itemProps: getItemProps({\n      item: suggestion.label\n    }),\n    highlightedIndex,\n    selectedItem\n  }))) : null));\n}\n\nIntegrationDownshift.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(IntegrationDownshift);","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/autoComplete/downshift/IntegrationDownshift.js"],"names":["React","PropTypes","withStyles","TextField","Paper","MenuItem","Downshift","suggestions","label","renderInput","inputProps","InputProps","classes","ref","other","input","renderSuggestion","params","suggestion","index","itemProps","highlightedIndex","selectedItem","isHighlighted","isSelected","fontWeight","getSuggestions","inputValue","count","filter","keep","toLowerCase","includes","styles","container","flexGrow","height","width","IntegrationDownshift","props","getInputProps","getItemProps","isOpen","fullWidth","placeholder","id","map","item","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Downshift from 'downshift';\n\nconst suggestions = [\n  {label: 'Afghanistan'},\n  {label: 'Aland Islands'},\n  {label: 'Albania'},\n  {label: 'Algeria'},\n  {label: 'American Samoa'},\n  {label: 'Andorra'},\n  {label: 'Angola'},\n  {label: 'Anguilla'},\n  {label: 'Antarctica'},\n  {label: 'Antigua and Barbuda'},\n  {label: 'Argentina'},\n  {label: 'Armenia'},\n  {label: 'Aruba'},\n  {label: 'Australia'},\n  {label: 'Austria'},\n  {label: 'Azerbaijan'},\n  {label: 'Bahamas'},\n  {label: 'Bahrain'},\n  {label: 'Bangladesh'},\n  {label: 'Barbados'},\n  {label: 'Belarus'},\n  {label: 'Belgium'},\n  {label: 'Belize'},\n  {label: 'Benin'},\n  {label: 'Bermuda'},\n  {label: 'Bhutan'},\n  {label: 'Bolivia, Plurinational State of'},\n  {label: 'Bonaire, Sint Eustatius and Saba'},\n  {label: 'Bosnia and Herzegovina'},\n  {label: 'Botswana'},\n  {label: 'Bouvet Island'},\n  {label: 'Brazil'},\n  {label: 'British Indian Ocean Territory'},\n  {label: 'Brunei Darussalam'},\n];\n\nfunction renderInput(inputProps) {\n  const {InputProps, classes, ref, ...other} = inputProps;\n\n  return (\n    <TextField\n      {...other}\n      inputref={ref}\n      InputProps={{\n        classes: {\n          input: classes.input,\n        },\n        ...InputProps,\n      }}\n    />\n  );\n}\n\nfunction renderSuggestion(params) {\n  const {suggestion, index, itemProps, highlightedIndex, selectedItem} = params;\n  const isHighlighted = highlightedIndex === index;\n  const isSelected = selectedItem === suggestion.label;\n\n  return (\n    <MenuItem\n      {...itemProps}\n      key={suggestion.label}\n      selected={isHighlighted}\n      component=\"div\"\n      style={{\n        fontWeight: isSelected ? 500 : 400,\n      }}\n    >\n      {suggestion.label}\n    </MenuItem>\n  );\n}\n\nfunction getSuggestions(inputValue) {\n  let count = 0;\n\n  return suggestions.filter(suggestion => {\n    const keep =\n      (!inputValue || suggestion.label.toLowerCase().includes(inputValue.toLowerCase())) &&\n      count < 5;\n\n    if (keep) {\n      count += 1;\n    }\n\n    return keep;\n  });\n}\n\nconst styles = {\n  container: {\n    flexGrow: 1,\n    height: 100,\n    width: '90%',\n  },\n};\n\nfunction IntegrationDownshift(props) {\n  const {classes} = props;\n\n  return (\n    <Downshift>\n      {({getInputProps, getItemProps, isOpen, inputValue, selectedItem, highlightedIndex}) => (\n        <div className={classes.container}>\n          {renderInput({\n            fullWidth: true,\n            classes,\n            InputProps: getInputProps({\n              placeholder: 'Search a country (start with a)',\n              id: 'integration-downshift',\n            }),\n          })}\n          {isOpen ? (\n            <Paper square>\n              {getSuggestions(inputValue).map((suggestion, index) =>\n                renderSuggestion({\n                  suggestion,\n                  index,\n                  itemProps: getItemProps({item: suggestion.label}),\n                  highlightedIndex,\n                  selectedItem,\n                }),\n              )}\n            </Paper>\n          ) : null}\n        </div>\n      )}\n    </Downshift>\n  );\n}\n\nIntegrationDownshift.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(IntegrationDownshift);"]},"metadata":{},"sourceType":"module"}