{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/components/dashboard/eCommerce/DoughnutChart.js\";\nimport React, { Component } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\n\nconst data = canvas => {\n  const ctx = canvas.getContext(\"2d\");\n  const _stroke = ctx.stroke;\n\n  ctx.stroke = function () {\n    ctx.save();\n    ctx.shadowColor = 'rgba(76,175,80,0.8)';\n    ctx.shadowBlur = 25;\n    ctx.shadowOffsetX = 0;\n    ctx.shadowOffsetY = 12;\n\n    _stroke.apply(this, arguments);\n\n    ctx.restore();\n  };\n\n  return {\n    labels: ['Android', 'iSO'],\n    datasets: [{\n      data: [100, 300],\n      backgroundColor: ['#FF9800', '#4CAF50'],\n      borderColor: ['#FF9800', '#4CAF50'],\n      hoverBackgroundColor: ['#FF9800', '#4CAF50']\n    }]\n  };\n};\n\nconst options = {\n  legend: {\n    display: false,\n    labels: {\n      fontColor: '#AAAEB3'\n    }\n  },\n  layout: {\n    padding: {\n      bottom: 20\n    }\n  },\n  cutoutPercentage: 75,\n  borderWidth: 0\n};\n\nclass DoughnutChart extends Component {\n  render() {\n    return React.createElement(Doughnut, {\n      data: data,\n      options: options,\n      height: 250,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default DoughnutChart;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/components/dashboard/eCommerce/DoughnutChart.js"],"names":["React","Component","Doughnut","data","canvas","ctx","getContext","_stroke","stroke","save","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","apply","arguments","restore","labels","datasets","backgroundColor","borderColor","hoverBackgroundColor","options","legend","display","fontColor","layout","padding","bottom","cutoutPercentage","borderWidth","DoughnutChart","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,QAAR,QAAuB,iBAAvB;;AAGA,MAAMC,IAAI,GAAIC,MAAD,IAAY;AACvB,QAAMC,GAAG,GAAGD,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAZ;AACA,QAAMC,OAAO,GAAGF,GAAG,CAACG,MAApB;;AACAH,EAAAA,GAAG,CAACG,MAAJ,GAAa,YAAY;AACvBH,IAAAA,GAAG,CAACI,IAAJ;AACAJ,IAAAA,GAAG,CAACK,WAAJ,GAAkB,qBAAlB;AACAL,IAAAA,GAAG,CAACM,UAAJ,GAAiB,EAAjB;AACAN,IAAAA,GAAG,CAACO,aAAJ,GAAoB,CAApB;AACAP,IAAAA,GAAG,CAACQ,aAAJ,GAAoB,EAApB;;AACAN,IAAAA,OAAO,CAACO,KAAR,CAAc,IAAd,EAAoBC,SAApB;;AACAV,IAAAA,GAAG,CAACW,OAAJ;AACD,GARD;;AASA,SAAO;AACLC,IAAAA,MAAM,EAAE,CACN,SADM,EAEN,KAFM,CADH;AAKLC,IAAAA,QAAQ,EAAE,CAAC;AACTf,MAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,CADG;AAETgB,MAAAA,eAAe,EAAE,CAAC,SAAD,EAAY,SAAZ,CAFR;AAGTC,MAAAA,WAAW,EAAE,CAAC,SAAD,EAAY,SAAZ,CAHJ;AAITC,MAAAA,oBAAoB,EAAE,CAAC,SAAD,EAAY,SAAZ;AAJb,KAAD;AALL,GAAP;AAaD,CAzBD;;AA2BA,MAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE,KADH;AAENP,IAAAA,MAAM,EAAE;AACNQ,MAAAA,SAAS,EAAE;AADL;AAFF,GADM;AAOdC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD;AADH,GAPM;AAYdC,EAAAA,gBAAgB,EAAE,EAZJ;AAadC,EAAAA,WAAW,EAAE;AAbC,CAAhB;;AAiBA,MAAMC,aAAN,SAA4B9B,SAA5B,CAAsC;AAEpC+B,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE7B,IAAhB;AAAsB,MAAA,OAAO,EAAEmB,OAA/B;AAAwC,MAAA,MAAM,EAAE,GAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AANmC;;AAStC,eAAeS,aAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Doughnut} from 'react-chartjs-2';\n\n\nconst data = (canvas) => {\n  const ctx = canvas.getContext(\"2d\");\n  const _stroke = ctx.stroke;\n  ctx.stroke = function () {\n    ctx.save();\n    ctx.shadowColor = 'rgba(76,175,80,0.8)';\n    ctx.shadowBlur = 25;\n    ctx.shadowOffsetX = 0;\n    ctx.shadowOffsetY = 12;\n    _stroke.apply(this, arguments);\n    ctx.restore();\n  };\n  return {\n    labels: [\n      'Android',\n      'iSO',\n    ],\n    datasets: [{\n      data: [100, 300],\n      backgroundColor: ['#FF9800', '#4CAF50'],\n      borderColor: ['#FF9800', '#4CAF50'],\n      hoverBackgroundColor: ['#FF9800', '#4CAF50'],\n    }],\n\n  }\n}\n\nconst options = {\n  legend: {\n    display: false,\n    labels: {\n      fontColor: '#AAAEB3'\n    }\n  },\n  layout: {\n    padding: {\n      bottom: 20\n    }\n  },\n  cutoutPercentage: 75,\n  borderWidth: 0\n};\n\n\nclass DoughnutChart extends Component {\n\n  render() {\n    return (\n      <Doughnut data={data} options={options} height={250}/>\n    );\n  }\n}\n\nexport default DoughnutChart;"]},"metadata":{},"sourceType":"module"}