{"ast":null,"code":"import _classCallCheck from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import FormControlLabel from'@material-ui/core/FormControlLabel';import Switch from'@material-ui/core/Switch';var SwitchLabels=/*#__PURE__*/function(_Component){_inherits(SwitchLabels,_Component);function SwitchLabels(){var _getPrototypeOf2;var _this;_classCallCheck(this,SwitchLabels);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(SwitchLabels)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={checkedA:true,checkedB:true,checkedC:false,checkedD:false,checkedE:true,checkedF:true,checkedG:true};return _this;}_createClass(SwitchLabels,[{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",null,React.createElement(FormControlLabel,{control:React.createElement(Switch,{color:\"primary\",classes:{checked:'text-primary',bar:'bg-primary'},checked:this.state.checkedA,onChange:function onChange(event,checked){return _this2.setState({checkedA:checked});}}),label:\"A\"}),React.createElement(FormControlLabel,{control:React.createElement(Switch,{classes:{checked:'text-secondary',bar:'bg-secondary'},checked:this.state.checkedB,onChange:function onChange(event,checked){return _this2.setState({checkedB:checked});}}),label:\"B\"}),React.createElement(FormControlLabel,{control:React.createElement(Switch,null),disabled:true,label:\"C\"}),React.createElement(FormControlLabel,{control:React.createElement(Switch,{classes:{checked:'text-dark',bar:'bg-dark'},checked:this.state.checkedD,onChange:function onChange(event,checked){return _this2.setState({checkedD:checked});}}),label:\"D\"}),React.createElement(FormControlLabel,{control:React.createElement(Switch,{classes:{checked:'text-success',bar:'bg-success'},checked:this.state.checkedE,onChange:function onChange(event,checked){return _this2.setState({checkedE:checked});}}),label:\"E\"}),React.createElement(FormControlLabel,{control:React.createElement(Switch,{classes:{checked:'text-danger',bar:'bg-danger'},checked:this.state.checkedF,onChange:function onChange(event,checked){return _this2.setState({checkedF:checked});}}),label:\"F\"}),React.createElement(FormControlLabel,{control:React.createElement(Switch,{classes:{checked:'text-warning',bar:'bg-warning'},checked:this.state.checkedG,onChange:function onChange(event,checked){return _this2.setState({checkedG:checked});}}),label:\"G\"}));}}]);return SwitchLabels;}(Component);export default SwitchLabels;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/selection/switches/SwitchLabels.js"],"names":["React","Component","FormControlLabel","Switch","SwitchLabels","state","checkedA","checkedB","checkedC","checkedD","checkedE","checkedF","checkedG","checked","bar","event","setState"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nclass SwitchLabels extends Component {\n  state = {\n    checkedA: true,\n    checkedB: true,\n    checkedC: false,\n    checkedD: false,\n    checkedE: true,\n    checkedF: true,\n    checkedG: true,\n  };\n\n  render() {\n    return (\n      <div>\n        <FormControlLabel\n          control={\n            <Switch color=\"primary\"\n                    classes={{\n                      checked: 'text-primary',\n                      bar: 'bg-primary',\n                    }}\n                    checked={this.state.checkedA}\n                    onChange={(event, checked) => this.setState({checkedA: checked})}\n            />\n          }\n          label=\"A\"\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              classes={{\n                checked: 'text-secondary',\n                bar: 'bg-secondary',\n              }}\n              checked={this.state.checkedB}\n              onChange={(event, checked) => this.setState({checkedB: checked})}\n            />\n          }\n          label=\"B\"\n        />\n        <FormControlLabel control={<Switch/>} disabled label=\"C\"/>\n\n        <FormControlLabel\n          control={\n            <Switch\n              classes={{\n                checked: 'text-dark',\n                bar: 'bg-dark',\n              }}\n              checked={this.state.checkedD}\n              onChange={(event, checked) => this.setState({checkedD: checked})}\n            />\n          }\n          label=\"D\"\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              classes={{\n                checked: 'text-success',\n                bar: 'bg-success',\n              }}\n              checked={this.state.checkedE}\n              onChange={(event, checked) => this.setState({checkedE: checked})}\n            />\n          }\n          label=\"E\"\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              classes={{\n                checked: 'text-danger',\n                bar: 'bg-danger',\n              }}\n              checked={this.state.checkedF}\n              onChange={(event, checked) => this.setState({checkedF: checked})}\n            />\n          }\n          label=\"F\"\n        /><FormControlLabel\n        control={\n          <Switch\n            classes={{\n              checked: 'text-warning',\n              bar: 'bg-warning',\n            }}\n            checked={this.state.checkedG}\n            onChange={(event, checked) => this.setState({checkedG: checked})}\n          />\n        }\n        label=\"G\"\n      />\n\n      </div>\n    );\n  }\n}\n\nexport default SwitchLabels;"]},"metadata":{},"sourceType":"module"}