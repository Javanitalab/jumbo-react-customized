{"ast":null,"code":"import _classCallCheck from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/inherits\";import _objectSpread from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import Autosuggest from'react-autosuggest';import match from'autosuggest-highlight/match';import parse from'autosuggest-highlight/parse';import TextField from'@material-ui/core/TextField';import Paper from'@material-ui/core/Paper';import MenuItem from'@material-ui/core/MenuItem';import{withStyles}from'@material-ui/core/styles';var suggestions=[{label:'Afghanistan'},{label:'Aland Islands'},{label:'Albania'},{label:'Algeria'},{label:'American Samoa'},{label:'Andorra'},{label:'Angola'},{label:'Anguilla'},{label:'Antarctica'},{label:'Antigua and Barbuda'},{label:'Argentina'},{label:'Armenia'},{label:'Aruba'},{label:'Australia'},{label:'Austria'},{label:'Azerbaijan'},{label:'Bahamas'},{label:'Bahrain'},{label:'Bangladesh'},{label:'Barbados'},{label:'Belarus'},{label:'Belgium'},{label:'Belize'},{label:'Benin'},{label:'Bermuda'},{label:'Bhutan'},{label:'Bolivia, Plurinational State of'},{label:'Bonaire, Sint Eustatius and Saba'},{label:'Bosnia and Herzegovina'},{label:'Botswana'},{label:'Bouvet Island'},{label:'Brazil'},{label:'British Indian Ocean Territory'},{label:'Brunei Darussalam'}];function renderInput(inputProps){var classes=inputProps.classes,ref=inputProps.ref,other=_objectWithoutProperties(inputProps,[\"classes\",\"ref\"]);return React.createElement(TextField,{fullWidth:true,inputref:ref,InputProps:_objectSpread({classes:{input:classes.input}},other)});}function renderSuggestion(suggestion,_ref){var query=_ref.query,isHighlighted=_ref.isHighlighted;var matches=match(suggestion.label,query);var parts=parse(suggestion.label,matches);return React.createElement(MenuItem,{selected:isHighlighted,component:\"div\"},React.createElement(\"div\",null,parts.map(function(part,index){return part.highlight?React.createElement(\"span\",{key:String(index),style:{fontWeight:300}},part.text):React.createElement(\"strong\",{key:String(index),style:{fontWeight:500}},part.text);})));}function renderSuggestionsContainer(options){var containerProps=options.containerProps,children=options.children;return React.createElement(\"div\",{className:\"position-relative z-index-20\"},React.createElement(Paper,Object.assign({},containerProps,{square:true}),children));}function getSuggestionValue(suggestion){return suggestion.label;}function getSuggestions(value){var inputValue=value.trim().toLowerCase();var inputLength=inputValue.length;var count=0;return inputLength===0?[]:suggestions.filter(function(suggestion){var keep=count<5&&suggestion.label.toLowerCase().slice(0,inputLength)===inputValue;if(keep){count+=1;}return keep;});}var styles=function styles(theme){return{container:{flexGrow:1,position:'relative',height:100,width:'60%'},suggestionsContainerOpen:{position:'absolute',marginTop:theme.spacing.unit,marginBottom:theme.spacing.unit*3,left:0,right:0,zIndex:10},suggestion:{display:'block'},suggestionsList:{margin:0,padding:0,listStyleType:'none'}};};var IntegrationAutosuggest=/*#__PURE__*/function(_React$Component){_inherits(IntegrationAutosuggest,_React$Component);function IntegrationAutosuggest(){var _getPrototypeOf2;var _this;_classCallCheck(this,IntegrationAutosuggest);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(IntegrationAutosuggest)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={value:'',suggestions:[]};_this.handleSuggestionsFetchRequested=function(_ref2){var value=_ref2.value;_this.setState({suggestions:getSuggestions(value)});};_this.handleSuggestionsClearRequested=function(){_this.setState({suggestions:[]});};_this.handleChange=function(event,_ref3){var newValue=_ref3.newValue;_this.setState({value:newValue});};return _this;}_createClass(IntegrationAutosuggest,[{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Autosuggest,{theme:{container:classes.container,suggestionsContainerOpen:classes.suggestionsContainerOpen,suggestionsList:classes.suggestionsList,suggestion:classes.suggestion},renderInputComponent:renderInput,suggestions:this.state.suggestions,onSuggestionsFetchRequested:this.handleSuggestionsFetchRequested,onSuggestionsClearRequested:this.handleSuggestionsClearRequested,renderSuggestionsContainer:renderSuggestionsContainer,getSuggestionValue:getSuggestionValue,renderSuggestion:renderSuggestion,inputProps:{classes:classes,placeholder:'Search a country (start with a)',value:this.state.value,onChange:this.handleChange}});}}]);return IntegrationAutosuggest;}(React.Component);export default withStyles(styles)(IntegrationAutosuggest);","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/autoComplete/autosuggest/IntegrationAutosuggest.js"],"names":["React","Autosuggest","match","parse","TextField","Paper","MenuItem","withStyles","suggestions","label","renderInput","inputProps","classes","ref","other","input","renderSuggestion","suggestion","query","isHighlighted","matches","parts","map","part","index","highlight","String","fontWeight","text","renderSuggestionsContainer","options","containerProps","children","getSuggestionValue","getSuggestions","value","inputValue","trim","toLowerCase","inputLength","length","count","filter","keep","slice","styles","theme","container","flexGrow","position","height","width","suggestionsContainerOpen","marginTop","spacing","unit","marginBottom","left","right","zIndex","display","suggestionsList","margin","padding","listStyleType","IntegrationAutosuggest","state","handleSuggestionsFetchRequested","setState","handleSuggestionsClearRequested","handleChange","event","newValue","props","placeholder","onChange","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Autosuggest from 'react-autosuggest';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {withStyles} from '@material-ui/core/styles';\n\nconst suggestions = [\n  {label: 'Afghanistan'},\n  {label: 'Aland Islands'},\n  {label: 'Albania'},\n  {label: 'Algeria'},\n  {label: 'American Samoa'},\n  {label: 'Andorra'},\n  {label: 'Angola'},\n  {label: 'Anguilla'},\n  {label: 'Antarctica'},\n  {label: 'Antigua and Barbuda'},\n  {label: 'Argentina'},\n  {label: 'Armenia'},\n  {label: 'Aruba'},\n  {label: 'Australia'},\n  {label: 'Austria'},\n  {label: 'Azerbaijan'},\n  {label: 'Bahamas'},\n  {label: 'Bahrain'},\n  {label: 'Bangladesh'},\n  {label: 'Barbados'},\n  {label: 'Belarus'},\n  {label: 'Belgium'},\n  {label: 'Belize'},\n  {label: 'Benin'},\n  {label: 'Bermuda'},\n  {label: 'Bhutan'},\n  {label: 'Bolivia, Plurinational State of'},\n  {label: 'Bonaire, Sint Eustatius and Saba'},\n  {label: 'Bosnia and Herzegovina'},\n  {label: 'Botswana'},\n  {label: 'Bouvet Island'},\n  {label: 'Brazil'},\n  {label: 'British Indian Ocean Territory'},\n  {label: 'Brunei Darussalam'},\n];\n\nfunction renderInput(inputProps) {\n  const {classes, ref, ...other} = inputProps;\n\n  return (\n    <TextField\n      fullWidth\n      inputref={ref}\n      InputProps={{\n        classes: {\n          input: classes.input,\n        },\n        ...other,\n      }}\n    />\n  );\n}\n\nfunction renderSuggestion(suggestion, {query, isHighlighted}) {\n  const matches = match(suggestion.label, query);\n  const parts = parse(suggestion.label, matches);\n\n  return (\n    <MenuItem selected={isHighlighted} component=\"div\">\n      <div>\n        {parts.map((part, index) => {\n          return part.highlight ? (\n            <span key={String(index)} style={{fontWeight: 300}}>\n              {part.text}\n            </span>\n          ) : (\n            <strong key={String(index)} style={{fontWeight: 500}}>\n              {part.text}\n            </strong>\n          );\n        })}\n      </div>\n    </MenuItem>\n  );\n}\n\nfunction renderSuggestionsContainer(options) {\n  const {containerProps, children} = options;\n\n  return (\n    <div className=\"position-relative z-index-20\">\n      <Paper {...containerProps} square>\n        {children}\n      </Paper>\n    </div>\n  );\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.label;\n}\n\nfunction getSuggestions(value) {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n  let count = 0;\n\n  return inputLength === 0\n    ? []\n    : suggestions.filter(suggestion => {\n      const keep =\n        count < 5 && suggestion.label.toLowerCase().slice(0, inputLength) === inputValue;\n\n      if (keep) {\n        count += 1;\n      }\n\n      return keep;\n    });\n}\n\nconst styles = theme => ({\n  container: {\n    flexGrow: 1,\n    position: 'relative',\n    height: 100,\n    width: '60%',\n  },\n  suggestionsContainerOpen: {\n    position: 'absolute',\n    marginTop: theme.spacing.unit,\n    marginBottom: theme.spacing.unit * 3,\n    left: 0,\n    right: 0,\n    zIndex: 10,\n  },\n  suggestion: {\n    display: 'block',\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: 'none',\n  },\n});\n\nclass IntegrationAutosuggest extends React.Component {\n  state = {\n    value: '',\n    suggestions: [],\n  };\n\n  handleSuggestionsFetchRequested = ({value}) => {\n    this.setState({\n      suggestions: getSuggestions(value),\n    });\n  };\n\n  handleSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: [],\n    });\n  };\n\n  handleChange = (event, {newValue}) => {\n    this.setState({\n      value: newValue,\n    });\n  };\n\n  render() {\n    const {classes} = this.props;\n\n    return (\n      <Autosuggest\n        theme={{\n          container: classes.container,\n          suggestionsContainerOpen: classes.suggestionsContainerOpen,\n          suggestionsList: classes.suggestionsList,\n          suggestion: classes.suggestion,\n        }}\n        renderInputComponent={renderInput}\n        suggestions={this.state.suggestions}\n        onSuggestionsFetchRequested={this.handleSuggestionsFetchRequested}\n        onSuggestionsClearRequested={this.handleSuggestionsClearRequested}\n        renderSuggestionsContainer={renderSuggestionsContainer}\n        getSuggestionValue={getSuggestionValue}\n        renderSuggestion={renderSuggestion}\n        inputProps={{\n          classes,\n          placeholder: 'Search a country (start with a)',\n          value: this.state.value,\n          onChange: this.handleChange,\n        }}\n      />\n    );\n  }\n}\n\nIntegrationAutosuggest.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(IntegrationAutosuggest);"]},"metadata":{},"sourceType":"module"}