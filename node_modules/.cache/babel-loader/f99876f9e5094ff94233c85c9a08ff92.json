{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/dashboard/routes/CRM/TaskItem.js\";\nimport React from \"react\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Aux from \"util/Auxiliary\";\nconst taskTags = [{\n  id: 1,\n  name: 'HTML',\n  color: 'danger'\n}, {\n  id: 2,\n  name: 'React',\n  color: 'success'\n}, {\n  id: 3,\n  name: 'JavaScript',\n  color: 'info'\n}, {\n  id: 4,\n  name: 'CSS',\n  color: 'warning'\n}];\n\nconst getTags = tags => {\n  return taskTags.map((tag, index) => {\n    if (tags.includes(tag.id)) {\n      return React.createElement(Tooltip, {\n        key: index,\n        title: tag.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: `text-${tag.color}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-circle jr-fs-xxs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })));\n    }\n\n    return null;\n  });\n};\n\nconst TaskItem = ({\n  data,\n  onChange\n}) => {\n  const {\n    title,\n    tags,\n    completed,\n    user,\n    dueDate\n  } = data;\n  return React.createElement(Aux, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"media jr-task-list-item align-items-sm-center flex-nowrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mr-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    className: \"size-20\",\n    checked: completed,\n    onChange: () => onChange(data),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"media-body jr-task-item-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"jr-task-item-content-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: `text-truncate mb-0 ${completed ? 'text-strikethrough' : 'jr-text-hover'}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, title)), React.createElement(\"div\", {\n    className: \"jr-task-item-content-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: \"ml-sm-3 size-30 order-sm-3\",\n    src: user.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"bg-grey text-white px-2 jr-fs-sm ml-2 mb-0 rounded-xl order-sm-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, user.projectName), React.createElement(\"ul\", {\n    className: \"jr-dot-list mb-0 order-sm-1 ml-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, getTags(tags)), React.createElement(\"span\", {\n    className: \"jr-fs-sm text-grey ml-3 jr-task-date order-sm-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, dueDate)))));\n};\n\nexport default TaskItem;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/dashboard/routes/CRM/TaskItem.js"],"names":["React","Avatar","Tooltip","Checkbox","Aux","taskTags","id","name","color","getTags","tags","map","tag","index","includes","TaskItem","data","onChange","title","completed","user","dueDate","avatar","projectName"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport Aux from \"util/Auxiliary\";\n\n\nconst taskTags = [\n  {\n    id: 1,\n    name: 'HTML',\n    color: 'danger',\n  }, {\n    id: 2,\n    name: 'React',\n    color: 'success',\n  }, {\n    id: 3,\n    name: 'JavaScript',\n    color: 'info',\n  }, {\n    id: 4,\n    name: 'CSS',\n    color: 'warning',\n  }];\n\nconst getTags = (tags) => {\n  return taskTags.map((tag, index) => {\n    if (tags.includes(tag.id)) {\n      return <Tooltip key={index} title={tag.name}>\n        <li className={`text-${tag.color}`}>\n          <i className=\"zmdi zmdi-circle jr-fs-xxs\"/>\n        </li>\n      </Tooltip>\n    }\n    return null;\n  })\n};\n\nconst TaskItem = ({data, onChange}) => {\n\n  const {title, tags, completed, user, dueDate} = data;\n  return (\n    <Aux>\n      <div className=\"media jr-task-list-item align-items-sm-center flex-nowrap\">\n        <div className=\"mr-3\">\n          <Checkbox className=\"size-20\"\n                    checked={completed}\n                    onChange={() => onChange(data)}\n          />\n        </div>\n        <div className=\"media-body jr-task-item-content\">\n          <div className=\"jr-task-item-content-left\">\n            <p className={`text-truncate mb-0 ${completed ? 'text-strikethrough' : 'jr-text-hover'}`}>{title}</p>\n          </div>\n          <div className=\"jr-task-item-content-right\">\n            <Avatar className=\"ml-sm-3 size-30 order-sm-3\" src={user.avatar}/>\n            <span className=\"bg-grey text-white px-2 jr-fs-sm ml-2 mb-0 rounded-xl order-sm-2\">{user.projectName}</span>\n            <ul className=\"jr-dot-list mb-0 order-sm-1 ml-2\">\n              {getTags(tags)}\n            </ul>\n            <span className=\"jr-fs-sm text-grey ml-3 jr-task-date order-sm-4\">{dueDate}</span>\n          </div>\n        </div>\n      </div>\n    </Aux>\n  );\n};\n\nexport default TaskItem;\n"]},"metadata":{},"sourceType":"module"}