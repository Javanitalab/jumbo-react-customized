{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/components/contact/AddContact/index.js\";\nimport React from 'react';\nimport { Modal, ModalHeader } from 'reactstrap';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IntlMessages from 'util/IntlMessages';\n\nclass AddContact extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      id,\n      thumb,\n      name,\n      email,\n      phone,\n      designation,\n      selected,\n      starred,\n      frequently\n    } = props.contact;\n    this.state = {\n      id,\n      thumb,\n      name,\n      email,\n      phone,\n      designation,\n      selected,\n      starred,\n      frequently\n    };\n  }\n\n  render() {\n    const {\n      onSaveContact,\n      onContactClose,\n      open,\n      contact\n    } = this.props;\n    const {\n      id,\n      name,\n      email,\n      phone,\n      designation,\n      selected,\n      starred,\n      frequently\n    } = this.state;\n    let {\n      thumb\n    } = this.state;\n\n    if (!thumb) {\n      thumb = 'https://via.placeholder.com/225x225';\n    }\n\n    return React.createElement(Modal, {\n      className: \"modal-box\",\n      toggle: onContactClose,\n      isOpen: open,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      className: \"modal-box-header bg-primary text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, contact.name === '' ? React.createElement(IntlMessages, {\n      id: \"contact.addContact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }) : React.createElement(IntlMessages, {\n      id: \"contact.saveContact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(IconButton, {\n      className: \"text-white\",\n      onClick: onContactClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"modal-box-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row no-gutters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-3 text-center text-lg-right order-lg-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"ml-lg-3 mb-4 mb-lg-0 avatar size-120\",\n      src: thumb,\n      alt: thumb,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-lg-9 d-flex flex-column order-lg-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"required\",\n      label: React.createElement(IntlMessages, {\n        id: \"appModule.name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }),\n      onChange: event => this.setState({\n        name: event.target.value\n      }),\n      defaultValue: name,\n      margin: \"none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"required\",\n      label: React.createElement(IntlMessages, {\n        id: \"appModule.email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }),\n      onChange: event => this.setState({\n        email: event.target.value\n      }),\n      value: email,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"required\",\n      label: React.createElement(IntlMessages, {\n        id: \"appModule.phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }),\n      onChange: event => this.setState({\n        phone: event.target.value\n      }),\n      value: phone,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"required\",\n      label: React.createElement(IntlMessages, {\n        id: \"appModule.designation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }),\n      onChange: event => this.setState({\n        designation: event.target.value\n      }),\n      value: designation,\n      multiline: true,\n      rowsMax: \"4\",\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"modal-box-footer d-flex flex-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Button, {\n      disabled: name === '',\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => {\n        onContactClose();\n        onSaveContact({\n          'id': id,\n          'name': name,\n          'thumb': thumb,\n          'email': email,\n          'phone': phone,\n          'designation': designation,\n          'selected': selected,\n          'starred': starred,\n          'frequently': frequently\n        });\n        this.setState({\n          'id': id + 1,\n          'name': '',\n          'thumb': '',\n          'email': '',\n          'phone': '',\n          'designation': ''\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(IntlMessages, {\n      id: \"contact.saveContact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default AddContact;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/components/contact/AddContact/index.js"],"names":["React","Modal","ModalHeader","TextField","Button","IconButton","CloseIcon","IntlMessages","AddContact","Component","constructor","props","id","thumb","name","email","phone","designation","selected","starred","frequently","contact","state","render","onSaveContact","onContactClose","open","event","setState","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Modal, ModalHeader} from 'reactstrap';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IntlMessages from 'util/IntlMessages';\n\nclass AddContact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {id, thumb, name, email, phone, designation, selected, starred, frequently} = props.contact;\n    this.state = {\n      id,\n      thumb,\n      name,\n      email,\n      phone,\n      designation,\n      selected,\n      starred,\n      frequently\n    }\n  }\n\n  render() {\n    const {onSaveContact, onContactClose, open, contact} = this.props;\n    const {id, name, email, phone, designation, selected, starred, frequently} = this.state;\n    let {thumb} = this.state;\n    if (!thumb) {\n      thumb = 'https://via.placeholder.com/225x225';\n    }\n    return (\n      <Modal className=\"modal-box\" toggle={onContactClose} isOpen={open}>\n        <ModalHeader className=\"modal-box-header bg-primary text-white\">\n          {contact.name === '' ? <IntlMessages id=\"contact.addContact\"/> :\n            <IntlMessages id=\"contact.saveContact\"/>}\n          <IconButton className=\"text-white\"\n                      onClick={onContactClose}>\n            <CloseIcon/>\n          </IconButton>\n        </ModalHeader>\n\n        <div className=\"modal-box-content\">\n          <div className=\"row no-gutters\">\n            <div className=\"col-lg-3 text-center text-lg-right order-lg-2\">\n              <img className=\"ml-lg-3 mb-4 mb-lg-0 avatar size-120\" src={thumb} alt={thumb}/>\n            </div>\n\n            <div className=\"col-lg-9 d-flex flex-column order-lg-1\">\n              <TextField\n                required\n                id=\"required\"\n                label={<IntlMessages id=\"appModule.name\"/>}\n                onChange={(event) => this.setState({name: event.target.value})}\n                defaultValue={name}\n                margin=\"none\"/>\n              <TextField\n                id=\"required\"\n                label={<IntlMessages id=\"appModule.email\"/>}\n                onChange={(event) => this.setState({email: event.target.value})}\n                value={email}\n                margin=\"normal\"/>\n              <TextField\n                id=\"required\"\n                label={<IntlMessages id=\"appModule.phone\"/>}\n                onChange={(event) => this.setState({phone: event.target.value})}\n                value={phone}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"required\"\n                label={<IntlMessages id=\"appModule.designation\"/>}\n                onChange={(event) => this.setState({designation: event.target.value})}\n                value={designation}\n                multiline\n                rowsMax=\"4\"\n                margin=\"normal\"/>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"modal-box-footer d-flex flex-row\">\n          <Button disabled={name === ''} variant=\"contained\" color=\"primary\" onClick={() => {\n            onContactClose();\n            onSaveContact(\n              {\n                'id': id,\n                'name': name,\n                'thumb': thumb,\n                'email': email,\n                'phone': phone,\n                'designation': designation,\n                'selected': selected,\n                'starred': starred,\n                'frequently': frequently\n              });\n            this.setState({\n              'id': id + 1,\n              'name': '',\n              'thumb': '',\n              'email': '',\n              'phone': '',\n              'designation': '',\n            })\n\n          }}><IntlMessages id=\"contact.saveContact\"/></Button>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default AddContact;"]},"metadata":{},"sourceType":"module"}