{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/chips/chipArray/ChipsArray.js\";\nimport React, { Component } from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\n\nclass ChipsArray extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chipData: [{\n        key: 0,\n        name: 'Domnic Harris',\n        image: 'https://via.placeholder.com/150x150'\n      }, {\n        key: 1,\n        name: 'Garry Sobars',\n        image: 'https://via.placeholder.com/150x150'\n      }, {\n        key: 2,\n        name: 'Stella Johnson',\n        image: 'https://via.placeholder.com/120x120'\n      }, {\n        key: 3,\n        name: 'Alex Dolgove',\n        image: 'https://via.placeholder.com/128x128'\n      }, {\n        key: 4,\n        name: 'John Smith',\n        image: 'https://via.placeholder.com/150x150'\n      }]\n    };\n\n    this.handleRequestDelete = data => () => {\n      const chipData = [...this.state.chipData];\n      const chipToDelete = chipData.indexOf(data);\n      chipData.splice(chipToDelete, 1);\n      this.setState({\n        chipData\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"manage-margin d-flex flex-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, this.state.chipData.map(data => {\n      return React.createElement(Chip, {\n        avatar: React.createElement(Avatar, {\n          src: data.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }),\n        label: data.name,\n        key: data.key,\n        onDelete: this.handleRequestDelete(data),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\n\nexport default ChipsArray;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/chips/chipArray/ChipsArray.js"],"names":["React","Component","Chip","Avatar","ChipsArray","state","chipData","key","name","image","handleRequestDelete","data","chipToDelete","indexOf","splice","setState","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCI,KADiC,GACzB;AACNC,MAAAA,QAAQ,EAAE,CACR;AAACC,QAAAA,GAAG,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,eAAf;AAAgCC,QAAAA,KAAK,EAAE;AAAvC,OADQ,EAER;AAACF,QAAAA,GAAG,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,cAAf;AAA+BC,QAAAA,KAAK,EAAE;AAAtC,OAFQ,EAGR;AAACF,QAAAA,GAAG,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,gBAAf;AAAiCC,QAAAA,KAAK,EAAE;AAAxC,OAHQ,EAIR;AAACF,QAAAA,GAAG,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,cAAf;AAA+BC,QAAAA,KAAK,EAAE;AAAtC,OAJQ,EAKR;AAACF,QAAAA,GAAG,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,YAAf;AAA6BC,QAAAA,KAAK,EAAE;AAApC,OALQ;AADJ,KADyB;;AAAA,SAWjCC,mBAXiC,GAWXC,IAAI,IAAI,MAAM;AAClC,YAAML,QAAQ,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,QAAf,CAAjB;AACA,YAAMM,YAAY,GAAGN,QAAQ,CAACO,OAAT,CAAiBF,IAAjB,CAArB;AACAL,MAAAA,QAAQ,CAACQ,MAAT,CAAgBF,YAAhB,EAA8B,CAA9B;AACA,WAAKG,QAAL,CAAc;AAACT,QAAAA;AAAD,OAAd;AACD,KAhBgC;AAAA;;AAkBjCU,EAAAA,MAAM,GAAG;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKX,KAAL,CAAWC,QAAX,CAAoBW,GAApB,CAAwBN,IAAI,IAAI;AAC/B,aACE,oBAAC,IAAD;AACE,QAAA,MAAM,EAAE,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAEA,IAAI,CAACF,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADV;AAEE,QAAA,KAAK,EAAEE,IAAI,CAACH,IAFd;AAGE,QAAA,GAAG,EAAEG,IAAI,CAACJ,GAHZ;AAIE,QAAA,QAAQ,EAAE,KAAKG,mBAAL,CAAyBC,IAAzB,CAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD,KATA,CADH,CADF;AAcD;;AAlCgC;;AAqCnC,eAAeP,UAAf","sourcesContent":["import React, {Component} from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\n\nclass ChipsArray extends Component {\n  state = {\n    chipData: [\n      {key: 0, name: 'Domnic Harris', image: 'https://via.placeholder.com/150x150'},\n      {key: 1, name: 'Garry Sobars', image: 'https://via.placeholder.com/150x150'},\n      {key: 2, name: 'Stella Johnson', image: 'https://via.placeholder.com/120x120'},\n      {key: 3, name: 'Alex Dolgove', image: 'https://via.placeholder.com/128x128'},\n      {key: 4, name: 'John Smith', image: 'https://via.placeholder.com/150x150'},\n    ],\n  };\n\n  handleRequestDelete = data => () => {\n    const chipData = [...this.state.chipData];\n    const chipToDelete = chipData.indexOf(data);\n    chipData.splice(chipToDelete, 1);\n    this.setState({chipData});\n  };\n\n  render() {\n\n    return (\n      <div className=\"manage-margin d-flex flex-wrap\">\n        {this.state.chipData.map(data => {\n          return (\n            <Chip\n              avatar={<Avatar src={data.image}/>}\n              label={data.name}\n              key={data.key}\n              onDelete={this.handleRequestDelete(data)}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default ChipsArray;"]},"metadata":{},"sourceType":"module"}