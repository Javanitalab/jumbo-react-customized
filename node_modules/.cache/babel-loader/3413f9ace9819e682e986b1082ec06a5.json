{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/contact/redux/index.js\";\nimport React, { Component } from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport { connect } from 'react-redux';\nimport IconButton from '@material-ui/core/IconButton';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport ContactList from 'components/contact/ContactList';\nimport AppModuleHeader from 'components/AppModuleHeader/index';\nimport AddContact from 'components/contact/AddContact';\nimport IntlMessages from 'util/IntlMessages';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { addFavourite, fetchContacts, filterContact, getAllContact, getUnselectedAllContact, handleRequestClose, onAddContact, onAllContactSelect, onContactClose, onContactSelect, onDeleteContact, onDeleteSelectedContact, onFilterOptionSelect, onSaveContact, onToggleDrawer, updateContactUser } from 'actions/Contact';\nimport CustomScrollbars from 'util/CustomScrollbars';\nlet contactId = 723812738;\nconst filterOptions = [{\n  id: 1,\n  name: 'All contacts',\n  icon: 'zmdi-menu'\n}, {\n  id: 2,\n  name: 'Frequently contacted',\n  icon: 'zmdi-time-restore'\n}, {\n  id: 3,\n  name: 'Starred contacts',\n  icon: 'zmdi-star'\n}];\n\nclass ContactWithRedux extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.ContactSideBar = user => {\n      return React.createElement(\"div\", {\n        className: \"module-side\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"module-side-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"module-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-account-box mr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"chat.contacts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"module-side-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(CustomScrollbars, {\n        className: \"module-side-scroll scrollbar\",\n        style: {\n          height: this.props.width >= 1200 ? 'calc(100vh - 200px)' : 'calc(100vh - 80px)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"module-add-task\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"jr-btn btn-block\",\n        variant: \"contained\",\n        color: \"primary\",\n        \"aria-label\": \"add\",\n        onClick: this.onAddContact,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-account-add zmdi-hc-fw\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Add New Contact\"))), React.createElement(\"div\", {\n        className: \"module-side-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"module-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, filterOptions.map(option => React.createElement(\"li\", {\n        key: option.id,\n        className: \"nav-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: `jr-link ${option.id === this.props.selectedSectionId ? 'active' : ''}`,\n        onClick: this.onFilterOptionSelect.bind(this, option),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: `zmdi ${option.icon}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, option.name)))))))));\n    };\n\n    this.addFavourite = data => {\n      this.props.addFavourite(data);\n    };\n\n    this.onContactSelect = data => {\n      this.props.onContactSelect(data);\n    };\n\n    this.onAddContact = () => {\n      this.props.onAddContact();\n    };\n\n    this.onContactClose = () => {\n      this.props.onContactClose();\n    };\n\n    this.onFilterOptionSelect = option => {\n      this.props.onFilterOptionSelect(option);\n    };\n\n    this.onSaveContact = data => {\n      this.props.onSaveContact(data);\n    };\n\n    this.onDeleteContact = data => {\n      this.props.onDeleteContact(data);\n    };\n\n    this.onDeleteSelectedContact = () => {\n      this.props.onDeleteSelectedContact();\n    };\n\n    this.filterContact = userName => {\n      if (userName === '') {\n        this.onFilterOptionSelect(this.props.filterOption);\n      } else {\n        this.props.filterContact(userName);\n      }\n    };\n\n    this.handleRequestClose = () => {\n      this.props.handleRequestClose();\n    };\n\n    this.onAllContactSelect = () => {\n      const selectAll = this.props.selectedContacts < this.props.contactList.length;\n\n      if (selectAll) {\n        this.props.getAllContact();\n      } else {\n        this.props.getUnselectedAllContact();\n      }\n    };\n\n    this.onToggleDrawer = () => {\n      this.props.onToggleDrawer();\n    };\n  }\n\n  componentWillMount() {\n    this.props.fetchContacts();\n  }\n\n  updateContactUser(evt) {\n    this.props.updateContactUser(evt.target.value);\n    this.props.filterContact(evt.target.value);\n  }\n\n  render() {\n    const {\n      user,\n      contactList,\n      addContactState,\n      selectedContacts,\n      alertMessage,\n      showMessage,\n      drawerState,\n      noContentFoundMessage,\n      loader\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"app-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"app-module animated slideInUpTiny animation-duration-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-block d-xl-none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Drawer, {\n      open: drawerState,\n      onClose: this.onToggleDrawer.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, this.ContactSideBar(user))), React.createElement(\"div\", {\n      className: \"app-module-sidenav d-none d-xl-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, this.ContactSideBar(user)), React.createElement(\"div\", {\n      className: \"module-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"module-box-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: \"drawer-btn d-block d-xl-none\",\n      \"aria-label\": \"Menu\",\n      onClick: this.onToggleDrawer.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"zmdi zmdi-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })), React.createElement(AppModuleHeader, {\n      placeholder: \"Search contact\",\n      notification: false,\n      apps: false,\n      user: this.props.user,\n      onChange: this.updateContactUser.bind(this),\n      value: this.props.searchUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"module-box-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"module-box-topbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      color: \"primary\",\n      indeterminate: selectedContacts > 0 && selectedContacts < contactList.length,\n      checked: selectedContacts > 0,\n      onChange: this.onAllContactSelect.bind(this),\n      value: \"SelectMail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), selectedContacts > 0 && React.createElement(IconButton, {\n      className: \"icon-btn\",\n      onClick: this.onDeleteSelectedContact.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"zmdi zmdi-delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }))), React.createElement(CustomScrollbars, {\n      className: \"module-list-scroll scrollbar\",\n      style: {\n        height: this.props.width >= 1200 ? 'calc(100vh - 261px)' : 'calc(100vh - 240px)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, loader ? React.createElement(\"div\", {\n      className: \"loader-view-block h-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"loader-view\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }))) : contactList.length === 0 ? React.createElement(\"div\", {\n      className: \"h-100 d-flex align-items-center justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, noContentFoundMessage) : React.createElement(ContactList, {\n      contactList: contactList,\n      addFavourite: this.addFavourite.bind(this),\n      onContactSelect: this.onContactSelect.bind(this),\n      onDeleteContact: this.onDeleteContact.bind(this),\n      onSaveContact: this.onSaveContact.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }))))), React.createElement(AddContact, {\n      open: addContactState,\n      contact: {\n        'id': contactId++,\n        'name': '',\n        'thumb': '',\n        'email': '',\n        'phone': '',\n        'designation': '',\n        'selected': false,\n        'starred': false,\n        'frequently': false\n      },\n      onSaveContact: this.onSaveContact,\n      onContactClose: this.onContactClose,\n      onDeleteContact: this.onDeleteContact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      open: showMessage,\n      autoHideDuration: 3000,\n      onClose: this.handleRequestClose,\n      ContentProps: {\n        'aria-describedby': 'message-id'\n      },\n      message: React.createElement(\"span\", {\n        id: \"message-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, alertMessage),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = ({\n  contacts,\n  settings\n}) => {\n  const {\n    width\n  } = settings;\n  const {\n    loader,\n    alertMessage,\n    showMessage,\n    noContentFoundMessage,\n    selectedSectionId,\n    drawerState,\n    user,\n    searchUser,\n    filterOption,\n    allContact,\n    contactList,\n    selectedContact,\n    selectedContacts,\n    addContactState\n  } = contacts;\n  return {\n    width,\n    loader,\n    alertMessage,\n    showMessage,\n    noContentFoundMessage,\n    selectedSectionId,\n    drawerState,\n    user,\n    searchUser,\n    filterOption,\n    allContact,\n    contactList,\n    selectedContact,\n    selectedContacts,\n    addContactState\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchContacts,\n  addFavourite,\n  onContactSelect,\n  onAddContact,\n  onContactClose,\n  onFilterOptionSelect,\n  onSaveContact,\n  onDeleteContact,\n  onDeleteSelectedContact,\n  filterContact,\n  getAllContact,\n  getUnselectedAllContact,\n  onAllContactSelect,\n  updateContactUser,\n  onToggleDrawer,\n  handleRequestClose\n})(ContactWithRedux);","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/contact/redux/index.js"],"names":["React","Component","Drawer","connect","IconButton","Checkbox","Button","Snackbar","ContactList","AppModuleHeader","AddContact","IntlMessages","CircularProgress","addFavourite","fetchContacts","filterContact","getAllContact","getUnselectedAllContact","handleRequestClose","onAddContact","onAllContactSelect","onContactClose","onContactSelect","onDeleteContact","onDeleteSelectedContact","onFilterOptionSelect","onSaveContact","onToggleDrawer","updateContactUser","CustomScrollbars","contactId","filterOptions","id","name","icon","ContactWithRedux","ContactSideBar","user","height","props","width","map","option","selectedSectionId","bind","data","userName","filterOption","selectAll","selectedContacts","contactList","length","componentWillMount","evt","target","value","render","addContactState","alertMessage","showMessage","drawerState","noContentFoundMessage","loader","searchUser","vertical","horizontal","mapStateToProps","contacts","settings","allContact","selectedContact"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport {connect} from 'react-redux'\nimport IconButton from '@material-ui/core/IconButton';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport ContactList from 'components/contact/ContactList';\nimport AppModuleHeader from 'components/AppModuleHeader/index';\nimport AddContact from 'components/contact/AddContact';\nimport IntlMessages from 'util/IntlMessages';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {\n  addFavourite,\n  fetchContacts,\n  filterContact,\n  getAllContact,\n  getUnselectedAllContact,\n  handleRequestClose,\n  onAddContact,\n  onAllContactSelect,\n  onContactClose,\n  onContactSelect,\n  onDeleteContact,\n  onDeleteSelectedContact,\n  onFilterOptionSelect,\n  onSaveContact,\n  onToggleDrawer,\n  updateContactUser\n} from 'actions/Contact';\n\nimport CustomScrollbars from 'util/CustomScrollbars';\n\nlet contactId = 723812738;\n\nconst filterOptions = [\n  {\n    id: 1,\n    name: 'All contacts',\n    icon: 'zmdi-menu'\n  }, {\n    id: 2,\n    name: 'Frequently contacted',\n    icon: 'zmdi-time-restore'\n\n  }, {\n\n    id: 3,\n    name: 'Starred contacts',\n    icon: 'zmdi-star'\n  }\n];\n\nclass ContactWithRedux extends Component {\n\n  ContactSideBar = (user) => {\n    return <div className=\"module-side\">\n      <div className=\"module-side-header\">\n        <div className=\"module-logo\">\n          <i className=\"zmdi zmdi-account-box mr-4\"/>\n          <span><IntlMessages id=\"chat.contacts\"/></span>\n        </div>\n      </div>\n\n      <div className=\"module-side-content\">\n        <CustomScrollbars className=\"module-side-scroll scrollbar\"\n                          style={{height: this.props.width >= 1200 ? 'calc(100vh - 200px)' : 'calc(100vh - 80px)'}}>\n          <div className=\"module-add-task\">\n            <Button className=\"jr-btn btn-block\" variant=\"contained\" color=\"primary\" aria-label=\"add\"\n                    onClick={this.onAddContact}>\n              <i className=\"zmdi zmdi-account-add zmdi-hc-fw\"/>\n              <span>Add New Contact</span>\n            </Button>\n          </div>\n          <div className=\"module-side-nav\">\n            <ul className=\"module-nav\">\n              {filterOptions.map(option => <li key={option.id} className=\"nav-item\">\n                  <span\n                    className={`jr-link ${option.id === this.props.selectedSectionId ? 'active' : ''}`} onClick={\n                    this.onFilterOptionSelect.bind(this, option)\n                  }>\n                    <i className={`zmdi ${option.icon}`}/>\n                    <span>{option.name}</span>\n                  </span>\n                </li>\n              )}\n\n            </ul>\n          </div>\n        </CustomScrollbars>\n      </div>\n    </div>\n\n  };\n\n  addFavourite = (data) => {\n    this.props.addFavourite(data);\n  };\n  onContactSelect = (data) => {\n    this.props.onContactSelect(data);\n  };\n\n  onAddContact = () => {\n    this.props.onAddContact();\n  };\n  onContactClose = () => {\n    this.props.onContactClose();\n  };\n  onFilterOptionSelect = (option) => {\n    this.props.onFilterOptionSelect(option);\n  };\n  onSaveContact = (data) => {\n    this.props.onSaveContact(data);\n  };\n  onDeleteContact = (data) => {\n    this.props.onDeleteContact(data);\n  };\n  onDeleteSelectedContact = () => {\n    this.props.onDeleteSelectedContact();\n  };\n  filterContact = (userName) => {\n    if (userName === '') {\n      this.onFilterOptionSelect(this.props.filterOption);\n    } else {\n      this.props.filterContact(userName);\n    }\n  };\n  handleRequestClose = () => {\n    this.props.handleRequestClose();\n  };\n  onAllContactSelect = () => {\n    const selectAll = this.props.selectedContacts < this.props.contactList.length;\n    if (selectAll) {\n      this.props.getAllContact();\n    } else {\n      this.props.getUnselectedAllContact();\n    }\n  };\n  onToggleDrawer = () => {\n    this.props.onToggleDrawer();\n  };\n\n  componentWillMount() {\n    this.props.fetchContacts();\n  }\n\n\n  updateContactUser(evt) {\n    this.props.updateContactUser(evt.target.value);\n    this.props.filterContact(evt.target.value)\n  }\n\n  render() {\n    const {user, contactList, addContactState, selectedContacts, alertMessage, showMessage, drawerState, noContentFoundMessage, loader} = this.props;\n    return (\n      <div className=\"app-wrapper\">\n        <div className=\"app-module animated slideInUpTiny animation-duration-3\">\n\n          <div className=\"d-block d-xl-none\">\n            <Drawer\n              open={drawerState}\n              onClose={this.onToggleDrawer.bind(this)}>\n              {this.ContactSideBar(user)}\n            </Drawer>\n          </div>\n          <div className=\"app-module-sidenav d-none d-xl-flex\">\n            {this.ContactSideBar(user)}\n          </div>\n\n          <div className=\"module-box\">\n            <div className=\"module-box-header\">\n              <IconButton className=\"drawer-btn d-block d-xl-none\" aria-label=\"Menu\"\n                          onClick={this.onToggleDrawer.bind(this)}>\n                <i className=\"zmdi zmdi-menu\"/>\n              </IconButton>\n              <AppModuleHeader placeholder=\"Search contact\" notification={false} apps={false}\n                               user={this.props.user}\n                               onChange={this.updateContactUser.bind(this)}\n                               value={this.props.searchUser}/>\n            </div>\n            <div className=\"module-box-content\">\n\n              <div className=\"module-box-topbar\">\n                <Checkbox color=\"primary\"\n                          indeterminate={selectedContacts > 0 && selectedContacts < contactList.length}\n                          checked={selectedContacts > 0}\n                          onChange={this.onAllContactSelect.bind(this)}\n                          value=\"SelectMail\"/>\n\n\n                {selectedContacts > 0 &&\n                <IconButton className=\"icon-btn\"\n                            onClick={this.onDeleteSelectedContact.bind(this)}>\n                  <i className=\"zmdi zmdi-delete\"/>\n                </IconButton>}\n\n              </div>\n              <CustomScrollbars className=\"module-list-scroll scrollbar\"\n                                style={{height: this.props.width >= 1200 ? 'calc(100vh - 261px)' : 'calc(100vh - 240px)'}}>\n                {loader ?\n                  <div className=\"loader-view-block h-100\">\n                    <div className=\"loader-view\">\n                      <CircularProgress/>\n                    </div>\n                  </div>\n                  :\n                  contactList.length === 0 ?\n                    <div className=\"h-100 d-flex align-items-center justify-content-center\">\n                      {noContentFoundMessage}\n                    </div>\n                    : <ContactList contactList={contactList}\n                                   addFavourite={this.addFavourite.bind(this)}\n                                   onContactSelect={this.onContactSelect.bind(this)}\n                                   onDeleteContact={this.onDeleteContact.bind(this)}\n                                   onSaveContact={this.onSaveContact.bind(this)}/>\n                }\n              </CustomScrollbars>\n\n            </div>\n          </div>\n        </div>\n        <AddContact open={addContactState} contact={{\n          'id': contactId++,\n          'name': '',\n          'thumb': '',\n          'email': '',\n          'phone': '',\n          'designation': '',\n          'selected': false,\n          'starred': false,\n          'frequently': false,\n        }} onSaveContact={this.onSaveContact}\n                    onContactClose={this.onContactClose} onDeleteContact={this.onDeleteContact}/>\n        <Snackbar\n          anchorOrigin={{vertical: 'top', horizontal: 'center'}}\n          open={showMessage}\n          autoHideDuration={3000}\n          onClose={this.handleRequestClose}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{alertMessage}</span>}\n        />\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = ({contacts, settings}) => {\n  const {width} = settings;\n  const {\n    loader,\n    alertMessage,\n    showMessage,\n    noContentFoundMessage,\n    selectedSectionId,\n    drawerState,\n    user,\n    searchUser,\n    filterOption,\n    allContact,\n    contactList,\n    selectedContact,\n    selectedContacts,\n    addContactState\n  } = contacts;\n  return {\n    width,\n    loader,\n    alertMessage,\n    showMessage,\n    noContentFoundMessage,\n    selectedSectionId,\n    drawerState,\n    user,\n    searchUser,\n    filterOption,\n    allContact,\n    contactList,\n    selectedContact,\n    selectedContacts,\n    addContactState\n  }\n};\nexport default connect(mapStateToProps, {\n  fetchContacts,\n  addFavourite,\n  onContactSelect,\n  onAddContact,\n  onContactClose,\n  onFilterOptionSelect,\n  onSaveContact,\n  onDeleteContact,\n  onDeleteSelectedContact,\n  filterContact,\n  getAllContact,\n  getUnselectedAllContact,\n  onAllContactSelect,\n  updateContactUser,\n  onToggleDrawer,\n  handleRequestClose\n})(ContactWithRedux);"]},"metadata":{},"sourceType":"module"}