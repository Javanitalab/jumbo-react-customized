{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/dashboard/routes/CRM/BubbleMap/index.js\";\nimport React, { Component } from \"react\";\nimport { ComposableMap, Geographies, Geography, Marker, Markers, ZoomableGroup } from \"react-simple-maps\";\nimport { scaleLinear } from \"d3-scale\";\nimport cities from \"./static/world-most-populous-cities.json\";\nimport geography from \"./static/world-50m.json\";\nconst wrapperStyles = {\n  width: \"100%\",\n  maxWidth: 980,\n  margin: \"0 auto\"\n};\nconst cityScale = scaleLinear().domain([0, 37843000]).range([1, 25]);\n\nclass BubbleMap extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      style: wrapperStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(ComposableMap, {\n      projectionConfig: {\n        scale: 180\n      },\n      width: 980,\n      height: 450,\n      style: {\n        width: \"100%\",\n        height: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(ZoomableGroup, {\n      center: [0, 20],\n      disablePanning: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Geographies, {\n      geography: geography,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, (geographies, projection) => geographies.map((geography, i) => geography.id !== \"ATA\" && React.createElement(Geography, {\n      key: i,\n      geography: geography,\n      projection: projection,\n      style: {\n        default: {\n          fill: \"#ECEFF1\",\n          stroke: \"#607D8B\",\n          strokeWidth: 0.75,\n          outline: \"none\"\n        },\n        hover: {\n          fill: \"#ECEFF1\",\n          stroke: \"#607D8B\",\n          strokeWidth: 0.75,\n          outline: \"none\"\n        },\n        pressed: {\n          fill: \"#ECEFF1\",\n          stroke: \"#607D8B\",\n          strokeWidth: 0.75,\n          outline: \"none\"\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }))), React.createElement(Markers, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, cities.map((city, i) => React.createElement(Marker, {\n      key: i,\n      marker: city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"circle\", {\n      cx: 0,\n      cy: 0,\n      r: cityScale(city.population),\n      fill: \"rgba(255,87,34,0.8)\",\n      stroke: \"#607D8B\",\n      strokeWidth: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default BubbleMap;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/dashboard/routes/CRM/BubbleMap/index.js"],"names":["React","Component","ComposableMap","Geographies","Geography","Marker","Markers","ZoomableGroup","scaleLinear","cities","geography","wrapperStyles","width","maxWidth","margin","cityScale","domain","range","BubbleMap","render","scale","height","geographies","projection","map","i","id","default","fill","stroke","strokeWidth","outline","hover","pressed","city","population"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport {ComposableMap, Geographies, Geography, Marker, Markers, ZoomableGroup} from \"react-simple-maps\";\nimport {scaleLinear} from \"d3-scale\";\nimport cities from \"./static/world-most-populous-cities.json\";\nimport geography from \"./static/world-50m.json\";\n\nconst wrapperStyles = {\n  width: \"100%\",\n  maxWidth: 980,\n  margin: \"0 auto\",\n}\n\nconst cityScale = scaleLinear()\n  .domain([0, 37843000])\n  .range([1, 25])\n\nclass BubbleMap extends Component {\n\n  render() {\n    return (\n      <div style={wrapperStyles}>\n        <ComposableMap\n          projectionConfig={{scale: 180}}\n          width={980}\n          height={450}\n          style={{\n            width: \"100%\",\n            height: \"auto\",\n          }}\n        >\n          <ZoomableGroup center={[0, 20]} disablePanning>\n            <Geographies geography={geography}>\n              {(geographies, projection) =>\n                geographies.map((geography, i) =>\n                  geography.id !== \"ATA\" && (\n                    <Geography\n                      key={i}\n                      geography={geography}\n                      projection={projection}\n                      style={{\n                        default: {\n                          fill: \"#ECEFF1\",\n                          stroke: \"#607D8B\",\n                          strokeWidth: 0.75,\n                          outline: \"none\",\n                        },\n                        hover: {\n                          fill: \"#ECEFF1\",\n                          stroke: \"#607D8B\",\n                          strokeWidth: 0.75,\n                          outline: \"none\",\n                        },\n                        pressed: {\n                          fill: \"#ECEFF1\",\n                          stroke: \"#607D8B\",\n                          strokeWidth: 0.75,\n                          outline: \"none\",\n                        },\n                      }}\n                    />\n                  ))}\n            </Geographies>\n            <Markers>\n              {\n                cities.map((city, i) => (\n                  <Marker key={i} marker={city}>\n                    <circle\n                      cx={0}\n                      cy={0}\n                      r={cityScale(city.population)}\n                      fill=\"rgba(255,87,34,0.8)\"\n                      stroke=\"#607D8B\"\n                      strokeWidth=\"2\"\n                    />\n                  </Marker>\n                ))\n              }\n            </Markers>\n          </ZoomableGroup>\n        </ComposableMap>\n      </div>\n    )\n  }\n}\n\nexport default BubbleMap\n"]},"metadata":{},"sourceType":"module"}