{"ast":null,"code":"import _classCallCheck from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Chart,Doughnut}from'react-chartjs-2';import'../../../app/routes/dashboard/routes/Misc/test.css';var YearlyProfitChart=/*#__PURE__*/function(_Component){_inherits(YearlyProfitChart,_Component);function YearlyProfitChart(){_classCallCheck(this,YearlyProfitChart);return _possibleConstructorReturn(this,_getPrototypeOf(YearlyProfitChart).apply(this,arguments));}_createClass(YearlyProfitChart,[{key:\"render\",value:function render(){var _this$props=this.props,shadowColor=_this$props.shadowColor,centerText=_this$props.centerText,textColor=_this$props.textColor,height=_this$props.height,backgroundColor=_this$props.backgroundColor,borderColor=_this$props.borderColor,hoverBorderColor=_this$props.hoverBorderColor,hoverBorderWidth=_this$props.hoverBorderWidth,rotation=_this$props.rotation,chartType=_this$props.chartType;var data=function data(canvas){var ctx=canvas.getContext(\"2d\");var _stroke=ctx.stroke;ctx.stroke=function(){ctx.save();ctx.shadowColor=shadowColor;ctx.shadowBlur=20;ctx.shadowOffsetX=0;ctx.shadowOffsetY=10;_stroke.apply(this,arguments);ctx.restore();};Chart.pluginService.register({beforeDraw:function beforeDraw(chart){if(chart.options.chartType===chartType){var width=chart.chart.width,_height=chart.chart.height,_ctx=chart.chart.ctx;_ctx.restore();var fontSize=\"1.4\";_ctx.font=fontSize+\"em sans-serif\";_ctx.fillStyle=textColor;_ctx.textBaseline=\"middle\";var text=centerText,textX=Math.round((width-_ctx.measureText(text).width)/2),textY=_height/2;_ctx.fillText(text,textX,textY);_ctx.save();}}});return{labels:['red','sky'],datasets:[{data:[100,300],backgroundColor:backgroundColor,borderColor:borderColor,hoverBorderColor:hoverBorderColor,hoverBorderWidth:hoverBorderWidth}]};};var options={maintainAspectRatio:false,chartType:chartType,legend:{display:false,labels:{fontColor:'#AAAEB3'}},layout:{padding:{top:5,bottom:5,right:0,left:0}},cutoutPercentage:75,borderWidth:0,rotation:-0.5*Math.PI-25/rotation*Math.PI};return React.createElement(Doughnut,{data:data,options:options,height:height});}}]);return YearlyProfitChart;}(Component);export default YearlyProfitChart;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/components/dashboard/eCommerce/YearlyProfitChart.js"],"names":["React","Component","Chart","Doughnut","YearlyProfitChart","props","shadowColor","centerText","textColor","height","backgroundColor","borderColor","hoverBorderColor","hoverBorderWidth","rotation","chartType","data","canvas","ctx","getContext","_stroke","stroke","save","shadowBlur","shadowOffsetX","shadowOffsetY","apply","arguments","restore","pluginService","register","beforeDraw","chart","options","width","fontSize","font","fillStyle","textBaseline","text","textX","Math","round","measureText","textY","fillText","labels","datasets","maintainAspectRatio","legend","display","fontColor","layout","padding","top","bottom","right","left","cutoutPercentage","borderWidth","PI"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Chart, Doughnut} from 'react-chartjs-2';\nimport '../../../app/routes/dashboard/routes/Misc/test.css'\n\nclass YearlyProfitChart extends Component {\n\n  render() {\n\n    const {\n      shadowColor,\n      centerText,\n      textColor,\n      height,\n      backgroundColor,\n      borderColor,\n      hoverBorderColor,\n      hoverBorderWidth,\n      rotation,\n      chartType\n    } = this.props;\n\n    const data = (canvas) => {\n      const ctx = canvas.getContext(\"2d\");\n      const _stroke = ctx.stroke;\n      ctx.stroke = function () {\n        ctx.save();\n        ctx.shadowColor = shadowColor;\n        ctx.shadowBlur = 20;\n        ctx.shadowOffsetX = 0;\n        ctx.shadowOffsetY = 10;\n        _stroke.apply(this, arguments);\n        ctx.restore();\n      };\n\n      Chart.pluginService.register({\n\n        beforeDraw: function (chart) {\n          if (chart.options.chartType === chartType) {\n            let width = chart.chart.width,\n              height = chart.chart.height,\n              ctx = chart.chart.ctx;\n\n            ctx.restore();\n            let fontSize = \"1.4\";\n            ctx.font = fontSize + \"em sans-serif\";\n            ctx.fillStyle = textColor;\n            ctx.textBaseline = \"middle\";\n\n            let text = centerText,\n              textX = Math.round((width - ctx.measureText(text).width) / 2),\n              textY = height / 2;\n            ctx.fillText(text, textX, textY);\n            ctx.save();\n          }\n        }\n      });\n\n      return {\n        labels: [\n          'red',\n          'sky',\n        ],\n        datasets: [{\n          data: [100, 300],\n          backgroundColor: backgroundColor,\n          borderColor: borderColor,\n          hoverBorderColor: hoverBorderColor,\n          hoverBorderWidth: hoverBorderWidth\n        }],\n      }\n    }\n\n\n    const options = {\n      maintainAspectRatio: false,\n      chartType: chartType,\n      legend: {\n        display: false,\n        labels: {\n          fontColor: '#AAAEB3'\n        }\n      },\n      layout: {\n        padding: {\n          top: 5,\n          bottom: 5,\n          right: 0,\n          left: 0,\n        }\n      },\n      cutoutPercentage: 75,\n      borderWidth: 0,\n      rotation: (-0.5 * Math.PI) - (25 / rotation * Math.PI)\n    };\n    return (\n      <Doughnut data={data} options={options} height={height}/>\n    );\n  }\n}\n\nexport default YearlyProfitChart;"]},"metadata":{},"sourceType":"module"}