{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/map/routes/eventHanlder/Components/EventHandler.js\";\nimport React, { Component } from \"react\";\nimport { GoogleMap, InfoWindow, withGoogleMap } from \"react-google-maps\";\nconst google = window.google;\nconst GettingPropertiesExampleGoogleMap = withGoogleMap(props => React.createElement(GoogleMap, {\n  ref: props.onMapMounted,\n  onZoomChanged: props.onZoomChanged,\n  defaultCenter: props.center,\n  zoom: props.zoom,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, React.createElement(InfoWindow, {\n  defaultPosition: props.center,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, props.content))));\n/*\n * https://developers.google.com/maps/documentation/javascript/examples/event-properties\n *\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\n */\n\nexport default class EventHandler extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      zoom: 15,\n      content: `Change the zoom level`\n    };\n    this.handleMapMounted = this.handleMapMounted.bind(this);\n    this.handleZoomChanged = this.handleZoomChanged.bind(this);\n  }\n\n  handleMapMounted(map) {\n    this._map = map;\n  }\n\n  handleZoomChanged() {\n    const nextZoom = this._map.getZoom();\n\n    if (nextZoom !== this.state.zoom) {\n      // Notice: Check zoom equality here,\n      // or it will fire zoom_changed event infinitely\n      this.setState({\n        zoom: nextZoom,\n        content: `Zoom: ${nextZoom}`\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(GettingPropertiesExampleGoogleMap, {\n      containerElement: React.createElement(\"div\", {\n        className: \"embed-responsive embed-responsive-21by9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }),\n      mapElement: React.createElement(\"div\", {\n        className: \"embed-responsive-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }),\n      onMapMounted: this.handleMapMounted,\n      onZoomChanged: this.handleZoomChanged,\n      center: new google.maps.LatLng(47.646935, -122.303763),\n      zoom: this.state.zoom,\n      content: this.state.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/map/routes/eventHanlder/Components/EventHandler.js"],"names":["React","Component","GoogleMap","InfoWindow","withGoogleMap","google","window","GettingPropertiesExampleGoogleMap","props","onMapMounted","onZoomChanged","center","zoom","content","EventHandler","state","handleMapMounted","bind","handleZoomChanged","map","_map","nextZoom","getZoom","setState","render","maps","LatLng"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,EAAmBC,UAAnB,EAA+BC,aAA/B,QAAmD,mBAAnD;AAEA,MAAMC,MAAM,GAAGC,MAAM,CAACD,MAAtB;AAEA,MAAME,iCAAiC,GAAGH,aAAa,CAACI,KAAK,IAC3D,oBAAC,SAAD;AACE,EAAA,GAAG,EAAEA,KAAK,CAACC,YADb;AAEE,EAAA,aAAa,EAAED,KAAK,CAACE,aAFvB;AAGE,EAAA,aAAa,EAAEF,KAAK,CAACG,MAHvB;AAIE,EAAA,IAAI,EAAEH,KAAK,CAACI,IAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAME,oBAAC,UAAD;AACE,EAAA,eAAe,EAAEJ,KAAK,CAACG,MADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAMH,KAAK,CAACK,OAAZ,CAHF,CANF,CADqD,CAAvD;AAeA;;;;;;AAKA,eAAe,MAAMC,YAAN,SAA2Bb,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAElDc,KAFkD,GAE1C;AACNH,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,OAAO,EAAG;AAFJ,KAF0C;AAAA,SAOlDG,gBAPkD,GAO/B,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAP+B;AAAA,SAQlDC,iBARkD,GAQ9B,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAR8B;AAAA;;AAUlDD,EAAAA,gBAAgB,CAACG,GAAD,EAAM;AACpB,SAAKC,IAAL,GAAYD,GAAZ;AACD;;AAEDD,EAAAA,iBAAiB,GAAG;AAClB,UAAMG,QAAQ,GAAG,KAAKD,IAAL,CAAUE,OAAV,EAAjB;;AACA,QAAID,QAAQ,KAAK,KAAKN,KAAL,CAAWH,IAA5B,EAAkC;AAChC;AACA;AACA,WAAKW,QAAL,CAAc;AACZX,QAAAA,IAAI,EAAES,QADM;AAEZR,QAAAA,OAAO,EAAG,SAAQQ,QAAS;AAFf,OAAd;AAID;AACF;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,iCAAD;AACE,MAAA,gBAAgB,EACd;AAAK,QAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ;AAIE,MAAA,UAAU,EAAE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJd;AAKE,MAAA,YAAY,EAAE,KAAKR,gBALrB;AAME,MAAA,aAAa,EAAE,KAAKE,iBANtB;AAOE,MAAA,MAAM,EAAE,IAAIb,MAAM,CAACoB,IAAP,CAAYC,MAAhB,CAAuB,SAAvB,EAAkC,CAAC,UAAnC,CAPV;AAQE,MAAA,IAAI,EAAE,KAAKX,KAAL,CAAWH,IARnB;AASE,MAAA,OAAO,EAAE,KAAKG,KAAL,CAAWF,OATtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAaD;;AAxCiD","sourcesContent":["import React, {Component} from \"react\";\nimport {GoogleMap, InfoWindow, withGoogleMap} from \"react-google-maps\";\n\nconst google = window.google;\n\nconst GettingPropertiesExampleGoogleMap = withGoogleMap(props => (\n  <GoogleMap\n    ref={props.onMapMounted}\n    onZoomChanged={props.onZoomChanged}\n    defaultCenter={props.center}\n    zoom={props.zoom}\n  >\n    <InfoWindow\n      defaultPosition={props.center}\n    >\n      <div>{props.content}</div>\n    </InfoWindow>\n  </GoogleMap>\n));\n\n/*\n * https://developers.google.com/maps/documentation/javascript/examples/event-properties\n *\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\n */\nexport default class EventHandler extends Component {\n\n  state = {\n    zoom: 15,\n    content: `Change the zoom level`,\n  };\n\n  handleMapMounted = this.handleMapMounted.bind(this);\n  handleZoomChanged = this.handleZoomChanged.bind(this);\n\n  handleMapMounted(map) {\n    this._map = map;\n  }\n\n  handleZoomChanged() {\n    const nextZoom = this._map.getZoom();\n    if (nextZoom !== this.state.zoom) {\n      // Notice: Check zoom equality here,\n      // or it will fire zoom_changed event infinitely\n      this.setState({\n        zoom: nextZoom,\n        content: `Zoom: ${nextZoom}`,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <GettingPropertiesExampleGoogleMap\n        containerElement={\n          <div className=\"embed-responsive embed-responsive-21by9\"/>\n        }\n        mapElement={<div className=\"embed-responsive-item\"/>}\n        onMapMounted={this.handleMapMounted}\n        onZoomChanged={this.handleZoomChanged}\n        center={new google.maps.LatLng(47.646935, -122.303763)}\n        zoom={this.state.zoom}\n        content={this.state.content}\n      />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}