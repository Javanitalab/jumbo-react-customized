{"ast":null,"code":"import _classCallCheck from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import{GoogleMap,OverlayView,StreetViewPanorama,withGoogleMap}from\"react-google-maps\";var coordinates={lat:49.2853171,lng:-123.1119202};var STYLES={overlayView:{background:\"red\",color:\"white\",padding:5,borderRadius:\"50%\"}};function getPixelPositionOffset(width,height){return{x:-(width/2),y:-(height/2)};}var StreetViewPanoramaExampleGoogleMap=withGoogleMap(function(props){return React.createElement(GoogleMap,{defaultZoom:8,defaultCenter:coordinates},React.createElement(StreetViewPanorama,{defaultPosition:coordinates,visible:true},React.createElement(OverlayView,{position:{lat:49.28590291211115,lng:-123.11248166065218},mapPaneName:OverlayView.OVERLAY_LAYER,getPixelPositionOffset:getPixelPositionOffset},React.createElement(\"div\",{style:STYLES.overlayView},\"OverlayView\"))));});/**\n * You can pass in an `containerElement` to render `StreetViewPanorama` in its own containers\n * At this point the `GoogleMap` wrapper and `withGoogleMap` HOC become optional,\n * so you can either render a map and StreetView at the same time,\n * or just the StreetView on its own\n *    <StreetViewPanorama\n *      containerElement={<div style={{ width: `100%`, height: `100%` }} />}\n *      defaultPosition={coordinates}\n *      visible\n *    />\n */ /*\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\n */var StreetViewPanoramaExample=/*#__PURE__*/function(_Component){_inherits(StreetViewPanoramaExample,_Component);function StreetViewPanoramaExample(){_classCallCheck(this,StreetViewPanoramaExample);return _possibleConstructorReturn(this,_getPrototypeOf(StreetViewPanoramaExample).apply(this,arguments));}_createClass(StreetViewPanoramaExample,[{key:\"render\",value:function render(){return React.createElement(StreetViewPanoramaExampleGoogleMap,{containerElement:React.createElement(\"div\",{className:\"embed-responsive embed-responsive-21by9\"}),mapElement:React.createElement(\"div\",{className:\"embed-responsive-item\"})});}}]);return StreetViewPanoramaExample;}(Component);export{StreetViewPanoramaExample as default};","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/map/routes/streetView/Components/StreetViewPanoramaEx.js"],"names":["React","Component","GoogleMap","OverlayView","StreetViewPanorama","withGoogleMap","coordinates","lat","lng","STYLES","overlayView","background","color","padding","borderRadius","getPixelPositionOffset","width","height","x","y","StreetViewPanoramaExampleGoogleMap","props","OVERLAY_LAYER","StreetViewPanoramaExample"],"mappings":"2rBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OAAQC,SAAR,CAAmBC,WAAnB,CAAgCC,kBAAhC,CAAoDC,aAApD,KAAyE,mBAAzE,CAEA,GAAMC,CAAAA,WAAW,CAAG,CAACC,GAAG,CAAE,UAAN,CAAkBC,GAAG,CAAE,CAAC,WAAxB,CAApB,CAEA,GAAMC,CAAAA,MAAM,CAAG,CACbC,WAAW,CAAE,CACXC,UAAU,MADC,CAEXC,KAAK,QAFM,CAGXC,OAAO,CAAE,CAHE,CAIXC,YAAY,MAJD,CADA,CAAf,CASA,QAASC,CAAAA,sBAAT,CAAgCC,KAAhC,CAAuCC,MAAvC,CAA+C,CAC7C,MAAO,CAACC,CAAC,CAAE,EAAEF,KAAK,CAAG,CAAV,CAAJ,CAAkBG,CAAC,CAAE,EAAEF,MAAM,CAAG,CAAX,CAArB,CAAP,CACD,CAED,GAAMG,CAAAA,kCAAkC,CAAGf,aAAa,CAAC,SAAAgB,KAAK,QAC5D,qBAAC,SAAD,EACE,WAAW,CAAE,CADf,CAEE,aAAa,CAAEf,WAFjB,EAIE,oBAAC,kBAAD,EACE,eAAe,CAAEA,WADnB,CAEE,OAAO,KAFT,EAIE,oBAAC,WAAD,EACE,QAAQ,CAAE,CAACC,GAAG,CAAE,iBAAN,CAAyBC,GAAG,CAAE,CAAC,kBAA/B,CADZ,CAEE,WAAW,CAAEL,WAAW,CAACmB,aAF3B,CAGE,sBAAsB,CAAEP,sBAH1B,EAKE,2BAAK,KAAK,CAAEN,MAAM,CAACC,WAAnB,gBALF,CAJF,CAJF,CAD4D,EAAN,CAAxD,CAsBA;;;;;;;;;;IAYA;;MAGqBa,CAAAA,yB,+VAEV,CACP,MACE,qBAAC,kCAAD,EACE,gBAAgB,CACd,2BAAK,SAAS,CAAC,yCAAf,EAFJ,CAIE,UAAU,CAAE,2BAAK,SAAS,CAAC,uBAAf,EAJd,EADF,CAQD,C,uCAXoDtB,S,SAAlCsB,yB","sourcesContent":["import React, {Component} from \"react\";\nimport {GoogleMap, OverlayView, StreetViewPanorama, withGoogleMap,} from \"react-google-maps\";\n\nconst coordinates = {lat: 49.2853171, lng: -123.1119202};\n\nconst STYLES = {\n  overlayView: {\n    background: `red`,\n    color: `white`,\n    padding: 5,\n    borderRadius: `50%`,\n  },\n};\n\nfunction getPixelPositionOffset(width, height) {\n  return {x: -(width / 2), y: -(height / 2)};\n}\n\nconst StreetViewPanoramaExampleGoogleMap = withGoogleMap(props => (\n  <GoogleMap\n    defaultZoom={8}\n    defaultCenter={coordinates}\n  >\n    <StreetViewPanorama\n      defaultPosition={coordinates}\n      visible\n    >\n      <OverlayView\n        position={{lat: 49.28590291211115, lng: -123.11248166065218}}\n        mapPaneName={OverlayView.OVERLAY_LAYER}\n        getPixelPositionOffset={getPixelPositionOffset}\n      >\n        <div style={STYLES.overlayView}>\n          OverlayView\n        </div>\n      </OverlayView>\n    </StreetViewPanorama>\n  </GoogleMap>\n));\n\n/**\n * You can pass in an `containerElement` to render `StreetViewPanorama` in its own containers\n * At this point the `GoogleMap` wrapper and `withGoogleMap` HOC become optional,\n * so you can either render a map and StreetView at the same time,\n * or just the StreetView on its own\n *    <StreetViewPanorama\n *      containerElement={<div style={{ width: `100%`, height: `100%` }} />}\n *      defaultPosition={coordinates}\n *      visible\n *    />\n */\n\n/*\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\n */\nexport default class StreetViewPanoramaExample extends Component {\n\n  render() {\n    return (\n      <StreetViewPanoramaExampleGoogleMap\n        containerElement={\n          <div className=\"embed-responsive embed-responsive-21by9\"/>\n        }\n        mapElement={<div className=\"embed-responsive-item\"/>}\n      />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}