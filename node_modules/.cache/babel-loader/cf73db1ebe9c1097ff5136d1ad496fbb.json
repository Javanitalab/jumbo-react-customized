{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/components/contact/ContactList/ContactCell/index.js\";\nimport React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AddContact from '../../AddContact/index';\n\nclass ContactCell extends React.Component {\n  constructor() {\n    super();\n\n    this.onContactOptionSelect = event => {\n      this.setState({\n        menuState: true,\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.handleRequestClose = () => {\n      this.setState({\n        menuState: false\n      });\n    };\n\n    this.onContactClose = () => {\n      this.setState({\n        addContactState: false\n      });\n    };\n\n    this.onDeleteContact = contact => {\n      this.setState({\n        addContactState: false\n      });\n      this.props.onDeleteContact(contact);\n    };\n\n    this.onEditContact = () => {\n      this.setState({\n        menuState: false,\n        addContactState: true\n      });\n    };\n\n    this.state = {\n      anchorEl: undefined,\n      menuState: false,\n      addContactState: false\n    };\n  }\n\n  render() {\n    const {\n      contact,\n      addFavourite,\n      onContactSelect,\n      onSaveContact\n    } = this.props;\n    const {\n      menuState,\n      anchorEl,\n      addContactState\n    } = this.state;\n    const {\n      name,\n      thumb,\n      email,\n      phone,\n      designation,\n      starred\n    } = contact;\n    const options = ['Edit', 'Delete'];\n    return React.createElement(\"div\", {\n      className: \"contact-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      color: \"primary\",\n      checked: contact.selected,\n      value: \"checkedF\",\n      onClick: () => {\n        onContactSelect(contact);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-auto px-1 actions d-none d-xs-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: \"icon-btn p-1\",\n      onClick: () => {\n        addFavourite(contact);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, starred ? React.createElement(\"i\", {\n      className: \"zmdi zmdi-star\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }) : React.createElement(\"i\", {\n      className: \"zmdi zmdi-star-outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))), thumb === null || thumb === '' ? React.createElement(\"div\", {\n      className: \"rounded-circle size-40 bg-blue text-center text-white mx-1 mx-md-3\",\n      style: {\n        fontSize: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, name.charAt(0).toUpperCase()) : React.createElement(\"img\", {\n      className: \"rounded-circle size-40 mx-1 mx-md-3\",\n      alt: name,\n      src: thumb,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col con-inf-mw-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"text-truncate contact-name text-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, name), React.createElement(\"span\", {\n      className: \"d-inline-block toolbar-separator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"span\", {\n      className: \"text-truncate job-title text-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, designation)), React.createElement(\"div\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"email d-inline-block mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, email, \",\"), React.createElement(\"span\", {\n      className: \"phone d-inline-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, phone))), React.createElement(\"div\", {\n      className: \"col-auto px-1 actions d-none d-sm-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: \"icon-btn p-2\",\n      onClick: this.onContactOptionSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"zmdi zmdi-more-vert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(Menu, {\n      id: \"long-menu\",\n      anchorEl: anchorEl,\n      open: menuState,\n      onClose: this.handleRequestClose,\n      MenuListProps: {\n        style: {\n          width: 100\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, options.map(option => React.createElement(MenuItem, {\n      key: option,\n      onClick: () => {\n        if (option === 'Edit') {\n          this.onEditContact();\n        } else {\n          this.handleRequestClose();\n          this.onDeleteContact(contact);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, option))), addContactState && React.createElement(AddContact, {\n      open: addContactState,\n      contact: contact,\n      onSaveContact: onSaveContact,\n      onContactClose: this.onContactClose,\n      onDeleteContact: this.onDeleteContact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ContactCell;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/components/contact/ContactList/ContactCell/index.js"],"names":["React","Checkbox","IconButton","Menu","MenuItem","AddContact","ContactCell","Component","constructor","onContactOptionSelect","event","setState","menuState","anchorEl","currentTarget","handleRequestClose","onContactClose","addContactState","onDeleteContact","contact","props","onEditContact","state","undefined","render","addFavourite","onContactSelect","onSaveContact","name","thumb","email","phone","designation","starred","options","selected","fontSize","charAt","toUpperCase","style","width","map","option"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AddContact from '../../AddContact/index';\n\nclass ContactCell extends React.Component {\n\n  onContactOptionSelect = event => {\n    this.setState({menuState: true, anchorEl: event.currentTarget});\n  };\n  handleRequestClose = () => {\n    this.setState({menuState: false});\n  };\n  onContactClose = () => {\n    this.setState({addContactState: false});\n  };\n  onDeleteContact = (contact) => {\n    this.setState({addContactState: false});\n    this.props.onDeleteContact(contact);\n  };\n  onEditContact = () => {\n    this.setState({menuState: false, addContactState: true});\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      anchorEl: undefined,\n      menuState: false,\n      addContactState: false,\n    }\n  }\n\n  render() {\n    const {contact, addFavourite, onContactSelect, onSaveContact} = this.props;\n    const {menuState, anchorEl, addContactState} = this.state;\n    const {name, thumb, email, phone, designation, starred} = contact;\n\n    const options = [\n      'Edit',\n      'Delete',\n    ];\n    return (\n\n      <div className=\"contact-item\">\n\n        <Checkbox color=\"primary\"\n                  checked={contact.selected}\n                  value=\"checkedF\"\n                  onClick={() => {\n                    onContactSelect(contact)\n                  }}\n        />\n        <div className=\"col-auto px-1 actions d-none d-xs-flex\">\n          <IconButton className=\"icon-btn p-1\" onClick={() => {\n            addFavourite(contact)\n          }}>\n            {starred ? <i className=\"zmdi zmdi-star\"/> : <i className=\"zmdi zmdi-star-outline\"/>}\n          </IconButton>\n        </div>\n        {(thumb === null || thumb === '') ?\n          <div className=\"rounded-circle size-40 bg-blue text-center text-white mx-1 mx-md-3\"\n               style={{fontSize: 20}}>\n            {name.charAt(0).toUpperCase()}\n          </div> :\n          <img className=\"rounded-circle size-40 mx-1 mx-md-3\" alt={name} src={thumb}/>}\n\n        <div className=\"col con-inf-mw-100\">\n          <p className=\"mb-0\">\n                        <span className=\"text-truncate contact-name text-dark\">\n                            {name}\n                        </span>\n            <span className=\"d-inline-block toolbar-separator\">&nbsp;</span>\n            <span className=\"text-truncate job-title text-dark\">\n                            {designation}\n                        </span>\n          </p>\n\n          <div className=\"text-muted\">\n                        <span className=\"email d-inline-block mr-2\">\n                            {email},\n                        </span>\n\n            <span className=\"phone d-inline-block\">\n                            {phone}\n                        </span>\n          </div>\n        </div>\n\n\n        <div className=\"col-auto px-1 actions d-none d-sm-flex\">\n          <IconButton className=\"icon-btn p-2\" onClick={this.onContactOptionSelect}>\n            <i className=\"zmdi zmdi-more-vert\"/>\n          </IconButton>\n\n          <Menu id=\"long-menu\"\n                anchorEl={anchorEl}\n                open={menuState}\n                onClose={this.handleRequestClose}\n\n                MenuListProps={{\n                  style: {\n                    width: 100,\n                  },\n                }}>\n            {options.map(option =>\n              <MenuItem key={option} onClick={() => {\n                if (option === 'Edit') {\n                  this.onEditContact()\n                } else {\n                  this.handleRequestClose();\n                  this.onDeleteContact(contact)\n                }\n              }\n              }>\n                {option}\n              </MenuItem>,\n            )}\n          </Menu>\n          {addContactState &&\n          <AddContact open={addContactState} contact={contact} onSaveContact={onSaveContact}\n                      onContactClose={this.onContactClose} onDeleteContact={this.onDeleteContact}/>}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ContactCell;"]},"metadata":{},"sourceType":"module"}