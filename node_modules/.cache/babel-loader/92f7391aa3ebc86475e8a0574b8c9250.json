{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/extensions/routes/notification/index.js\";\nimport React from 'react';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport CardBox from 'components/CardBox/index';\nimport ContainerHeader from 'components/ContainerHeader/index';\nimport IntlMessages from 'util/IntlMessages';\n\nclass Example extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.createNotification = type => {\n      return () => {\n        switch (type) {\n          case 'info':\n            NotificationManager.info(React.createElement(IntlMessages, {\n              id: \"notification.infoMsg\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 12\n              },\n              __self: this\n            }));\n            break;\n\n          case 'success':\n            NotificationManager.success(React.createElement(IntlMessages, {\n              id: \"notification.successMessage\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 15\n              },\n              __self: this\n            }), React.createElement(IntlMessages, {\n              id: \"notification.titleHere\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 15\n              },\n              __self: this\n            }));\n            break;\n\n          case 'warning':\n            NotificationManager.warning(React.createElement(IntlMessages, {\n              id: \"notification.warningMessage\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 19\n              },\n              __self: this\n            }), React.createElement(IntlMessages, {\n              id: \"notification.closeAfter3000ms\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 19\n              },\n              __self: this\n            }), 3000);\n            break;\n\n          case 'error':\n            NotificationManager.error(React.createElement(IntlMessages, {\n              id: \"notification.errorMessage\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 23\n              },\n              __self: this\n            }), React.createElement(IntlMessages, {\n              id: \"notification.clickMe\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 23\n              },\n              __self: this\n            }), 5000, () => {\n              alert('callback');\n            });\n            break;\n\n          default:\n            NotificationManager.info(React.createElement(IntlMessages, {\n              id: \"notification.infoMsg\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 29\n              },\n              __self: this\n            }));\n        }\n      };\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(ContainerHeader, {\n      title: React.createElement(IntlMessages, {\n        id: \"extension.notification\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }),\n      match: this.props.match,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(CardBox, {\n      styleName: \"col-12\",\n      heading: \"React Notification\",\n      childrenStyle: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-info\",\n      onClick: this.createNotification('info'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(IntlMessages, {\n      id: \"notification.info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.createNotification('success'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(IntlMessages, {\n      id: \"notification.success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: this.createNotification('warning'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(IntlMessages, {\n      id: \"notification.warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: this.createNotification('error'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(IntlMessages, {\n      id: \"notification.error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))))), React.createElement(NotificationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Example;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/extensions/routes/notification/index.js"],"names":["React","NotificationContainer","NotificationManager","CardBox","ContainerHeader","IntlMessages","Example","Component","createNotification","type","info","success","warning","error","alert","render","props","match"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\nimport CardBox from 'components/CardBox/index';\nimport ContainerHeader from 'components/ContainerHeader/index';\nimport IntlMessages from 'util/IntlMessages';\n\nclass Example extends React.Component {\n  createNotification = (type) => {\n    return () => {\n      switch (type) {\n        case 'info':\n          NotificationManager.info(<IntlMessages id=\"notification.infoMsg\"/>);\n          break;\n        case 'success':\n          NotificationManager.success(<IntlMessages id=\"notification.successMessage\"/>, <IntlMessages\n            id=\"notification.titleHere\"/>);\n          break;\n        case 'warning':\n          NotificationManager.warning(<IntlMessages id=\"notification.warningMessage\"/>, <IntlMessages\n            id=\"notification.closeAfter3000ms\"/>, 3000);\n          break;\n        case 'error':\n          NotificationManager.error(<IntlMessages id=\"notification.errorMessage\"/>, <IntlMessages\n            id=\"notification.clickMe\"/>, 5000, () => {\n            alert('callback');\n          });\n          break;\n        default:\n          NotificationManager.info(<IntlMessages id=\"notification.infoMsg\"/>);\n      }\n    };\n  };\n\n  render() {\n    return (\n      <div>\n        <ContainerHeader title={<IntlMessages id=\"extension.notification\"/>} match={this.props.match}/>\n\n        <div className=\"row\">\n          <CardBox styleName=\"col-12\" heading=\"React Notification\" childrenStyle=\"text-center\">\n            <div>\n              <button className='btn btn-info'\n                      onClick={this.createNotification('info')}><IntlMessages id=\"notification.info\"/>\n              </button>\n              <button className='btn btn-success'\n                      onClick={this.createNotification('success')}><IntlMessages\n                id=\"notification.success\"/>\n              </button>\n              <button className='btn btn-warning'\n                      onClick={this.createNotification('warning')}><IntlMessages\n                id=\"notification.warning\"/>\n              </button>\n              <button className='btn btn-danger'\n                      onClick={this.createNotification('error')}><IntlMessages id=\"notification.error\"/>\n              </button>\n            </div>\n\n          </CardBox>\n        </div>\n\n        <NotificationContainer/>\n      </div>\n    );\n  }\n}\n\nexport default Example;"]},"metadata":{},"sourceType":"module"}