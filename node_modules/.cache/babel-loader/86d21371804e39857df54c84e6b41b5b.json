{"ast":null,"code":"import _toConsumableArray from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Chip from'@material-ui/core/Chip';import Avatar from'@material-ui/core/Avatar';import Input from'@material-ui/core/Input';var count=5;var chipsWithInputBox=/*#__PURE__*/function(_Component){_inherits(chipsWithInputBox,_Component);function chipsWithInputBox(){var _getPrototypeOf2;var _this;_classCallCheck(this,chipsWithInputBox);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(chipsWithInputBox)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={name:'',chipData:[{key:0,name:'Domnic Harris'},{key:1,name:'Garry Sobars'},{key:2,name:'Stella Johnson'},{key:3,name:'Alex Dolgove'},{key:4,name:'John Smith'}]};_this.handleRequestDelete=function(data){return function(){var chipData=_toConsumableArray(_this.state.chipData);var chipToDelete=chipData.indexOf(data);chipData.splice(chipToDelete,1);_this.setState({chipData:chipData});};};_this.onValueChange=function(e){_this.setState({name:e.target.value});};_this._handleKeyPress=function(e){if(e.key==='Enter'){_this.setState({name:'',chipData:_this.state.chipData.concat({key:count++,name:e.target.value})});}};return _this;}_createClass(chipsWithInputBox,[{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",{className:\"manage-margin d-flex flex-wrap\"},this.state.chipData.map(function(data){return React.createElement(Chip,{avatar:React.createElement(Avatar,null,data.name.charAt(0).toUpperCase()),label:data.name,key:data.key,onDelete:_this2.handleRequestDelete(data)});}),React.createElement(Input,{type:\"text\",placeholder:\"add more user\",onChange:this.onValueChange.bind(this),value:this.state.name,onKeyPress:this._handleKeyPress.bind(this)}));}}]);return chipsWithInputBox;}(Component);export default chipsWithInputBox;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/chips/chipsWithInputBox/ChipsWithInputBox.js"],"names":["React","Component","Chip","Avatar","Input","count","chipsWithInputBox","state","name","chipData","key","handleRequestDelete","data","chipToDelete","indexOf","splice","setState","onValueChange","e","target","value","_handleKeyPress","concat","map","charAt","toUpperCase","bind"],"mappings":"40BAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CAEA,GAAIC,CAAAA,KAAK,CAAG,CAAZ,C,GAEMC,CAAAA,iB,2aACJC,K,CAAQ,CACNC,IAAI,CAAE,EADA,CAENC,QAAQ,CAAE,CACR,CAACC,GAAG,CAAE,CAAN,CAASF,IAAI,CAAE,eAAf,CADQ,CAER,CAACE,GAAG,CAAE,CAAN,CAASF,IAAI,CAAE,cAAf,CAFQ,CAGR,CAACE,GAAG,CAAE,CAAN,CAASF,IAAI,CAAE,gBAAf,CAHQ,CAIR,CAACE,GAAG,CAAE,CAAN,CAASF,IAAI,CAAE,cAAf,CAJQ,CAKR,CAACE,GAAG,CAAE,CAAN,CAASF,IAAI,CAAE,YAAf,CALQ,CAFJ,C,OAWRG,mB,CAAsB,SAAAC,IAAI,QAAI,WAAM,CAClC,GAAMH,CAAAA,QAAQ,oBAAO,MAAKF,KAAL,CAAWE,QAAlB,CAAd,CACA,GAAMI,CAAAA,YAAY,CAAGJ,QAAQ,CAACK,OAAT,CAAiBF,IAAjB,CAArB,CACAH,QAAQ,CAACM,MAAT,CAAgBF,YAAhB,CAA8B,CAA9B,EACA,MAAKG,QAAL,CAAc,CAACP,QAAQ,CAARA,QAAD,CAAd,EACD,CALyB,E,OAO1BQ,a,CAAgB,SAACC,CAAD,CAAO,CACrB,MAAKF,QAAL,CAAc,CAACR,IAAI,CAAEU,CAAC,CAACC,MAAF,CAASC,KAAhB,CAAd,EACD,C,OAEDC,e,CAAkB,SAACH,CAAD,CAAO,CACvB,GAAIA,CAAC,CAACR,GAAF,GAAU,OAAd,CAAuB,CACrB,MAAKM,QAAL,CAAc,CACZR,IAAI,CAAE,EADM,CAEZC,QAAQ,CAAE,MAAKF,KAAL,CAAWE,QAAX,CAAoBa,MAApB,CAA2B,CAACZ,GAAG,CAAEL,KAAK,EAAX,CAAeG,IAAI,CAAEU,CAAC,CAACC,MAAF,CAASC,KAA9B,CAA3B,CAFE,CAAd,EAID,CACF,C,oFAEQ,iBAEP,MACE,4BAAK,SAAS,CAAC,gCAAf,EACG,KAAKb,KAAL,CAAWE,QAAX,CAAoBc,GAApB,CAAwB,SAAAX,IAAI,CAAI,CAC/B,MACE,qBAAC,IAAD,EACE,MAAM,CAAE,oBAAC,MAAD,MAASA,IAAI,CAACJ,IAAL,CAAUgB,MAAV,CAAiB,CAAjB,EAAoBC,WAApB,EAAT,CADV,CAEE,KAAK,CAAEb,IAAI,CAACJ,IAFd,CAGE,GAAG,CAAEI,IAAI,CAACF,GAHZ,CAIE,QAAQ,CAAE,MAAI,CAACC,mBAAL,CAAyBC,IAAzB,CAJZ,EADF,CAQD,CATA,CADH,CAWE,oBAAC,KAAD,EAAO,IAAI,CAAC,MAAZ,CAAmB,WAAW,CAAC,eAA/B,CACO,QAAQ,CAAE,KAAKK,aAAL,CAAmBS,IAAnB,CAAwB,IAAxB,CADjB,CACgD,KAAK,CAAE,KAAKnB,KAAL,CAAWC,IADlE,CAEO,UAAU,CAAE,KAAKa,eAAL,CAAqBK,IAArB,CAA0B,IAA1B,CAFnB,EAXF,CADF,CAiBD,C,+BAnD6BzB,S,EAsDhC,cAAeK,CAAAA,iBAAf","sourcesContent":["import React, {Component} from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport Input from '@material-ui/core/Input';\n\nlet count = 5;\n\nclass chipsWithInputBox extends Component {\n  state = {\n    name: '',\n    chipData: [\n      {key: 0, name: 'Domnic Harris'},\n      {key: 1, name: 'Garry Sobars'},\n      {key: 2, name: 'Stella Johnson'},\n      {key: 3, name: 'Alex Dolgove'},\n      {key: 4, name: 'John Smith'},\n    ],\n  };\n\n  handleRequestDelete = data => () => {\n    const chipData = [...this.state.chipData];\n    const chipToDelete = chipData.indexOf(data);\n    chipData.splice(chipToDelete, 1);\n    this.setState({chipData});\n  };\n\n  onValueChange = (e) => {\n    this.setState({name: e.target.value});\n  };\n\n  _handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      this.setState({\n        name: '',\n        chipData: this.state.chipData.concat({key: count++, name: e.target.value})\n      })\n    }\n  };\n\n  render() {\n\n    return (\n      <div className=\"manage-margin d-flex flex-wrap\">\n        {this.state.chipData.map(data => {\n          return (\n            <Chip\n              avatar={<Avatar>{data.name.charAt(0).toUpperCase()}</Avatar>}\n              label={data.name}\n              key={data.key}\n              onDelete={this.handleRequestDelete(data)}\n            />\n          );\n        })}\n        <Input type=\"text\" placeholder=\"add more user\"\n               onChange={this.onValueChange.bind(this)} value={this.state.name}\n               onKeyPress={this._handleKeyPress.bind(this)}/>\n      </div>\n    );\n  }\n}\n\nexport default chipsWithInputBox;"]},"metadata":{},"sourceType":"module"}