{"ast":null,"code":"import _classCallCheck from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import Checkbox from'@material-ui/core/Checkbox';import IconButton from'@material-ui/core/IconButton';import Menu from'@material-ui/core/Menu';import MenuItem from'@material-ui/core/MenuItem';import AddContact from'../../AddContact/index';var ContactCell=/*#__PURE__*/function(_React$Component){_inherits(ContactCell,_React$Component);function ContactCell(){var _this;_classCallCheck(this,ContactCell);_this=_possibleConstructorReturn(this,_getPrototypeOf(ContactCell).call(this));_this.onContactOptionSelect=function(event){_this.setState({menuState:true,anchorEl:event.currentTarget});};_this.handleRequestClose=function(){_this.setState({menuState:false});};_this.onContactClose=function(){_this.setState({addContactState:false});};_this.onDeleteContact=function(contact){_this.setState({addContactState:false});_this.props.onDeleteContact(contact);};_this.onEditContact=function(){_this.setState({menuState:false,addContactState:true});};_this.state={anchorEl:undefined,menuState:false,addContactState:false};return _this;}_createClass(ContactCell,[{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,contact=_this$props.contact,addFavourite=_this$props.addFavourite,onContactSelect=_this$props.onContactSelect,onSaveContact=_this$props.onSaveContact;var _this$state=this.state,menuState=_this$state.menuState,anchorEl=_this$state.anchorEl,addContactState=_this$state.addContactState;var name=contact.name,thumb=contact.thumb,email=contact.email,phone=contact.phone,designation=contact.designation,starred=contact.starred;var options=['Edit','Delete'];return React.createElement(\"div\",{className:\"contact-item\"},React.createElement(Checkbox,{color:\"primary\",checked:contact.selected,value:\"checkedF\",onClick:function onClick(){onContactSelect(contact);}}),React.createElement(\"div\",{className:\"col-auto px-1 actions d-none d-xs-flex\"},React.createElement(IconButton,{className:\"icon-btn p-1\",onClick:function onClick(){addFavourite(contact);}},starred?React.createElement(\"i\",{className:\"zmdi zmdi-star\"}):React.createElement(\"i\",{className:\"zmdi zmdi-star-outline\"}))),thumb===null||thumb===''?React.createElement(\"div\",{className:\"rounded-circle size-40 bg-blue text-center text-white mx-1 mx-md-3\",style:{fontSize:20}},name.charAt(0).toUpperCase()):React.createElement(\"img\",{className:\"rounded-circle size-40 mx-1 mx-md-3\",alt:name,src:thumb}),React.createElement(\"div\",{className:\"col con-inf-mw-100\"},React.createElement(\"p\",{className:\"mb-0\"},React.createElement(\"span\",{className:\"text-truncate contact-name text-dark\"},name),React.createElement(\"span\",{className:\"d-inline-block toolbar-separator\"},\"\\xA0\"),React.createElement(\"span\",{className:\"text-truncate job-title text-dark\"},designation)),React.createElement(\"div\",{className:\"text-muted\"},React.createElement(\"span\",{className:\"email d-inline-block mr-2\"},email,\",\"),React.createElement(\"span\",{className:\"phone d-inline-block\"},phone))),React.createElement(\"div\",{className:\"col-auto px-1 actions d-none d-sm-flex\"},React.createElement(IconButton,{className:\"icon-btn p-2\",onClick:this.onContactOptionSelect},React.createElement(\"i\",{className:\"zmdi zmdi-more-vert\"})),React.createElement(Menu,{id:\"long-menu\",anchorEl:anchorEl,open:menuState,onClose:this.handleRequestClose,MenuListProps:{style:{width:100}}},options.map(function(option){return React.createElement(MenuItem,{key:option,onClick:function onClick(){if(option==='Edit'){_this2.onEditContact();}else{_this2.handleRequestClose();_this2.onDeleteContact(contact);}}},option);})),addContactState&&React.createElement(AddContact,{open:addContactState,contact:contact,onSaveContact:onSaveContact,onContactClose:this.onContactClose,onDeleteContact:this.onDeleteContact})));}}]);return ContactCell;}(React.Component);export default ContactCell;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/components/contact/ContactList/ContactCell/index.js"],"names":["React","Checkbox","IconButton","Menu","MenuItem","AddContact","ContactCell","onContactOptionSelect","event","setState","menuState","anchorEl","currentTarget","handleRequestClose","onContactClose","addContactState","onDeleteContact","contact","props","onEditContact","state","undefined","addFavourite","onContactSelect","onSaveContact","name","thumb","email","phone","designation","starred","options","selected","fontSize","charAt","toUpperCase","style","width","map","option","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AddContact from '../../AddContact/index';\n\nclass ContactCell extends React.Component {\n\n  onContactOptionSelect = event => {\n    this.setState({menuState: true, anchorEl: event.currentTarget});\n  };\n  handleRequestClose = () => {\n    this.setState({menuState: false});\n  };\n  onContactClose = () => {\n    this.setState({addContactState: false});\n  };\n  onDeleteContact = (contact) => {\n    this.setState({addContactState: false});\n    this.props.onDeleteContact(contact);\n  };\n  onEditContact = () => {\n    this.setState({menuState: false, addContactState: true});\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      anchorEl: undefined,\n      menuState: false,\n      addContactState: false,\n    }\n  }\n\n  render() {\n    const {contact, addFavourite, onContactSelect, onSaveContact} = this.props;\n    const {menuState, anchorEl, addContactState} = this.state;\n    const {name, thumb, email, phone, designation, starred} = contact;\n\n    const options = [\n      'Edit',\n      'Delete',\n    ];\n    return (\n\n      <div className=\"contact-item\">\n\n        <Checkbox color=\"primary\"\n                  checked={contact.selected}\n                  value=\"checkedF\"\n                  onClick={() => {\n                    onContactSelect(contact)\n                  }}\n        />\n        <div className=\"col-auto px-1 actions d-none d-xs-flex\">\n          <IconButton className=\"icon-btn p-1\" onClick={() => {\n            addFavourite(contact)\n          }}>\n            {starred ? <i className=\"zmdi zmdi-star\"/> : <i className=\"zmdi zmdi-star-outline\"/>}\n          </IconButton>\n        </div>\n        {(thumb === null || thumb === '') ?\n          <div className=\"rounded-circle size-40 bg-blue text-center text-white mx-1 mx-md-3\"\n               style={{fontSize: 20}}>\n            {name.charAt(0).toUpperCase()}\n          </div> :\n          <img className=\"rounded-circle size-40 mx-1 mx-md-3\" alt={name} src={thumb}/>}\n\n        <div className=\"col con-inf-mw-100\">\n          <p className=\"mb-0\">\n                        <span className=\"text-truncate contact-name text-dark\">\n                            {name}\n                        </span>\n            <span className=\"d-inline-block toolbar-separator\">&nbsp;</span>\n            <span className=\"text-truncate job-title text-dark\">\n                            {designation}\n                        </span>\n          </p>\n\n          <div className=\"text-muted\">\n                        <span className=\"email d-inline-block mr-2\">\n                            {email},\n                        </span>\n\n            <span className=\"phone d-inline-block\">\n                            {phone}\n                        </span>\n          </div>\n        </div>\n\n\n        <div className=\"col-auto px-1 actions d-none d-sm-flex\">\n          <IconButton className=\"icon-btn p-2\" onClick={this.onContactOptionSelect}>\n            <i className=\"zmdi zmdi-more-vert\"/>\n          </IconButton>\n\n          <Menu id=\"long-menu\"\n                anchorEl={anchorEl}\n                open={menuState}\n                onClose={this.handleRequestClose}\n\n                MenuListProps={{\n                  style: {\n                    width: 100,\n                  },\n                }}>\n            {options.map(option =>\n              <MenuItem key={option} onClick={() => {\n                if (option === 'Edit') {\n                  this.onEditContact()\n                } else {\n                  this.handleRequestClose();\n                  this.onDeleteContact(contact)\n                }\n              }\n              }>\n                {option}\n              </MenuItem>,\n            )}\n          </Menu>\n          {addContactState &&\n          <AddContact open={addContactState} contact={contact} onSaveContact={onSaveContact}\n                      onContactClose={this.onContactClose} onDeleteContact={this.onDeleteContact}/>}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ContactCell;"]},"metadata":{},"sourceType":"module"}