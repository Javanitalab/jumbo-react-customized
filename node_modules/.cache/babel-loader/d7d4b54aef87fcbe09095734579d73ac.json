{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/tables/enhanced/EnhancedTable.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport keycode from 'keycode';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nlet counter = 0;\n\nfunction createData(name, calories, fat, carbs, protein) {\n  counter += 1;\n  return {\n    id: counter,\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nconst columnData = [{\n  id: 'name',\n  align: false,\n  disablePadding: true,\n  label: 'Dessert (100g serving)'\n}, {\n  id: 'calories',\n  align: true,\n  disablePadding: false,\n  label: 'Calories'\n}, {\n  id: 'fat',\n  align: true,\n  disablePadding: false,\n  label: 'Fat (g)'\n}, {\n  id: 'carbs',\n  align: true,\n  disablePadding: false,\n  label: 'Carbs (g)'\n}, {\n  id: 'protein',\n  align: true,\n  disablePadding: false,\n  label: 'Protein (g)'\n}];\n\nclass EnhancedTableHead extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.createSortHandler = property => event => {\n      this.props.onRequestSort(event, property);\n    };\n  }\n\n  render() {\n    const {\n      onSelectAllClick,\n      order,\n      orderBy,\n      numSelected,\n      rowCount\n    } = this.props;\n    return React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      color: \"primary\",\n      indeterminate: numSelected > 0 && numSelected < rowCount,\n      checked: numSelected === rowCount,\n      onChange: onSelectAllClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), columnData.map(column => {\n      return React.createElement(TableCell, {\n        key: column.id,\n        numeric: column.numeric,\n        padding: column.disablePadding ? 'none' : 'default',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Sort\",\n        placement: column.numeric ? 'bottom-end' : 'bottom-start',\n        enterDelay: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(TableSortLabel, {\n        active: orderBy === column.id,\n        direction: order,\n        onClick: this.createSortHandler(column.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, column.label)));\n    }, this)));\n  }\n\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nlet EnhancedTableToolbar = props => {\n  const {\n    numSelected\n  } = props;\n  return React.createElement(Toolbar, {\n    className: \"table-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, numSelected > 0 ? React.createElement(Typography, {\n    variant: \"subheading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, numSelected, \" selected\") : React.createElement(Typography, {\n    variant: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Nutrition\")), React.createElement(\"div\", {\n    className: \"spacer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, numSelected > 0 ? React.createElement(Tooltip, {\n    title: \"Delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"Delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }))) : React.createElement(Tooltip, {\n    title: \"Filter list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"Filter list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(FilterListIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })))));\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nclass EnhancedTable extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleRequestSort = (event, property) => {\n      const orderBy = property;\n      let order = 'desc';\n\n      if (this.state.orderBy === property && this.state.order === 'desc') {\n        order = 'asc';\n      }\n\n      const data = order === 'desc' ? this.state.data.sort((a, b) => b[orderBy] < a[orderBy] ? -1 : 1) : this.state.data.sort((a, b) => a[orderBy] < b[orderBy] ? -1 : 1);\n      this.setState({\n        data,\n        order,\n        orderBy\n      });\n    };\n\n    this.handleSelectAllClick = (event, checked) => {\n      if (checked) {\n        this.setState({\n          selected: this.state.data.map(n => n.id)\n        });\n        return;\n      }\n\n      this.setState({\n        selected: []\n      });\n    };\n\n    this.handleKeyDown = (event, id) => {\n      if (keycode(event) === 'space') {\n        this.handleClick(event, id);\n      }\n    };\n\n    this.handleClick = (event, id) => {\n      const {\n        selected\n      } = this.state;\n      const selectedIndex = selected.indexOf(id);\n      let newSelected = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, id);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n      }\n\n      this.setState({\n        selected: newSelected\n      });\n    };\n\n    this.handleChangePage = (event, page) => {\n      this.setState({\n        page\n      });\n    };\n\n    this.handleChangeRowsPerPage = event => {\n      this.setState({\n        rowsPerPage: event.target.value\n      });\n    };\n\n    this.isSelected = id => this.state.selected.indexOf(id) !== -1;\n\n    this.state = {\n      order: 'asc',\n      orderBy: 'calories',\n      selected: [],\n      data: [createData('Cupcake', 305, 3.7, 67, 4.3), createData('Donut', 452, 25.0, 51, 4.9), createData('Eclair', 262, 16.0, 24, 6.0), createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Gingerbread', 356, 16.0, 49, 3.9), createData('Honeycomb', 408, 3.2, 87, 6.5), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Jelly Bean', 375, 0.0, 94, 0.0), createData('KitKat', 518, 26.0, 65, 7.0), createData('Lollipop', 392, 0.2, 98, 0.0), createData('Marshmallow', 318, 0, 81, 2.0), createData('Nougat', 360, 19.0, 9, 37.0), createData('Oreo', 437, 18.0, 63, 4.0)].sort((a, b) => a.calories < b.calories ? -1 : 1),\n      page: 0,\n      rowsPerPage: 5\n    };\n  }\n\n  render() {\n    const {\n      data,\n      order,\n      orderBy,\n      selected,\n      rowsPerPage,\n      page\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(EnhancedTableToolbar, {\n      numSelected: selected.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"flex-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"table-responsive-material\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(EnhancedTableHead, {\n      numSelected: selected.length,\n      order: order,\n      orderBy: orderBy,\n      onSelectAllClick: this.handleSelectAllClick,\n      onRequestSort: this.handleRequestSort,\n      rowCount: data.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(n => {\n      const isSelected = this.isSelected(n.id);\n      return React.createElement(TableRow, {\n        hover: true,\n        onClick: event => this.handleClick(event, n.id),\n        onKeyDown: event => this.handleKeyDown(event, n.id),\n        role: \"checkbox\",\n        \"aria-checked\": isSelected,\n        tabIndex: -1,\n        key: n.id,\n        selected: isSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        padding: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        color: \"primary\",\n        checked: isSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      })), React.createElement(TableCell, {\n        padding: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, n.name), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, n.calories), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, n.fat), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, n.carbs), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, n.protein));\n    })), React.createElement(TableFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(TablePagination, {\n      count: data.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onChangePage: this.handleChangePage,\n      onChangeRowsPerPage: this.handleChangeRowsPerPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default EnhancedTable;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/tables/enhanced/EnhancedTable.js"],"names":["React","PropTypes","keycode","Table","TableBody","TableCell","TableFooter","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Checkbox","IconButton","Tooltip","DeleteIcon","FilterListIcon","counter","createData","name","calories","fat","carbs","protein","id","columnData","align","disablePadding","label","EnhancedTableHead","Component","createSortHandler","property","event","props","onRequestSort","render","onSelectAllClick","order","orderBy","numSelected","rowCount","map","column","numeric","propTypes","number","isRequired","func","string","EnhancedTableToolbar","EnhancedTable","constructor","context","handleRequestSort","state","data","sort","a","b","setState","handleSelectAllClick","checked","selected","n","handleKeyDown","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","page","handleChangeRowsPerPage","rowsPerPage","target","value","isSelected"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport keycode from 'keycode';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\nlet counter = 0;\n\nfunction createData(name, calories, fat, carbs, protein) {\n  counter += 1;\n  return {id: counter, name, calories, fat, carbs, protein};\n}\n\nconst columnData = [\n  {id: 'name', align: false, disablePadding: true, label: 'Dessert (100g serving)'},\n  {id: 'calories', align: true, disablePadding: false, label: 'Calories'},\n  {id: 'fat', align: true, disablePadding: false, label: 'Fat (g)'},\n  {id: 'carbs', align: true, disablePadding: false, label: 'Carbs (g)'},\n  {id: 'protein', align: true, disablePadding: false, label: 'Protein (g)'},\n];\n\nclass EnhancedTableHead extends React.Component {\n  static propTypes = {\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.string.isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n  };\n\n  createSortHandler = property => event => {\n    this.props.onRequestSort(event, property);\n  };\n\n  render() {\n    const {onSelectAllClick, order, orderBy, numSelected, rowCount} = this.props;\n\n    return (\n      <TableHead>\n        <TableRow>\n          <TableCell padding=\"checkbox\">\n            <Checkbox color=\"primary\"\n                      indeterminate={numSelected > 0 && numSelected < rowCount}\n                      checked={numSelected === rowCount}\n                      onChange={onSelectAllClick}\n            />\n          </TableCell>\n          {columnData.map(column => {\n            return (\n              <TableCell\n                key={column.id}\n                numeric={column.numeric}\n                padding={column.disablePadding ? 'none' : 'default'}\n              >\n                <Tooltip\n                  title=\"Sort\"\n                  placement={column.numeric ? 'bottom-end' : 'bottom-start'}\n                  enterDelay={300}\n                >\n                  <TableSortLabel\n                    active={orderBy === column.id}\n                    direction={order}\n                    onClick={this.createSortHandler(column.id)}\n                  >\n                    {column.label}\n                  </TableSortLabel>\n                </Tooltip>\n              </TableCell>\n            );\n          }, this)}\n        </TableRow>\n      </TableHead>\n    );\n  }\n}\n\n\nlet EnhancedTableToolbar = props => {\n  const {numSelected} = props;\n\n  return (\n    <Toolbar\n      className=\"table-header\">\n      <div className=\"title\">\n        {numSelected > 0 ? (\n          <Typography variant=\"subheading\">{numSelected} selected</Typography>\n        ) : (\n          <Typography variant=\"title\">Nutrition</Typography>\n        )}\n      </div>\n      <div className=\"spacer\"/>\n      <div className=\"actions\">\n        {numSelected > 0 ? (\n          <Tooltip title=\"Delete\">\n            <IconButton aria-label=\"Delete\">\n              <DeleteIcon/>\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title=\"Filter list\">\n            <IconButton aria-label=\"Filter list\">\n              <FilterListIcon/>\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\n\nclass EnhancedTable extends React.Component {\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let order = 'desc';\n\n    if (this.state.orderBy === property && this.state.order === 'desc') {\n      order = 'asc';\n    }\n\n    const data =\n      order === 'desc'\n        ? this.state.data.sort((a, b) => (b[orderBy] < a[orderBy] ? -1 : 1))\n        : this.state.data.sort((a, b) => (a[orderBy] < b[orderBy] ? -1 : 1));\n\n    this.setState({data, order, orderBy});\n  };\n  handleSelectAllClick = (event, checked) => {\n    if (checked) {\n      this.setState({selected: this.state.data.map(n => n.id)});\n      return;\n    }\n    this.setState({selected: []});\n  };\n  handleKeyDown = (event, id) => {\n    if (keycode(event) === 'space') {\n      this.handleClick(event, id);\n    }\n  };\n  handleClick = (event, id) => {\n    const {selected} = this.state;\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    this.setState({selected: newSelected});\n  };\n  handleChangePage = (event, page) => {\n    this.setState({page});\n  };\n  handleChangeRowsPerPage = event => {\n    this.setState({rowsPerPage: event.target.value});\n  };\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      order: 'asc',\n      orderBy: 'calories',\n      selected: [],\n      data: [\n        createData('Cupcake', 305, 3.7, 67, 4.3),\n        createData('Donut', 452, 25.0, 51, 4.9),\n        createData('Eclair', 262, 16.0, 24, 6.0),\n        createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n        createData('Gingerbread', 356, 16.0, 49, 3.9),\n        createData('Honeycomb', 408, 3.2, 87, 6.5),\n        createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n        createData('Jelly Bean', 375, 0.0, 94, 0.0),\n        createData('KitKat', 518, 26.0, 65, 7.0),\n        createData('Lollipop', 392, 0.2, 98, 0.0),\n        createData('Marshmallow', 318, 0, 81, 2.0),\n        createData('Nougat', 360, 19.0, 9, 37.0),\n        createData('Oreo', 437, 18.0, 63, 4.0),\n      ].sort((a, b) => (a.calories < b.calories ? -1 : 1)),\n      page: 0,\n      rowsPerPage: 5,\n    };\n  }\n\n  render() {\n    const {data, order, orderBy, selected, rowsPerPage, page} = this.state;\n\n    return (\n      <div>\n        <EnhancedTableToolbar numSelected={selected.length}/>\n        <div className=\"flex-auto\">\n          <div className=\"table-responsive-material\">\n            <Table>\n              <EnhancedTableHead\n                numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                onSelectAllClick={this.handleSelectAllClick}\n                onRequestSort={this.handleRequestSort}\n                rowCount={data.length}\n              />\n              <TableBody>\n                {data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(n => {\n                  const isSelected = this.isSelected(n.id);\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => this.handleClick(event, n.id)}\n                      onKeyDown={event => this.handleKeyDown(event, n.id)}\n                      role=\"checkbox\"\n                      aria-checked={isSelected}\n                      tabIndex={-1}\n                      key={n.id}\n                      selected={isSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox color=\"primary\" checked={isSelected}/>\n                      </TableCell>\n                      <TableCell padding=\"none\">{n.name}</TableCell>\n                      <TableCell align=\"right\">{n.calories}</TableCell>\n                      <TableCell align=\"right\">{n.fat}</TableCell>\n                      <TableCell align=\"right\">{n.carbs}</TableCell>\n                      <TableCell align=\"right\">{n.protein}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n              <TableFooter>\n                <TableRow>\n                  <TablePagination\n                    count={data.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                  />\n                </TableRow>\n              </TableFooter>\n            </Table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EnhancedTable;"]},"metadata":{},"sourceType":"module"}