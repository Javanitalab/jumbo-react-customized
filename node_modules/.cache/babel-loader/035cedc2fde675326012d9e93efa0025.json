{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/components/user_management/index.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport IntlMessages from \"util/IntlMessages\";\nimport { connect } from \"react-redux\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { updateUserList, filterUsers } from \"actions/UserManagement\";\nimport { CSVLink } from \"react-csv\";\nconst columns = [{\n  id: \"name\",\n  label: \"Name\",\n  minWidth: 170,\n  align: \"center\"\n}, {\n  id: \"code\",\n  label: \"ISO\\u00a0Code\",\n  minWidth: 100,\n  align: \"center\"\n}, {\n  id: \"population\",\n  label: \"Population\",\n  minWidth: 170,\n  align: \"center\",\n  format: value => value.toLocaleString(\"en-US\")\n}, {\n  id: \"size\",\n  label: \"Size\\u00a0(km\\u00b2)\",\n  minWidth: 170,\n  align: \"center\",\n  format: value => value.toLocaleString(\"en-US\")\n}, {\n  id: \"density\",\n  label: \"Density\",\n  minWidth: 170,\n  align: \"center\",\n  format: value => value.toFixed(2)\n}, {\n  id: \"delete\",\n  label: \"Delete\",\n  minWidth: 50,\n  align: \"center\",\n  format: value => value.toFixed(2)\n}, {\n  id: \"edit\",\n  label: \"Edit\",\n  minWidth: 50,\n  align: \"center\",\n  format: value => value.toFixed(2)\n}];\nexport class UserManagement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filter: {\n        text1: \"\",\n        text2: \"\",\n        text3: \"\"\n      },\n      showEditModal: false\n    };\n  }\n\n  render() {\n    const page = 0;\n    const rowsPerPage = 10;\n    const setRowsPerPage = 10;\n    const setPage = 1;\n    const classes = makeStyles(theme => ({\n      root: {\n        width: \"100%\",\n        padding: \"5% 5% 5% 5% !important\"\n      },\n      form: {\n        margin: \"5% 5% 5% 5% !important\"\n      },\n      \"& > *\": {\n        margin: theme.spacing(2),\n        width: \"25ch\"\n      },\n      container: {\n        maxHeight: 440\n      }\n    }));\n    const {\n      filter: {\n        text1,\n        text2,\n        text3\n      }\n    } = this.state;\n    const {\n      showMessage,\n      loader,\n      alertMessage\n    } = this.props;\n\n    const handleChangePage = (event, newPage) => {\n      setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = event => {\n      setRowsPerPage(+event.target.value);\n      setPage(0);\n    };\n\n    var users;\n    if (this.props.users) users = this.props.users;else users = [];\n    this.state.users = this.props.users;\n    console.log(\"---------\");\n    return React.createElement(Paper, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: classes.form,\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: event => {\n        event.preventDefault();\n        this.props.filterUsers();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"text1\",\n      label: React.createElement(IntlMessages, {\n        id: \"appModule.signin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }),\n      variant: \"filled\",\n      onChange: e => {\n        this.setState({\n          text1: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"text2\",\n      label: React.createElement(IntlMessages, {\n        id: \"appModule.signin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }),\n      variant: \"filled\",\n      onChange: e => {\n        this.setState({\n          text2: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"text3\",\n      label: React.createElement(IntlMessages, {\n        id: \"appModule.signin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }),\n      variant: \"filled\",\n      onChange: e => {\n        this.setState({\n          text3: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \" \", React.createElement(CSVLink, {\n      filename: \"Users\",\n      data: users,\n      enclosingCharacter: `'`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"CSV File\"))), loader && React.createElement(\"div\", {\n      className: \"loader-view\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), React.createElement(TableContainer, {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Table, {\n      stickyHeader: true,\n      \"aria-label\": \"sticky table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, columns.map(column => React.createElement(TableCell, {\n      key: column.id,\n      align: column.align,\n      style: {\n        minWidth: column.minWidth\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, column.label)))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, users.map(row => {\n      row[\"edit\"] = \"hi\";\n      row[\"delete\"] = \"bye\";\n      return React.createElement(TableRow, {\n        hover: true,\n        role: \"checkbox\",\n        tabIndex: -1,\n        key: row.code,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, columns.map(column => {\n        const value = row[column.id];\n        return React.createElement(TableCell, {\n          key: column.id,\n          align: column.align,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, column.format && typeof value === \"number\" ? column.format(value) : value);\n      }));\n    })))), React.createElement(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: users.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onChangePage: handleChangePage,\n      onChangeRowsPerPage: handleChangeRowsPerPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = ({\n  userFilter\n}) => {\n  const {\n    users\n  } = userFilter;\n  console.log(userFilter);\n  return {\n    users\n  };\n};\n\nexport default connect(mapStateToProps, {\n  filterUsers,\n  updateUserList\n})(UserManagement);","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/components/user_management/index.js"],"names":["React","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","IntlMessages","connect","TextField","CircularProgress","updateUserList","filterUsers","CSVLink","columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","UserManagement","Component","constructor","props","state","filter","text1","text2","text3","showEditModal","render","page","rowsPerPage","setRowsPerPage","setPage","classes","theme","root","width","padding","form","margin","spacing","container","maxHeight","showMessage","loader","alertMessage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","users","console","log","preventDefault","e","setState","map","column","row","code","length","mapStateToProps","userFilter"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport IntlMessages from \"util/IntlMessages\";\nimport { connect } from \"react-redux\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { updateUserList, filterUsers } from \"actions/UserManagement\";\nimport { CSVLink } from \"react-csv\";\n\nconst columns = [\n  { id: \"name\", label: \"Name\", minWidth: 170, align: \"center\" },\n  { id: \"code\", label: \"ISO\\u00a0Code\", minWidth: 100, align: \"center\" },\n  {\n    id: \"population\",\n    label: \"Population\",\n    minWidth: 170,\n    align: \"center\",\n    format: (value) => value.toLocaleString(\"en-US\"),\n  },\n  {\n    id: \"size\",\n    label: \"Size\\u00a0(km\\u00b2)\",\n    minWidth: 170,\n    align: \"center\",\n    format: (value) => value.toLocaleString(\"en-US\"),\n  },\n  {\n    id: \"density\",\n    label: \"Density\",\n    minWidth: 170,\n    align: \"center\",\n    format: (value) => value.toFixed(2),\n  },\n  {\n    id: \"delete\",\n    label: \"Delete\",\n    minWidth: 50,\n    align: \"center\",\n    format: (value) => value.toFixed(2),\n  },\n\n  {\n    id: \"edit\",\n    label: \"Edit\",\n    minWidth: 50,\n    align: \"center\",\n    format: (value) => value.toFixed(2),\n  },\n];\n\nexport class UserManagement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filter: { text1: \"\", text2: \"\", text3: \"\" },\n      showEditModal: false,\n    };\n  }\n\n  render() {\n    const page = 0;\n    const rowsPerPage = 10;\n    const setRowsPerPage = 10;\n    const setPage = 1;\n    const classes = makeStyles((theme) => ({\n      root: {\n        width: \"100%\",\n        padding: \"5% 5% 5% 5% !important\",\n      },\n      form: {\n        margin: \"5% 5% 5% 5% !important\",\n      },\n      \"& > *\": {\n        margin: theme.spacing(2),\n        width: \"25ch\",\n      },\n      container: {\n        maxHeight: 440,\n      },\n    }));\n    const {\n      filter: { text1, text2, text3 },\n    } = this.state;\n    const { showMessage, loader, alertMessage } = this.props;\n\n    const handleChangePage = (event, newPage) => {\n      setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n      setRowsPerPage(+event.target.value);\n      setPage(0);\n    };\n    var users;\n    if (this.props.users) users = this.props.users;\n    else users = [];\n    this.state.users = this.props.users;\n\n    console.log(\"---------\");\n    return (\n      <Paper className={classes.root}>\n        <form\n          className={classes.form}\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(event) => {\n            event.preventDefault();\n            this.props.filterUsers();\n          }}\n        >\n          <TextField\n            id=\"text1\"\n            label={<IntlMessages id=\"appModule.signin\" />}\n            variant=\"filled\"\n            onChange={(e) => {\n              this.setState({ text1: e.target.value });\n            }}\n          />\n          <TextField\n            id=\"text2\"\n            label={<IntlMessages id=\"appModule.signin\" />}\n            variant=\"filled\"\n            onChange={(e) => {\n              this.setState({ text2: e.target.value });\n            }}\n          />\n          <TextField\n            id=\"text3\"\n            label={<IntlMessages id=\"appModule.signin\" />}\n            variant=\"filled\"\n            onChange={(e) => {\n              this.setState({ text3: e.target.value });\n            }}\n          />\n          <input type=\"submit\" value=\"Submit\" />\n          <button>\n            {\" \"}\n            <CSVLink filename=\"Users\" data={users} enclosingCharacter={`'`}>\n              CSV File\n            </CSVLink>\n          </button>\n        </form>\n\n        {loader && (\n          <div className=\"loader-view\">\n            <CircularProgress />\n          </div>\n        )}\n        <TableContainer className={classes.container}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                {columns.map((column) => (\n                  <TableCell\n                    key={column.id}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth }}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {users.map((row) => {\n                row[\"edit\"] = \"hi\";\n                row[\"delete\"] = \"bye\";\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === \"number\"\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 100]}\n          component=\"div\"\n          count={users.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    );\n  }\n}\nconst mapStateToProps = ({ userFilter }) => {\n  const { users } = userFilter;\n\n  console.log(userFilter);\n  return { users };\n};\n\nexport default connect(mapStateToProps, {\n  filterUsers,\n  updateUserList,\n})(UserManagement);\n"]},"metadata":{},"sourceType":"module"}