{"ast":null,"code":"import _classCallCheck from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{ResponsiveContainer,Treemap}from'recharts';import data from'./data';var COLORS=['#8889DD','#9597E4','#8DC77B','#A5D297','#E2CF45','#F8C12D'];var CustomizedContent=/*#__PURE__*/function(_Component){_inherits(CustomizedContent,_Component);function CustomizedContent(){_classCallCheck(this,CustomizedContent);return _possibleConstructorReturn(this,_getPrototypeOf(CustomizedContent).apply(this,arguments));}_createClass(CustomizedContent,[{key:\"render\",value:function render(){var _this$props=this.props,root=_this$props.root,depth=_this$props.depth,x=_this$props.x,y=_this$props.y,width=_this$props.width,height=_this$props.height,index=_this$props.index,colors=_this$props.colors,name=_this$props.name;return React.createElement(\"g\",null,React.createElement(\"rect\",{x:x,y:y,width:width,height:height,style:{fill:depth<2?colors[Math.floor(index/root.children.length*6)]:'none',stroke:'#fff',strokeWidth:2/(depth+1e-10),strokeOpacity:1/(depth+1e-10)}}),depth===1?React.createElement(\"text\",{x:x+width/2,y:y+height/2+7,textAnchor:\"middle\",fill:\"#fff\",fontSize:14},name):null,depth===1?React.createElement(\"text\",{x:x+4,y:y+18,fill:\"#fff\",fontSize:16,fillOpacity:0.9},index+1):null);}}]);return CustomizedContent;}(Component);var CustomContentTreemap=function CustomContentTreemap(){return React.createElement(ResponsiveContainer,{width:\"100%\",height:200},React.createElement(Treemap,{data:data,dataKey:\"size\",ratio:4/3,stroke:\"#fff\",fill:\"#3367d6\",content:React.createElement(CustomizedContent,{colors:COLORS})}));};export default CustomContentTreemap;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/charts/routes/treemap/Components/CustomContentTreemap.js"],"names":["React","Component","ResponsiveContainer","Treemap","data","COLORS","CustomizedContent","props","root","depth","x","y","width","height","index","colors","name","fill","Math","floor","children","length","stroke","strokeWidth","strokeOpacity","CustomContentTreemap"],"mappings":"2rBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OAAQC,mBAAR,CAA6BC,OAA7B,KAA2C,UAA3C,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CAGA,GAAMC,CAAAA,MAAM,CAAG,CAAC,SAAD,CAAY,SAAZ,CAAuB,SAAvB,CAAkC,SAAlC,CAA6C,SAA7C,CAAwD,SAAxD,CAAf,C,GAEMC,CAAAA,iB,uTACK,iBACyD,KAAKC,KAD9D,CACAC,IADA,aACAA,IADA,CACMC,KADN,aACMA,KADN,CACaC,CADb,aACaA,CADb,CACgBC,CADhB,aACgBA,CADhB,CACmBC,KADnB,aACmBA,KADnB,CAC0BC,MAD1B,aAC0BA,MAD1B,CACkCC,KADlC,aACkCA,KADlC,CACyCC,MADzC,aACyCA,MADzC,CACiDC,IADjD,aACiDA,IADjD,CAGP,MACE,8BACE,4BACE,CAAC,CAAEN,CADL,CAEE,CAAC,CAAEC,CAFL,CAGE,KAAK,CAAEC,KAHT,CAIE,MAAM,CAAEC,MAJV,CAKE,KAAK,CAAE,CACLI,IAAI,CAAER,KAAK,CAAG,CAAR,CAAYM,MAAM,CAACG,IAAI,CAACC,KAAL,CAAWL,KAAK,CAAGN,IAAI,CAACY,QAAL,CAAcC,MAAtB,CAA+B,CAA1C,CAAD,CAAlB,CAAmE,MADpE,CAELC,MAAM,CAAE,MAFH,CAGLC,WAAW,CAAE,GAAKd,KAAK,CAAG,KAAb,CAHR,CAILe,aAAa,CAAE,GAAKf,KAAK,CAAG,KAAb,CAJV,CALT,EADF,CAcIA,KAAK,GAAK,CAAV,CACE,4BACE,CAAC,CAAEC,CAAC,CAAGE,KAAK,CAAG,CADjB,CAEE,CAAC,CAAED,CAAC,CAAGE,MAAM,CAAG,CAAb,CAAiB,CAFtB,CAGE,UAAU,CAAC,QAHb,CAIE,IAAI,CAAC,MAJP,CAKE,QAAQ,CAAE,EALZ,EAOGG,IAPH,CADF,CAUI,IAxBR,CA2BIP,KAAK,GAAK,CAAV,CACE,4BACE,CAAC,CAAEC,CAAC,CAAG,CADT,CAEE,CAAC,CAAEC,CAAC,CAAG,EAFT,CAGE,IAAI,CAAC,MAHP,CAIE,QAAQ,CAAE,EAJZ,CAKE,WAAW,CAAE,GALf,EAOGG,KAAK,CAAG,CAPX,CADF,CAUI,IArCR,CADF,CA0CD,C,+BA9C6Bb,S,EAiDhC,GAAMwB,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,SAC3B,qBAAC,mBAAD,EAAqB,KAAK,CAAC,MAA3B,CAAkC,MAAM,CAAE,GAA1C,EACE,oBAAC,OAAD,EACE,IAAI,CAAErB,IADR,CAEE,OAAO,CAAC,MAFV,CAGE,KAAK,CAAE,EAAI,CAHb,CAIE,MAAM,CAAC,MAJT,CAKE,IAAI,CAAC,SALP,CAME,OAAO,CAAE,oBAAC,iBAAD,EAAmB,MAAM,CAAEC,MAA3B,EANX,EADF,CAD2B,EAA7B,CAaA,cAAeoB,CAAAA,oBAAf","sourcesContent":["import React, {Component} from 'react';\nimport {ResponsiveContainer, Treemap} from 'recharts';\nimport data from './data';\n\n\nconst COLORS = ['#8889DD', '#9597E4', '#8DC77B', '#A5D297', '#E2CF45', '#F8C12D'];\n\nclass CustomizedContent extends Component {\n  render() {\n    const {root, depth, x, y, width, height, index, colors, name} = this.props;\n\n    return (\n      <g>\n        <rect\n          x={x}\n          y={y}\n          width={width}\n          height={height}\n          style={{\n            fill: depth < 2 ? colors[Math.floor(index / root.children.length * 6)] : 'none',\n            stroke: '#fff',\n            strokeWidth: 2 / (depth + 1e-10),\n            strokeOpacity: 1 / (depth + 1e-10),\n          }}\n        />\n        {\n          depth === 1 ?\n            <text\n              x={x + width / 2}\n              y={y + height / 2 + 7}\n              textAnchor=\"middle\"\n              fill=\"#fff\"\n              fontSize={14}\n            >\n              {name}\n            </text>\n            : null\n        }\n        {\n          depth === 1 ?\n            <text\n              x={x + 4}\n              y={y + 18}\n              fill=\"#fff\"\n              fontSize={16}\n              fillOpacity={0.9}\n            >\n              {index + 1}\n            </text>\n            : null\n        }\n      </g>\n    );\n  }\n}\n\nconst CustomContentTreemap = () => (\n  <ResponsiveContainer width=\"100%\" height={200}>\n    <Treemap\n      data={data}\n      dataKey=\"size\"\n      ratio={4 / 3}\n      stroke=\"#fff\"\n      fill=\"#3367d6\"\n      content={<CustomizedContent colors={COLORS}/>}\n    />\n  </ResponsiveContainer>\n);\n\nexport default CustomContentTreemap;"]},"metadata":{},"sourceType":"module"}