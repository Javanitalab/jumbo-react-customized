{"ast":null,"code":"import { all, call, put, takeEvery } from 'redux-saga/effects';\nimport { fetchContactsSuccess, showContactMessage } from 'actions/Contact';\nimport { database } from '../firebase/firebase';\nimport { FETCH_ALL_CONTACT } from 'constants/ActionTypes';\n\nconst getContacts = async () => await database.ref('prod/contacts').once('value').then(snapshot => {\n  const contacts = [];\n  snapshot.forEach(rawData => {\n    contacts.push(rawData.val());\n  });\n  return contacts;\n}).catch(error => error);\n\nfunction* fetchContactRequest() {\n  try {\n    const fetchedContact = yield call(getContacts);\n    yield put(fetchContactsSuccess(fetchedContact));\n  } catch (error) {\n    yield put(showContactMessage(error));\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(FETCH_ALL_CONTACT, fetchContactRequest)]);\n}","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/sagas/Contact.js"],"names":["all","call","put","takeEvery","fetchContactsSuccess","showContactMessage","database","FETCH_ALL_CONTACT","getContacts","ref","once","then","snapshot","contacts","forEach","rawData","push","val","catch","error","fetchContactRequest","fetchedContact","rootSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,IAAb,EAAmBC,GAAnB,EAAwBC,SAAxB,QAAwC,oBAAxC;AACA,SAAQC,oBAAR,EAA8BC,kBAA9B,QAAuD,iBAAvD;AACA,SAAQC,QAAR,QAAuB,sBAAvB;AACA,SAAQC,iBAAR,QAAgC,uBAAhC;;AAEA,MAAMC,WAAW,GAAG,YAClB,MAAMF,QAAQ,CAACG,GAAT,CAAa,eAAb,EAA8BC,IAA9B,CAAmC,OAAnC,EACHC,IADG,CACGC,QAAD,IAAc;AAClB,QAAMC,QAAQ,GAAG,EAAjB;AACAD,EAAAA,QAAQ,CAACE,OAAT,CAAkBC,OAAD,IAAa;AAC5BF,IAAAA,QAAQ,CAACG,IAAT,CAAcD,OAAO,CAACE,GAAR,EAAd;AACD,GAFD;AAGA,SAAOJ,QAAP;AACD,CAPG,EAQHK,KARG,CAQGC,KAAK,IAAIA,KARZ,CADR;;AAYA,UAAUC,mBAAV,GAAgC;AAC9B,MAAI;AACF,UAAMC,cAAc,GAAG,MAAMpB,IAAI,CAACO,WAAD,CAAjC;AACA,UAAMN,GAAG,CAACE,oBAAoB,CAACiB,cAAD,CAArB,CAAT;AACD,GAHD,CAGE,OAAOF,KAAP,EAAc;AACd,UAAMjB,GAAG,CAACG,kBAAkB,CAACc,KAAD,CAAnB,CAAT;AACD;AACF;;AAGD,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAMtB,GAAG,CAAC,CAACG,SAAS,CAACI,iBAAD,EAAoBa,mBAApB,CAAV,CAAD,CAAT;AACD","sourcesContent":["import {all, call, put, takeEvery} from 'redux-saga/effects';\nimport {fetchContactsSuccess, showContactMessage} from 'actions/Contact';\nimport {database} from '../firebase/firebase';\nimport {FETCH_ALL_CONTACT} from 'constants/ActionTypes';\n\nconst getContacts = async () =>\n  await database.ref('prod/contacts').once('value')\n    .then((snapshot) => {\n      const contacts = [];\n      snapshot.forEach((rawData) => {\n        contacts.push(rawData.val());\n      });\n      return contacts;\n    })\n    .catch(error => error);\n\n\nfunction* fetchContactRequest() {\n  try {\n    const fetchedContact = yield call(getContacts);\n    yield put(fetchContactsSuccess(fetchedContact));\n  } catch (error) {\n    yield put(showContactMessage(error));\n  }\n}\n\n\nexport default function* rootSaga() {\n  yield all([takeEvery(FETCH_ALL_CONTACT, fetchContactRequest)]);\n}"]},"metadata":{},"sourceType":"module"}