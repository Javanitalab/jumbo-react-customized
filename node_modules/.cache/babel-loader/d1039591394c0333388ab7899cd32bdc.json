{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/stepper/linear/HorizontalLinearStepper.js\";\nimport React from 'react';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Select campaign settings...';\n\n    case 1:\n      return 'What is an ad group anyways?';\n\n    case 2:\n      return 'This is the bit I really care about!';\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nclass HorizontalLinearStepper extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeStep: 0,\n      skipped: new Set()\n    };\n\n    this.isStepOptional = step => {\n      return step === 1;\n    };\n\n    this.handleNext = () => {\n      const {\n        activeStep\n      } = this.state;\n      let {\n        skipped\n      } = this.state;\n\n      if (this.isStepSkipped(activeStep)) {\n        skipped = new Set(skipped.values());\n        skipped.delete(activeStep);\n      }\n\n      this.setState({\n        activeStep: activeStep + 1,\n        skipped\n      });\n    };\n\n    this.handleBack = () => {\n      const {\n        activeStep\n      } = this.state;\n      this.setState({\n        activeStep: activeStep - 1\n      });\n    };\n\n    this.handleSkip = () => {\n      const {\n        activeStep\n      } = this.state;\n\n      if (!this.isStepOptional(activeStep)) {\n        // You probably want to guard against something like this,\n        // it should never occur unless someone's actively trying to break something.\n        throw new Error(\"You can't skip a step that isn't optional.\");\n      }\n\n      const skipped = new Set(this.state.skipped.values());\n      skipped.add(activeStep);\n      this.setState({\n        activeStep: this.state.activeStep + 1,\n        skipped\n      });\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        activeStep: 0\n      });\n    };\n  }\n\n  isStepSkipped(step) {\n    return this.state.skipped.has(step);\n  }\n\n  render() {\n    const steps = getSteps();\n    const {\n      activeStep\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"w-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Stepper, {\n      activeStep: activeStep,\n      className: \"horizontal-stepper-linear\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, steps.map((label, index) => {\n      const props = {};\n      const labelProps = {};\n\n      if (this.isStepOptional(index)) {\n        labelProps.optional = React.createElement(Typography, {\n          variant: \"caption\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"Optional\");\n      }\n\n      if (this.isStepSkipped(index)) {\n        props.completed = false;\n      }\n\n      return React.createElement(Step, Object.assign({\n        key: label,\n        className: `horizontal-stepper ${index === activeStep ? 'active' : ''}`\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(StepLabel, Object.assign({\n        className: \"stepperlabel\"\n      }, labelProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), label));\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, activeStep === steps.length ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: \"my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"All steps completed - you\\\"re finished\"), React.createElement(Button, {\n      onClick: this.handleReset,\n      className: \"jr-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Reset\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: \"my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, getStepContent(activeStep)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Button, {\n      disabled: activeStep === 0,\n      onClick: this.handleBack,\n      className: \"jr-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Back\"), this.isStepOptional(activeStep) && React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleSkip,\n      className: \"jr-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Skip\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleNext,\n      className: \"jr-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, activeStep === steps.length - 1 ? 'Finish' : 'Next')))));\n  }\n\n}\n\nexport default HorizontalLinearStepper;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/stepper/linear/HorizontalLinearStepper.js"],"names":["React","Stepper","Step","StepLabel","Button","Typography","getSteps","getStepContent","step","HorizontalLinearStepper","Component","state","activeStep","skipped","Set","isStepOptional","handleNext","isStepSkipped","values","delete","setState","handleBack","handleSkip","Error","add","handleReset","has","render","steps","map","label","index","props","labelProps","optional","completed","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Select campaign settings...';\n    case 1:\n      return 'What is an ad group anyways?';\n    case 2:\n      return 'This is the bit I really care about!';\n    default:\n      return 'Unknown step';\n  }\n}\n\nclass HorizontalLinearStepper extends React.Component {\n\n  state = {\n    activeStep: 0,\n    skipped: new Set(),\n  };\n\n  isStepOptional = step => {\n    return step === 1;\n  };\n  handleNext = () => {\n    const {activeStep} = this.state;\n    let {skipped} = this.state;\n    if (this.isStepSkipped(activeStep)) {\n      skipped = new Set(skipped.values());\n      skipped.delete(activeStep);\n    }\n    this.setState({\n      activeStep: activeStep + 1,\n      skipped,\n    });\n  };\n  handleBack = () => {\n    const {activeStep} = this.state;\n    this.setState({\n      activeStep: activeStep - 1,\n    });\n  };\n  handleSkip = () => {\n    const {activeStep} = this.state;\n    if (!this.isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n    const skipped = new Set(this.state.skipped.values());\n    skipped.add(activeStep);\n    this.setState({\n      activeStep: this.state.activeStep + 1,\n      skipped,\n    });\n  };\n  handleReset = () => {\n    this.setState({\n      activeStep: 0,\n    });\n  };\n\n  isStepSkipped(step) {\n    return this.state.skipped.has(step);\n  }\n\n  render() {\n    const steps = getSteps();\n    const {activeStep} = this.state;\n\n    return (\n      <div className=\"w-100\">\n        <Stepper activeStep={activeStep} className=\"horizontal-stepper-linear\">\n          {steps.map((label, index) => {\n            const props = {};\n            const labelProps = {};\n            if (this.isStepOptional(index)) {\n              labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n            }\n            if (this.isStepSkipped(index)) {\n              props.completed = false;\n            }\n            return (\n              <Step key={label} className={`horizontal-stepper ${index === activeStep ? 'active' : ''}`} {...props}>\n                <StepLabel className=\"stepperlabel\" {...labelProps}>{label}</StepLabel>\n              </Step>\n            );\n          })}\n        </Stepper>\n        <div>\n          {activeStep === steps.length ? (\n            <div>\n              <Typography className=\"my-2\">\n                All steps completed - you&quot;re finished\n              </Typography>\n              <Button onClick={this.handleReset} className=\"jr-btn\">\n                Reset\n              </Button>\n            </div>\n          ) : (\n            <div>\n              <Typography className=\"my-2\">{getStepContent(activeStep)}</Typography>\n              <div>\n                <Button\n                  disabled={activeStep === 0}\n                  onClick={this.handleBack}\n                  className=\"jr-btn\"\n                >\n                  Back\n                </Button>\n                {this.isStepOptional(activeStep) && (\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={this.handleSkip}\n                    className=\"jr-btn\"\n                  >\n                    Skip\n                  </Button>\n                )}\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleNext} className=\"jr-btn\">\n                  {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HorizontalLinearStepper;"]},"metadata":{},"sourceType":"module"}