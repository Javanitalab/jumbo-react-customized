{"ast":null,"code":"import _toConsumableArray from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import List from'@material-ui/core/List';import ListItem from'@material-ui/core/ListItem';import ListItemSecondaryAction from'@material-ui/core/ListItemSecondaryAction';import ListItemText from'@material-ui/core/ListItemText';import Checkbox from'@material-ui/core/Checkbox';import IconButton from'@material-ui/core/IconButton';var lists=[{id:1,icon:'label',name:'Label',color:'primary'},{id:2,icon:'layers',name:'Layer',color:'info'},{id:3,icon:'lamp',name:'Lamp',color:'secondary'},{id:4,icon:'movie',name:'Movie',color:'warning'},{id:5,icon:'puzzle-piece',name:'Puzzle',color:'danger'}];var CheckboxList=/*#__PURE__*/function(_Component){_inherits(CheckboxList,_Component);function CheckboxList(){var _getPrototypeOf2;var _this;_classCallCheck(this,CheckboxList);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(CheckboxList)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={checked:[0]};_this.handleToggle=function(event,value){var checked=_this.state.checked;var currentIndex=checked.indexOf(value);var newChecked=_toConsumableArray(checked);if(currentIndex===-1){newChecked.push(value);}else{newChecked.splice(currentIndex,1);}_this.setState({checked:newChecked});};return _this;}_createClass(CheckboxList,[{key:\"render\",value:function render(){var _this2=this;return React.createElement(List,null,lists.map(function(item){return React.createElement(ListItem,{button:true,key:item.id,onClick:function onClick(event){return _this2.handleToggle(event,item.id);}},React.createElement(Checkbox,{color:\"primary\",checked:_this2.state.checked.indexOf(item.id)!==-1,tabIndex:\"-1\"}),React.createElement(ListItemText,{primary:item.name}),React.createElement(ListItemSecondaryAction,null,React.createElement(IconButton,null,React.createElement(\"i\",{className:\"zmdi zmdi-\".concat(item.icon,\" text-\").concat(item.color)}))));}));}}]);return CheckboxList;}(Component);export default CheckboxList;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/list/checkbox/CheckboxList.js"],"names":["React","Component","List","ListItem","ListItemSecondaryAction","ListItemText","Checkbox","IconButton","lists","id","icon","name","color","CheckboxList","state","checked","handleToggle","event","value","currentIndex","indexOf","newChecked","push","splice","setState","map","item"],"mappings":"40BAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,uBAAP,KAAoC,2CAApC,CACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CAEA,GAAMC,CAAAA,KAAK,CAAG,CACZ,CAACC,EAAE,CAAE,CAAL,CAAQC,IAAI,CAAE,OAAd,CAAuBC,IAAI,CAAE,OAA7B,CAAsCC,KAAK,CAAE,SAA7C,CADY,CAEZ,CAACH,EAAE,CAAE,CAAL,CAAQC,IAAI,CAAE,QAAd,CAAwBC,IAAI,CAAE,OAA9B,CAAuCC,KAAK,CAAE,MAA9C,CAFY,CAGZ,CAACH,EAAE,CAAE,CAAL,CAAQC,IAAI,CAAE,MAAd,CAAsBC,IAAI,CAAE,MAA5B,CAAoCC,KAAK,CAAE,WAA3C,CAHY,CAIZ,CAACH,EAAE,CAAE,CAAL,CAAQC,IAAI,CAAE,OAAd,CAAuBC,IAAI,CAAE,OAA7B,CAAsCC,KAAK,CAAE,SAA7C,CAJY,CAKZ,CAACH,EAAE,CAAE,CAAL,CAAQC,IAAI,CAAE,cAAd,CAA8BC,IAAI,CAAE,QAApC,CAA8CC,KAAK,CAAE,QAArD,CALY,CAAd,C,GAOMC,CAAAA,Y,uZACJC,K,CAAQ,CACNC,OAAO,CAAE,CAAC,CAAD,CADH,C,OAIRC,Y,CAAe,SAACC,KAAD,CAAQC,KAAR,CAAkB,IACxBH,CAAAA,OADwB,CACb,MAAKD,KADQ,CACxBC,OADwB,CAE/B,GAAMI,CAAAA,YAAY,CAAGJ,OAAO,CAACK,OAAR,CAAgBF,KAAhB,CAArB,CACA,GAAMG,CAAAA,UAAU,oBAAON,OAAP,CAAhB,CAEA,GAAII,YAAY,GAAK,CAAC,CAAtB,CAAyB,CACvBE,UAAU,CAACC,IAAX,CAAgBJ,KAAhB,EACD,CAFD,IAEO,CACLG,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,CAAgC,CAAhC,EACD,CAED,MAAKK,QAAL,CAAc,CACZT,OAAO,CAAEM,UADG,CAAd,EAGD,C,+EAEQ,iBACP,MACE,qBAAC,IAAD,MACGb,KAAK,CAACiB,GAAN,CAAU,SAAAC,IAAI,QACb,qBAAC,QAAD,EAAU,MAAM,KAAhB,CAAiB,GAAG,CAAEA,IAAI,CAACjB,EAA3B,CAA+B,OAAO,CAAE,iBAAAQ,KAAK,QAAI,CAAA,MAAI,CAACD,YAAL,CAAkBC,KAAlB,CAAyBS,IAAI,CAACjB,EAA9B,CAAJ,EAA7C,EACE,oBAAC,QAAD,EAAU,KAAK,CAAC,SAAhB,CACU,OAAO,CAAE,MAAI,CAACK,KAAL,CAAWC,OAAX,CAAmBK,OAAnB,CAA2BM,IAAI,CAACjB,EAAhC,IAAwC,CAAC,CAD5D,CAEU,QAAQ,CAAC,IAFnB,EADF,CAME,oBAAC,YAAD,EAAc,OAAO,CAAEiB,IAAI,CAACf,IAA5B,EANF,CAOE,oBAAC,uBAAD,MACE,oBAAC,UAAD,MACE,yBAAG,SAAS,qBAAee,IAAI,CAAChB,IAApB,kBAAiCgB,IAAI,CAACd,KAAtC,CAAZ,EADF,CADF,CAPF,CADa,EAAd,CADH,CADF,CAmBD,C,0BAzCwBX,S,EA4C3B,cAAeY,CAAAA,YAAf","sourcesContent":["import React, {Component} from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst lists = [\n  {id: 1, icon: 'label', name: 'Label', color: 'primary'},\n  {id: 2, icon: 'layers', name: 'Layer', color: 'info'},\n  {id: 3, icon: 'lamp', name: 'Lamp', color: 'secondary'},\n  {id: 4, icon: 'movie', name: 'Movie', color: 'warning'},\n  {id: 5, icon: 'puzzle-piece', name: 'Puzzle', color: 'danger'}];\n\nclass CheckboxList extends Component {\n  state = {\n    checked: [0],\n  };\n\n  handleToggle = (event, value) => {\n    const {checked} = this.state;\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    this.setState({\n      checked: newChecked,\n    });\n  };\n\n  render() {\n    return (\n      <List>\n        {lists.map(item =>\n          <ListItem button key={item.id} onClick={event => this.handleToggle(event, item.id)}>\n            <Checkbox color=\"primary\"\n                      checked={this.state.checked.indexOf(item.id) !== -1}\n                      tabIndex=\"-1\"\n            />\n\n            <ListItemText primary={item.name}/>\n            <ListItemSecondaryAction>\n              <IconButton>\n                <i className={`zmdi zmdi-${item.icon} text-${item.color}`}/>\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>,\n        )}\n      </List>\n    );\n  }\n}\n\nexport default CheckboxList;"]},"metadata":{},"sourceType":"module"}