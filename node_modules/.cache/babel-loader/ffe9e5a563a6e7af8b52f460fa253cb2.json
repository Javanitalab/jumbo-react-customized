{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/dialogs/confirmation/ConfirmationDialogDemo.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nconst options = ['None', 'Atria', 'Callisto', 'Dione', 'Ganymede', 'Hangouts Call', 'Luna', 'Oberon', 'Phobos', 'Pyxis', 'Sedna', 'Titania', 'Triton', 'Umbriel'];\n\nclass ConfirmationDialog extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: undefined\n    };\n    this.radioGroup = null;\n\n    this.handleEntering = () => {\n      this.radioGroup.focus();\n    };\n\n    this.handleCancel = () => {\n      this.props.onClose(this.props.value);\n    };\n\n    this.handleOk = () => {\n      this.props.onClose(this.state.value);\n    };\n\n    this.handleChange = (event, value) => {\n      this.setState({\n        value\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      value: this.props.value\n    });\n  }\n\n  componentWillUpdate(nextProps) {\n    if (nextProps.value !== this.props.value) {\n      // eslint-disable-next-line react/no-will-update-set-state\n      this.setState({\n        value: nextProps.value\n      });\n    }\n  }\n\n  render() {\n    const {\n      value,\n      ...other\n    } = this.props;\n    return React.createElement(Dialog, Object.assign({\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      maxWidth: \"xs\",\n      onEntering: this.handleEntering\n    }, other, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Phone Ringtone\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(RadioGroup, {\n      ref: node => {\n        this.radioGroup = node;\n      },\n      \"aria-label\": \"ringtone\",\n      name: \"ringtone\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, options.map(option => React.createElement(FormControlLabel, {\n      value: option,\n      key: option,\n      control: React.createElement(Radio, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }),\n      label: option,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleCancel,\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.handleOk,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Ok\")));\n  }\n\n}\n\nConfirmationDialog.propTypes = {\n  onClose: PropTypes.func,\n  value: PropTypes.string\n};\n\nclass ConfirmationDialogDemo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      value: 'Dione'\n    };\n    this.button = undefined;\n\n    this.handleClickListItem = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleRequestClose = value => {\n      this.setState({\n        value,\n        open: false\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"d-inline-block w-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      button: true,\n      divider: true,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: \"Interruptions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), React.createElement(ListItem, {\n      button: true,\n      divider: true,\n      \"aria-haspopup\": true,\n      \"aria-controls\": \"ringtone-menu\",\n      \"aria-label\": \"Phone ringtone\",\n      onClick: this.handleClickListItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: \"Phone ringtone\",\n      secondary: this.state.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(ListItem, {\n      button: true,\n      divider: true,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: \"Default notification ringtone\",\n      secondary: \"Tethys\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })), React.createElement(ConfirmationDialog, {\n      open: this.state.open,\n      onClose: this.handleRequestClose,\n      value: this.state.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ConfirmationDialogDemo;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/dialogs/confirmation/ConfirmationDialogDemo.js"],"names":["React","PropTypes","Button","List","ListItem","ListItemText","Dialog","DialogContent","DialogActions","DialogTitle","Radio","RadioGroup","FormControlLabel","options","ConfirmationDialog","Component","state","value","undefined","radioGroup","handleEntering","focus","handleCancel","props","onClose","handleOk","handleChange","event","setState","componentWillMount","componentWillUpdate","nextProps","render","other","node","map","option","propTypes","func","string","ConfirmationDialogDemo","open","button","handleClickListItem","handleRequestClose"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst options = [\n  'None',\n  'Atria',\n  'Callisto',\n  'Dione',\n  'Ganymede',\n  'Hangouts Call',\n  'Luna',\n  'Oberon',\n  'Phobos',\n  'Pyxis',\n  'Sedna',\n  'Titania',\n  'Triton',\n  'Umbriel',\n];\n\nclass ConfirmationDialog extends React.Component {\n  state = {\n    value: undefined,\n  };\n  radioGroup = null;\n  handleEntering = () => {\n    this.radioGroup.focus();\n  };\n  handleCancel = () => {\n    this.props.onClose(this.props.value);\n  };\n  handleOk = () => {\n    this.props.onClose(this.state.value);\n  };\n  handleChange = (event, value) => {\n    this.setState({value});\n  };\n\n  componentWillMount() {\n    this.setState({value: this.props.value});\n  }\n\n  componentWillUpdate(nextProps) {\n    if (nextProps.value !== this.props.value) {\n      // eslint-disable-next-line react/no-will-update-set-state\n      this.setState({value: nextProps.value});\n    }\n  }\n\n  render() {\n    const {value, ...other} = this.props;\n\n    return (\n      <Dialog\n        disableBackdropClick\n        disableEscapeKeyDown\n        maxWidth=\"xs\"\n        onEntering={this.handleEntering}\n        {...other}\n      >\n        <DialogTitle>Phone Ringtone</DialogTitle>\n        <DialogContent>\n          <RadioGroup\n            ref={node => {\n              this.radioGroup = node;\n            }}\n            aria-label=\"ringtone\"\n            name=\"ringtone\"\n            value={this.state.value}\n            onChange={this.handleChange}\n          >\n            {options.map(option => (\n              <FormControlLabel value={option} key={option} control={<Radio/>} label={option}/>\n            ))}\n          </RadioGroup>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.handleCancel} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button onClick={this.handleOk} color=\"primary\">\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nConfirmationDialog.propTypes = {\n  onClose: PropTypes.func,\n  value: PropTypes.string,\n};\n\nclass ConfirmationDialogDemo extends React.Component {\n  state = {\n    open: false,\n    value: 'Dione',\n  };\n\n  button = undefined;\n\n  handleClickListItem = () => {\n    this.setState({open: true});\n  };\n\n  handleRequestClose = value => {\n    this.setState({value, open: false});\n  };\n\n  render() {\n    return (\n      <div className=\"d-inline-block w-100\">\n        <List>\n          <ListItem button divider disabled>\n            <ListItemText primary=\"Interruptions\"/>\n          </ListItem>\n          <ListItem\n            button\n            divider\n            aria-haspopup\n            aria-controls=\"ringtone-menu\"\n            aria-label=\"Phone ringtone\"\n            onClick={this.handleClickListItem}\n          >\n            <ListItemText primary=\"Phone ringtone\" secondary={this.state.value}/>\n          </ListItem>\n          <ListItem button divider disabled>\n            <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\"/>\n          </ListItem>\n          <ConfirmationDialog\n            open={this.state.open}\n            onClose={this.handleRequestClose}\n            value={this.state.value}\n          />\n        </List>\n      </div>\n    );\n  }\n}\n\nexport default ConfirmationDialogDemo;"]},"metadata":{},"sourceType":"module"}