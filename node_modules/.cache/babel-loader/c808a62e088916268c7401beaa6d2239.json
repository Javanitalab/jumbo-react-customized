{"ast":null,"code":"import _objectSpread from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{withStyles}from'@material-ui/core/styles';import TextField from'@material-ui/core/TextField';import Paper from'@material-ui/core/Paper';import MenuItem from'@material-ui/core/MenuItem';import Downshift from'downshift';var suggestions=[{label:'Afghanistan'},{label:'Aland Islands'},{label:'Albania'},{label:'Algeria'},{label:'American Samoa'},{label:'Andorra'},{label:'Angola'},{label:'Anguilla'},{label:'Antarctica'},{label:'Antigua and Barbuda'},{label:'Argentina'},{label:'Armenia'},{label:'Aruba'},{label:'Australia'},{label:'Austria'},{label:'Azerbaijan'},{label:'Bahamas'},{label:'Bahrain'},{label:'Bangladesh'},{label:'Barbados'},{label:'Belarus'},{label:'Belgium'},{label:'Belize'},{label:'Benin'},{label:'Bermuda'},{label:'Bhutan'},{label:'Bolivia, Plurinational State of'},{label:'Bonaire, Sint Eustatius and Saba'},{label:'Bosnia and Herzegovina'},{label:'Botswana'},{label:'Bouvet Island'},{label:'Brazil'},{label:'British Indian Ocean Territory'},{label:'Brunei Darussalam'}];function renderInput(inputProps){var InputProps=inputProps.InputProps,classes=inputProps.classes,ref=inputProps.ref,other=_objectWithoutProperties(inputProps,[\"InputProps\",\"classes\",\"ref\"]);return React.createElement(TextField,Object.assign({},other,{inputref:ref,InputProps:_objectSpread({classes:{input:classes.input}},InputProps)}));}function renderSuggestion(params){var suggestion=params.suggestion,index=params.index,itemProps=params.itemProps,highlightedIndex=params.highlightedIndex,selectedItem=params.selectedItem;var isHighlighted=highlightedIndex===index;var isSelected=selectedItem===suggestion.label;return React.createElement(MenuItem,Object.assign({},itemProps,{key:suggestion.label,selected:isHighlighted,component:\"div\",style:{fontWeight:isSelected?500:400}}),suggestion.label);}function getSuggestions(inputValue){var count=0;return suggestions.filter(function(suggestion){var keep=(!inputValue||suggestion.label.toLowerCase().includes(inputValue.toLowerCase()))&&count<5;if(keep){count+=1;}return keep;});}var styles={container:{flexGrow:1,height:100,width:'90%'}};function IntegrationDownshift(props){var classes=props.classes;return React.createElement(Downshift,null,function(_ref){var getInputProps=_ref.getInputProps,getItemProps=_ref.getItemProps,isOpen=_ref.isOpen,inputValue=_ref.inputValue,selectedItem=_ref.selectedItem,highlightedIndex=_ref.highlightedIndex;return React.createElement(\"div\",{className:classes.container},renderInput({fullWidth:true,classes:classes,InputProps:getInputProps({placeholder:'Search a country (start with a)',id:'integration-downshift'})}),isOpen?React.createElement(Paper,{square:true},getSuggestions(inputValue).map(function(suggestion,index){return renderSuggestion({suggestion:suggestion,index:index,itemProps:getItemProps({item:suggestion.label}),highlightedIndex:highlightedIndex,selectedItem:selectedItem});})):null);});}export default withStyles(styles)(IntegrationDownshift);","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/autoComplete/downshift/IntegrationDownshift.js"],"names":["React","withStyles","TextField","Paper","MenuItem","Downshift","suggestions","label","renderInput","inputProps","InputProps","classes","ref","other","input","renderSuggestion","params","suggestion","index","itemProps","highlightedIndex","selectedItem","isHighlighted","isSelected","fontWeight","getSuggestions","inputValue","count","filter","keep","toLowerCase","includes","styles","container","flexGrow","height","width","IntegrationDownshift","props","getInputProps","getItemProps","isOpen","fullWidth","placeholder","id","map","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Downshift from 'downshift';\n\nconst suggestions = [\n  {label: 'Afghanistan'},\n  {label: 'Aland Islands'},\n  {label: 'Albania'},\n  {label: 'Algeria'},\n  {label: 'American Samoa'},\n  {label: 'Andorra'},\n  {label: 'Angola'},\n  {label: 'Anguilla'},\n  {label: 'Antarctica'},\n  {label: 'Antigua and Barbuda'},\n  {label: 'Argentina'},\n  {label: 'Armenia'},\n  {label: 'Aruba'},\n  {label: 'Australia'},\n  {label: 'Austria'},\n  {label: 'Azerbaijan'},\n  {label: 'Bahamas'},\n  {label: 'Bahrain'},\n  {label: 'Bangladesh'},\n  {label: 'Barbados'},\n  {label: 'Belarus'},\n  {label: 'Belgium'},\n  {label: 'Belize'},\n  {label: 'Benin'},\n  {label: 'Bermuda'},\n  {label: 'Bhutan'},\n  {label: 'Bolivia, Plurinational State of'},\n  {label: 'Bonaire, Sint Eustatius and Saba'},\n  {label: 'Bosnia and Herzegovina'},\n  {label: 'Botswana'},\n  {label: 'Bouvet Island'},\n  {label: 'Brazil'},\n  {label: 'British Indian Ocean Territory'},\n  {label: 'Brunei Darussalam'},\n];\n\nfunction renderInput(inputProps) {\n  const {InputProps, classes, ref, ...other} = inputProps;\n\n  return (\n    <TextField\n      {...other}\n      inputref={ref}\n      InputProps={{\n        classes: {\n          input: classes.input,\n        },\n        ...InputProps,\n      }}\n    />\n  );\n}\n\nfunction renderSuggestion(params) {\n  const {suggestion, index, itemProps, highlightedIndex, selectedItem} = params;\n  const isHighlighted = highlightedIndex === index;\n  const isSelected = selectedItem === suggestion.label;\n\n  return (\n    <MenuItem\n      {...itemProps}\n      key={suggestion.label}\n      selected={isHighlighted}\n      component=\"div\"\n      style={{\n        fontWeight: isSelected ? 500 : 400,\n      }}\n    >\n      {suggestion.label}\n    </MenuItem>\n  );\n}\n\nfunction getSuggestions(inputValue) {\n  let count = 0;\n\n  return suggestions.filter(suggestion => {\n    const keep =\n      (!inputValue || suggestion.label.toLowerCase().includes(inputValue.toLowerCase())) &&\n      count < 5;\n\n    if (keep) {\n      count += 1;\n    }\n\n    return keep;\n  });\n}\n\nconst styles = {\n  container: {\n    flexGrow: 1,\n    height: 100,\n    width: '90%',\n  },\n};\n\nfunction IntegrationDownshift(props) {\n  const {classes} = props;\n\n  return (\n    <Downshift>\n      {({getInputProps, getItemProps, isOpen, inputValue, selectedItem, highlightedIndex}) => (\n        <div className={classes.container}>\n          {renderInput({\n            fullWidth: true,\n            classes,\n            InputProps: getInputProps({\n              placeholder: 'Search a country (start with a)',\n              id: 'integration-downshift',\n            }),\n          })}\n          {isOpen ? (\n            <Paper square>\n              {getSuggestions(inputValue).map((suggestion, index) =>\n                renderSuggestion({\n                  suggestion,\n                  index,\n                  itemProps: getItemProps({item: suggestion.label}),\n                  highlightedIndex,\n                  selectedItem,\n                }),\n              )}\n            </Paper>\n          ) : null}\n        </div>\n      )}\n    </Downshift>\n  );\n}\n\nIntegrationDownshift.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(IntegrationDownshift);"]},"metadata":{},"sourceType":"module"}