{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/mail/redux/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Drawer from '@material-ui/core/Drawer';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport folders from '../data/folders';\nimport filters from '../data/filters';\nimport labels from '../data/labels';\nimport options from '../data/options';\nimport MailList from 'components/mail/MailList';\nimport ComposeMail from 'components/mail/Compose/index';\nimport AppModuleHeader from 'components/AppModuleHeader/index';\nimport MailDetail from 'components/mail/MailDetail/index';\nimport { fetchMails, getAllMail, getImportantMail, getMailNavFilters, getMailNavLabels, getNavFolders, getReadMail, getStarredMail, getUnimportantMail, getUnreadMail, getUnselectedAllMail, getUnStarredMail, handleMailRequestClose, hideMailLoader, onAllMailSelect, onComposeMail, onDeleteMail, onFolderMenuItemSelect, onFolderSelect, onImportantSelect, onMailChecked, onMailLabelMenuItemSelect, onMailLabelSelect, onMailOptionMenuSelect, onMailSelect, onMailSend, onMailToggleDrawer, onOptionMenuItemSelect, onSearchMail, onStartSelect, setCurrentMailNull, updateMailSearch } from 'actions/Mail';\nimport IntlMessages from 'util/IntlMessages';\nimport CustomScrollbars from 'util/CustomScrollbars';\n\nclass MailWithRedux extends Component {\n  constructor() {\n    super();\n\n    this.MailSideBar = () => {\n      return React.createElement(\"div\", {\n        className: \"module-side\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"module-side-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"module-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-email mr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"mail.mailbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"module-side-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(CustomScrollbars, {\n        className: \"module-side-scroll scrollbar\",\n        style: {\n          height: this.props.width >= 1200 ? 'calc(100vh - 200px)' : 'calc(100vh - 80px)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"module-add-task\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: \"btn-block\",\n        onClick: () => {\n          this.props.onComposeMail();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-edit mr-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(IntlMessages, {\n        id: \"mail.compose\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), \" \")), React.createElement(\"ul\", {\n        className: \"module-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.getNavFolders(), React.createElement(\"li\", {\n        className: \"module-nav-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"mail.filters\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), this.getNavFilters(), React.createElement(\"li\", {\n        className: \"module-nav-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"mail.labels\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), this.getNavLabels()))));\n    };\n\n    this.onDeleteMail = () => {\n      this.props.onDeleteMail();\n    };\n\n    this.getNavFolders = () => {\n      return folders.map((folder, index) => React.createElement(\"li\", {\n        key: index,\n        onClick: () => {\n          this.props.getNavFolders(folder);\n          setTimeout(() => {\n            this.props.hideMailLoader();\n          }, 1500);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: `jr-link ${this.props.selectedFolder === folder.id ? 'active' : ''}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: `zmdi zmdi-${folder.icon}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, folder.title))));\n    };\n\n    this.onFolderMenuItemSelect = folderId => {\n      this.props.handleMailRequestClose();\n      this.props.onFolderMenuItemSelect(folderId);\n    };\n\n    this.onLabelMenuItemSelect = label => {\n      this.props.handleMailRequestClose();\n      this.props.onMailLabelMenuItemSelect(label);\n    };\n\n    this.handleRequestClose = () => {\n      this.props.handleMailRequestClose();\n    };\n\n    this.getNavFilters = () => {\n      return filters.map((filter, index) => React.createElement(\"li\", {\n        key: index,\n        onClick: () => {\n          this.props.getMailNavFilters(filter);\n          setTimeout(() => {\n            this.props.hideMailLoader();\n          }, 1500);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"jr-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: `zmdi zmdi-${filter.icon}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, filter.title))));\n    };\n\n    this.onFolderSelect = event => {\n      this.props.onFolderSelect();\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.onLabelSelect = event => {\n      this.props.onMailLabelSelect();\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.onOptionMenuSelect = event => {\n      this.props.onMailOptionMenuSelect();\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.onOptionMenuItemSelect = option => {\n      switch (option.title) {\n        case 'All':\n          this.props.handleMailRequestClose();\n          this.props.getAllMail();\n          break;\n\n        case 'None':\n          this.props.handleMailRequestClose();\n          this.props.getUnselectedAllMail();\n          break;\n\n        case 'Read':\n          this.props.handleMailRequestClose();\n          this.props.getReadMail();\n          break;\n\n        case 'Unread':\n          this.props.handleMailRequestClose();\n          this.props.getUnreadMail();\n          break;\n\n        case 'Starred':\n          this.props.handleMailRequestClose();\n          this.props.getStarredMail();\n          break;\n\n        case 'Unstarred':\n          this.props.handleMailRequestClose();\n          this.props.getUnStarredMail();\n          break;\n\n        case 'Important':\n          this.props.handleMailRequestClose();\n          this.props.getImportantMail();\n          break;\n\n        case 'Unimportant':\n          this.props.handleMailRequestClose();\n          this.props.getUnimportantMail();\n          break;\n\n        default:\n          this.props.handleMailRequestClose();\n          this.props.getAllMail();\n      }\n    };\n\n    this.getAllMail = () => {\n      this.props.getAllMail();\n    };\n\n    this.getUnselectedAllMail = () => {\n      this.props.getUnselectedAllMail();\n    };\n\n    this.getReadMail = () => {\n      this.props.getReadMail();\n    };\n\n    this.getUnreadMail = () => {\n      this.props.getUnreadMail();\n    };\n\n    this.getStarredMail = () => {\n      this.props.getStarredMail();\n    };\n\n    this.getUnStarredMail = () => {\n      this.props.getUnStarredMail();\n    };\n\n    this.getImportantMail = () => {\n      this.props.getImportantMail();\n    };\n\n    this.getUnimportantMail = () => {\n      this.props.getUnimportantMail();\n    };\n\n    this.getNavLabels = () => {\n      return labels.map((label, index) => React.createElement(\"li\", {\n        key: index,\n        onClick: () => {\n          this.props.getMailNavLabels(label);\n          setTimeout(() => {\n            this.props.hideMailLoader();\n          }, 1500);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"jr-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: `zmdi zmdi-label-alt text-${label.color}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, label.title))));\n    };\n\n    this.searchMail = searchText => {\n      this.props.onSearchMail(searchText);\n    };\n\n    this.displayMail = (currentMail, folderMails, noContentFoundMessage) => {\n      return React.createElement(\"div\", {\n        className: \"module-box-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, currentMail === null ? folderMails.length === 0 ? React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        style: {\n          height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, noContentFoundMessage) : React.createElement(MailList, {\n        mails: folderMails,\n        onStartSelect: this.onStartSelect.bind(this),\n        onMailSelect: this.onMailSelect.bind(this),\n        width: this.props.width,\n        onMailChecked: this.onMailChecked.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }) : React.createElement(MailDetail, {\n        mail: currentMail,\n        onStartSelect: this.onStartSelect.bind(this),\n        width: this.props.width,\n        onImportantSelect: this.onImportantSelect.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }));\n    };\n\n    this.getMailActions = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        onClick: this.onFolderSelect.bind(this),\n        className: \"icon-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-folder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      })), React.createElement(IconButton, {\n        onClick: this.onDeleteMail.bind(this),\n        className: \"icon-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      })), React.createElement(IconButton, {\n        onClick: this.onLabelSelect.bind(this),\n        className: \"icon-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-label-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      })));\n    };\n\n    this.state = {\n      anchorEl: null\n    };\n  }\n\n  componentWillMount() {\n    this.props.fetchMails();\n  }\n\n  onMailChecked(data) {\n    this.props.onMailChecked(data);\n  }\n\n  onAllMailSelect() {\n    const selectAll = this.props.selectedMails <= this.props.folderMails.length;\n\n    if (selectAll) {\n      this.getAllMail();\n    } else {\n      this.getUnselectedAllMail();\n    }\n  }\n\n  onStartSelect(data) {\n    this.props.onStartSelect(data);\n  }\n\n  onImportantSelect(data) {\n    this.props.onImportantSelect(data);\n  }\n\n  onMailSend(data) {\n    this.props.onMailSend(data);\n  }\n\n  onMailSelect(mail) {\n    this.props.onMailSelect(mail);\n    setTimeout(() => {\n      this.props.hideMailLoader();\n    }, 1500);\n  }\n\n  updateSearch(evt) {\n    this.props.updateMailSearch(evt.target.value);\n    this.props.onSearchMail(evt.target.value);\n  }\n\n  onToggleDrawer() {\n    this.props.onMailToggleDrawer();\n  }\n\n  render() {\n    const {\n      selectedMails,\n      loader,\n      currentMail,\n      folderMails,\n      composeMail,\n      user,\n      alertMessage,\n      showMessage,\n      noContentFoundMessage\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"app-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"animated slideInUpTiny animation-duration-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"app-module\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-block d-xl-none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(Drawer, {\n      open: this.props.drawerState,\n      onClose: this.onToggleDrawer.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, this.MailSideBar())), React.createElement(\"div\", {\n      className: \"app-module-sidenav d-none d-xl-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, this.MailSideBar()), React.createElement(\"div\", {\n      className: \"module-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"module-box-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: \"drawer-btn d-block d-xl-none\",\n      \"aria-label\": \"Menu\",\n      onClick: this.onToggleDrawer.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"zmdi zmdi-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    })), React.createElement(AppModuleHeader, {\n      placeholder: \"Search mails\",\n      user: this.props.user,\n      onChange: this.updateSearch.bind(this),\n      value: this.props.searchMail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"module-box-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"module-box-topbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, this.props.currentMail === null ? React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      color: \"primary\",\n      indeterminate: selectedMails > 0 && selectedMails < folderMails.length,\n      checked: selectedMails > 0,\n      onChange: this.onAllMailSelect.bind(this),\n      value: \"SelectMail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"d-flex align-items-center\",\n      onClick: this.onOptionMenuSelect.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"px-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, \" \", this.props.optionName), React.createElement(IconButton, {\n      className: \"icon-btn-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"zmdi zmdi-caret-down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    })))) : React.createElement(IconButton, {\n      className: \"icon-btn\",\n      onClick: () => {\n        this.props.setCurrentMailNull();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"zmdi zmdi-arrow-back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    })), selectedMails > 0 && this.getMailActions(), React.createElement(Menu, {\n      id: \"option-menu\",\n      anchorEl: this.state.anchorEl,\n      open: this.props.optionMenuState,\n      onClose: this.handleRequestClose,\n      MenuListProps: {\n        style: {\n          width: 150\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, options.map(option => React.createElement(MenuItem, {\n      key: option.title,\n      onClick: this.onOptionMenuItemSelect.bind(this, option),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, option.title))), React.createElement(Menu, {\n      id: \"folder-menu\",\n      anchorEl: this.state.anchorEl,\n      open: this.props.folderMenuState,\n      onClose: this.handleRequestClose,\n      MenuListProps: {\n        style: {\n          width: 150\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, folders.map(folder => React.createElement(MenuItem, {\n      key: folder.id,\n      onClick: this.onFolderMenuItemSelect.bind(this, folder.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, folder.title))), React.createElement(Menu, {\n      id: \"label-menu\",\n      anchorEl: this.state.anchorEl,\n      open: this.props.labelMenuState,\n      onClose: this.handleRequestClose,\n      MenuListProps: {\n        style: {\n          width: 150\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, labels.map(label => React.createElement(MenuItem, {\n      key: label.id,\n      onClick: this.onLabelMenuItemSelect.bind(this, label),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, label.title)))), loader ? React.createElement(\"div\", {\n      className: \"loader-view\",\n      style: {\n        height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    })) : this.displayMail(currentMail, folderMails, noContentFoundMessage), React.createElement(ComposeMail, {\n      open: composeMail,\n      user: user,\n      onClose: this.handleRequestClose.bind(this),\n      onMailSend: this.onMailSend.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    })))), React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      open: showMessage,\n      autoHideDuration: 3000,\n      onClose: this.handleRequestClose,\n      ContentProps: {\n        'aria-describedby': 'message-id'\n      },\n      message: React.createElement(\"span\", {\n        id: \"message-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }, alertMessage),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = ({\n  mail,\n  settings\n}) => {\n  const {\n    width\n  } = settings;\n  const {\n    searchMail,\n    noContentFoundMessage,\n    alertMessage,\n    showMessage,\n    drawerState,\n    anchorEl,\n    allMail,\n    optionName,\n    loader,\n    currentMail,\n    user,\n    selectedMails,\n    selectedFolder,\n    composeMail,\n    labelMenuState,\n    folderMenuState,\n    optionMenuState,\n    folderMails\n  } = mail;\n  return {\n    width,\n    searchMail,\n    noContentFoundMessage,\n    alertMessage,\n    showMessage,\n    drawerState,\n    anchorEl,\n    allMail,\n    optionName,\n    loader,\n    currentMail,\n    user,\n    selectedMails,\n    selectedFolder,\n    composeMail,\n    labelMenuState,\n    folderMenuState,\n    optionMenuState,\n    folderMails\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAllMail,\n  fetchMails,\n  getImportantMail,\n  getMailNavFilters,\n  getMailNavLabels,\n  getNavFolders,\n  getReadMail,\n  getStarredMail,\n  getUnimportantMail,\n  getUnreadMail,\n  getUnselectedAllMail,\n  getUnStarredMail,\n  handleMailRequestClose,\n  hideMailLoader,\n  onAllMailSelect,\n  onComposeMail,\n  onDeleteMail,\n  onFolderMenuItemSelect,\n  onFolderSelect,\n  onImportantSelect,\n  onMailChecked,\n  onMailLabelMenuItemSelect,\n  onMailLabelSelect,\n  onMailOptionMenuSelect,\n  onMailSelect,\n  onMailSend,\n  onMailToggleDrawer,\n  onOptionMenuItemSelect,\n  onSearchMail,\n  onStartSelect,\n  setCurrentMailNull,\n  updateMailSearch\n})(MailWithRedux);","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/mail/redux/index.js"],"names":["React","Component","connect","Button","Drawer","Checkbox","Snackbar","IconButton","Menu","MenuItem","CircularProgress","folders","filters","labels","options","MailList","ComposeMail","AppModuleHeader","MailDetail","fetchMails","getAllMail","getImportantMail","getMailNavFilters","getMailNavLabels","getNavFolders","getReadMail","getStarredMail","getUnimportantMail","getUnreadMail","getUnselectedAllMail","getUnStarredMail","handleMailRequestClose","hideMailLoader","onAllMailSelect","onComposeMail","onDeleteMail","onFolderMenuItemSelect","onFolderSelect","onImportantSelect","onMailChecked","onMailLabelMenuItemSelect","onMailLabelSelect","onMailOptionMenuSelect","onMailSelect","onMailSend","onMailToggleDrawer","onOptionMenuItemSelect","onSearchMail","onStartSelect","setCurrentMailNull","updateMailSearch","IntlMessages","CustomScrollbars","MailWithRedux","constructor","MailSideBar","height","props","width","getNavFilters","getNavLabels","map","folder","index","setTimeout","selectedFolder","id","icon","title","folderId","onLabelMenuItemSelect","label","handleRequestClose","filter","event","setState","anchorEl","currentTarget","onLabelSelect","onOptionMenuSelect","option","color","searchMail","searchText","displayMail","currentMail","folderMails","noContentFoundMessage","length","bind","getMailActions","state","componentWillMount","data","selectAll","selectedMails","mail","updateSearch","evt","target","value","onToggleDrawer","render","loader","composeMail","user","alertMessage","showMessage","drawerState","optionName","optionMenuState","style","folderMenuState","labelMenuState","vertical","horizontal","mapStateToProps","settings","allMail"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport Button from '@material-ui/core/Button';\nimport Drawer from '@material-ui/core/Drawer';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport folders from '../data/folders';\nimport filters from '../data/filters';\nimport labels from '../data/labels';\nimport options from '../data/options';\nimport MailList from 'components/mail/MailList';\n\nimport ComposeMail from 'components/mail/Compose/index';\nimport AppModuleHeader from 'components/AppModuleHeader/index';\nimport MailDetail from 'components/mail/MailDetail/index';\nimport {\n  fetchMails,\n  getAllMail,\n  getImportantMail,\n  getMailNavFilters,\n  getMailNavLabels,\n  getNavFolders,\n  getReadMail,\n  getStarredMail,\n  getUnimportantMail,\n  getUnreadMail,\n  getUnselectedAllMail,\n  getUnStarredMail,\n  handleMailRequestClose,\n  hideMailLoader,\n  onAllMailSelect,\n  onComposeMail,\n  onDeleteMail,\n  onFolderMenuItemSelect,\n  onFolderSelect,\n  onImportantSelect,\n  onMailChecked,\n  onMailLabelMenuItemSelect,\n  onMailLabelSelect,\n  onMailOptionMenuSelect,\n  onMailSelect,\n  onMailSend,\n  onMailToggleDrawer,\n  onOptionMenuItemSelect,\n  onSearchMail,\n  onStartSelect,\n  setCurrentMailNull,\n  updateMailSearch\n} from 'actions/Mail';\nimport IntlMessages from 'util/IntlMessages';\nimport CustomScrollbars from 'util/CustomScrollbars';\n\n\nclass MailWithRedux extends Component {\n\n  MailSideBar = () => {\n    return <div className=\"module-side\">\n\n      <div className=\"module-side-header\">\n        <div className=\"module-logo\">\n          <i className=\"zmdi zmdi-email mr-4\"/>\n          <span><IntlMessages id=\"mail.mailbox\"/></span>\n        </div>\n\n      </div>\n\n      <div className=\"module-side-content\">\n        <CustomScrollbars className=\"module-side-scroll scrollbar\"\n                          style={{height: this.props.width >= 1200 ? 'calc(100vh - 200px)' : 'calc(100vh - 80px)'}}>\n          <div className=\"module-add-task\">\n            <Button variant=\"contained\" color=\"primary\" className=\"btn-block\"\n                    onClick={() => {\n                      this.props.onComposeMail();\n                    }}>\n              <i className=\"zmdi zmdi-edit mr-3\"/>\n              <IntlMessages id=\"mail.compose\"/> </Button>\n          </div>\n\n          <ul className=\"module-nav\">\n\n            {this.getNavFolders()}\n\n            <li className=\"module-nav-label\">\n              <IntlMessages id=\"mail.filters\"/>\n            </li>\n\n            {this.getNavFilters()}\n\n            <li className=\"module-nav-label\">\n              <IntlMessages id=\"mail.labels\"/>\n            </li>\n\n            {this.getNavLabels()}\n\n          </ul>\n        </CustomScrollbars>\n      </div>\n    </div>\n  };\n\n  onDeleteMail = () => {\n    this.props.onDeleteMail();\n  };\n  getNavFolders = () => {\n    return folders.map((folder, index) =>\n      <li key={index} onClick={() => {\n        this.props.getNavFolders(folder);\n        setTimeout(() => {\n          this.props.hideMailLoader();\n        }, 1500);\n      }\n      }>\n        <span className={`jr-link ${this.props.selectedFolder === folder.id ? 'active' : ''}`}>\n          <i className={`zmdi zmdi-${folder.icon}`}/>\n          <span>{folder.title}</span>\n        </span>\n      </li>\n    )\n  };\n  onFolderMenuItemSelect = (folderId) => {\n    this.props.handleMailRequestClose();\n    this.props.onFolderMenuItemSelect(folderId);\n  };\n  onLabelMenuItemSelect = (label) => {\n    this.props.handleMailRequestClose();\n    this.props.onMailLabelMenuItemSelect(label);\n  };\n  handleRequestClose = () => {\n    this.props.handleMailRequestClose();\n  };\n  getNavFilters = () => {\n    return filters.map((filter, index) =>\n      <li key={index} onClick={() => {\n        this.props.getMailNavFilters(filter);\n        setTimeout(() => {\n          this.props.hideMailLoader();\n        }, 1500);\n      }\n      }>\n        <span className=\"jr-link\">\n          <i className={`zmdi zmdi-${filter.icon}`}/>\n          <span>{filter.title}</span>\n        </span>\n      </li>\n    )\n  };\n\n  onFolderSelect = event => {\n    this.props.onFolderSelect();\n    this.setState({\n      anchorEl: event.currentTarget\n    })\n  };\n  onLabelSelect = event => {\n    this.props.onMailLabelSelect();\n    this.setState({\n      anchorEl: event.currentTarget\n    })\n  };\n  onOptionMenuSelect = event => {\n    this.props.onMailOptionMenuSelect();\n    this.setState({\n      anchorEl: event.currentTarget\n    })\n  };\n  onOptionMenuItemSelect = (option) => {\n    switch (option.title) {\n      case 'All':\n        this.props.handleMailRequestClose();\n        this.props.getAllMail();\n        break;\n      case 'None':\n        this.props.handleMailRequestClose();\n        this.props.getUnselectedAllMail();\n        break;\n      case 'Read':\n        this.props.handleMailRequestClose();\n        this.props.getReadMail();\n        break;\n      case 'Unread':\n        this.props.handleMailRequestClose();\n        this.props.getUnreadMail();\n        break;\n      case 'Starred':\n        this.props.handleMailRequestClose();\n        this.props.getStarredMail();\n        break;\n      case 'Unstarred':\n        this.props.handleMailRequestClose();\n        this.props.getUnStarredMail();\n        break;\n      case 'Important':\n        this.props.handleMailRequestClose();\n        this.props.getImportantMail();\n        break;\n      case 'Unimportant':\n        this.props.handleMailRequestClose();\n        this.props.getUnimportantMail();\n        break;\n      default:\n        this.props.handleMailRequestClose();\n        this.props.getAllMail();\n    }\n  };\n  getAllMail = () => {\n    this.props.getAllMail();\n  };\n  getUnselectedAllMail = () => {\n    this.props.getUnselectedAllMail();\n  };\n  getReadMail = () => {\n    this.props.getReadMail();\n  };\n  getUnreadMail = () => {\n    this.props.getUnreadMail();\n  };\n  getStarredMail = () => {\n    this.props.getStarredMail();\n  };\n  getUnStarredMail = () => {\n    this.props.getUnStarredMail();\n  };\n  getImportantMail = () => {\n    this.props.getImportantMail();\n  };\n  getUnimportantMail = () => {\n    this.props.getUnimportantMail();\n  };\n  getNavLabels = () => {\n    return labels.map((label, index) =>\n      <li key={index} onClick={() => {\n        this.props.getMailNavLabels(label);\n        setTimeout(() => {\n          this.props.hideMailLoader();\n        }, 1500);\n      }\n      }>\n        <span className=\"jr-link\">\n          <i className={`zmdi zmdi-label-alt text-${label.color}`}/>\n          <span>{label.title}</span>\n        </span>\n      </li>\n    )\n  };\n  searchMail = (searchText) => {\n    this.props.onSearchMail(searchText);\n  };\n  displayMail = (currentMail, folderMails, noContentFoundMessage) => {\n    return (<div className=\"module-box-column\">\n      {currentMail === null ?\n        folderMails.length === 0 ?\n          <div className=\"d-flex align-items-center justify-content-center\"\n               style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\n            {noContentFoundMessage}\n          </div>\n          :\n          <MailList mails={folderMails} onStartSelect={this.onStartSelect.bind(this)}\n                    onMailSelect={this.onMailSelect.bind(this)}\n                    width={this.props.width}\n                    onMailChecked={this.onMailChecked.bind(this)}/>\n        :\n        <MailDetail mail={currentMail} onStartSelect={this.onStartSelect.bind(this)}\n                    width={this.props.width}\n                    onImportantSelect={this.onImportantSelect.bind(this)}/>}\n    </div>)\n  };\n  getMailActions = () => {\n    return <div>\n      <IconButton onClick={this.onFolderSelect.bind(this)} className=\"icon-btn\">\n        <i className=\"zmdi zmdi-folder\"/>\n      </IconButton>\n\n      <IconButton onClick={this.onDeleteMail.bind(this)} className=\"icon-btn\">\n        <i className=\"zmdi zmdi-delete\"/>\n      </IconButton>\n\n      <IconButton\n        onClick={this.onLabelSelect.bind(this)} className=\"icon-btn\">\n        <i className=\"zmdi zmdi-label-alt\"/>\n      </IconButton>\n    </div>\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      anchorEl: null\n    }\n  }\n\n  componentWillMount() {\n    this.props.fetchMails();\n  }\n\n  onMailChecked(data) {\n    this.props.onMailChecked(data);\n  }\n\n  onAllMailSelect() {\n    const selectAll = this.props.selectedMails <= this.props.folderMails.length;\n    if (selectAll) {\n      this.getAllMail();\n    } else {\n      this.getUnselectedAllMail();\n    }\n  }\n\n  onStartSelect(data) {\n    this.props.onStartSelect(data);\n  }\n\n  onImportantSelect(data) {\n    this.props.onImportantSelect(data);\n  }\n\n  onMailSend(data) {\n    this.props.onMailSend(data);\n  }\n\n  onMailSelect(mail) {\n    this.props.onMailSelect(mail);\n    setTimeout(() => {\n      this.props.hideMailLoader();\n    }, 1500);\n  }\n\n  updateSearch(evt) {\n    this.props.updateMailSearch(evt.target.value);\n    this.props.onSearchMail(evt.target.value)\n  }\n\n  onToggleDrawer() {\n    this.props.onMailToggleDrawer()\n  }\n\n  render() {\n    const {selectedMails, loader, currentMail, folderMails, composeMail, user, alertMessage, showMessage, noContentFoundMessage} = this.props;\n    return (\n\n      <div className=\"app-wrapper\">\n        <div className=\"animated slideInUpTiny animation-duration-3\">\n          <div className=\"app-module\">\n\n            <div className=\"d-block d-xl-none\">\n              <Drawer\n                open={this.props.drawerState}\n                onClose={this.onToggleDrawer.bind(this)}>\n                {this.MailSideBar()}\n              </Drawer>\n            </div>\n            <div className=\"app-module-sidenav d-none d-xl-flex\">\n              {this.MailSideBar()}\n            </div>\n\n            <div className=\"module-box\">\n\n              <div className=\"module-box-header\">\n\n                <IconButton className=\"drawer-btn d-block d-xl-none\" aria-label=\"Menu\"\n                            onClick={this.onToggleDrawer.bind(this)}>\n                  <i className=\"zmdi zmdi-menu\"/>\n                </IconButton>\n                <AppModuleHeader placeholder=\"Search mails\" user={this.props.user}\n                                 onChange={this.updateSearch.bind(this)}\n                                 value={this.props.searchMail}/>\n\n              </div>\n\n              <div className=\"module-box-content\">\n                <div className=\"module-box-topbar\">\n                  {this.props.currentMail === null ?\n                    <div className=\"d-flex\">\n                      <Checkbox color=\"primary\"\n                                indeterminate={selectedMails > 0 && selectedMails < folderMails.length}\n                                checked={selectedMails > 0}\n                                onChange={this.onAllMailSelect.bind(this)}\n                                value=\"SelectMail\"/>\n\n                      <div className=\"d-flex align-items-center\" onClick={this.onOptionMenuSelect.bind(this)}>\n                        <span className=\"px-2\"> {this.props.optionName}</span>\n                        <IconButton className=\"icon-btn-sm\">\n\n                          <i className=\"zmdi zmdi-caret-down\"/>\n                        </IconButton>\n                      </div>\n                    </div>\n                    :\n                    <IconButton className=\"icon-btn\"\n                                onClick={() => {\n                                  this.props.setCurrentMailNull();\n                                }}>\n                      <i className=\"zmdi zmdi-arrow-back\"/>\n                    </IconButton>\n                  }\n\n                  {(selectedMails > 0) && this.getMailActions()}\n\n\n                  <Menu id=\"option-menu\"\n                        anchorEl={this.state.anchorEl}\n                        open={this.props.optionMenuState}\n                        onClose={this.handleRequestClose}\n\n                        MenuListProps={{\n                          style: {\n                            width: 150,\n                          },\n                        }}>\n                    {options.map(option =>\n                      <MenuItem key={option.title}\n                                onClick={this.onOptionMenuItemSelect.bind(this, option)}>\n                        {option.title}\n                      </MenuItem>,\n                    )}\n                  </Menu>\n\n                  <Menu id=\"folder-menu\"\n                        anchorEl={this.state.anchorEl}\n                        open={this.props.folderMenuState}\n                        onClose={this.handleRequestClose}\n\n                        MenuListProps={{\n                          style: {\n                            width: 150,\n                          },\n                        }}>\n                    {folders.map(folder =>\n                      <MenuItem key={folder.id}\n                                onClick={this.onFolderMenuItemSelect.bind(this, folder.id)}>\n                        {folder.title}\n                      </MenuItem>,\n                    )}\n                  </Menu>\n                  <Menu id=\"label-menu\"\n                        anchorEl={this.state.anchorEl}\n                        open={this.props.labelMenuState}\n                        onClose={this.handleRequestClose}\n\n                        MenuListProps={{\n                          style: {\n                            width: 150,\n                          },\n                        }}>\n                    {labels.map(label =>\n                      <MenuItem key={label.id}\n                                onClick={this.onLabelMenuItemSelect.bind(this, label)}>\n                        {label.title}\n                      </MenuItem>,\n                    )}\n                  </Menu>\n                </div>\n\n                {loader ?\n                  <div className=\"loader-view\"\n                       style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\n                    <CircularProgress/>\n                  </div> : this.displayMail(currentMail, folderMails, noContentFoundMessage)}\n\n                <ComposeMail open={composeMail} user={user}\n                             onClose={this.handleRequestClose.bind(this)}\n                             onMailSend={this.onMailSend.bind(this)}/>\n\n              </div>\n            </div>\n          </div>\n          <Snackbar\n            anchorOrigin={{vertical: 'top', horizontal: 'center'}}\n            open={showMessage}\n            autoHideDuration={3000}\n            onClose={this.handleRequestClose}\n            ContentProps={{\n              'aria-describedby': 'message-id',\n            }}\n            message={<span id=\"message-id\">{alertMessage}</span>}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = ({mail, settings}) => {\n  const {width} = settings;\n  const {\n    searchMail,\n    noContentFoundMessage,\n    alertMessage,\n    showMessage,\n    drawerState,\n    anchorEl,\n    allMail,\n    optionName,\n    loader,\n    currentMail,\n    user,\n    selectedMails,\n    selectedFolder,\n    composeMail,\n    labelMenuState,\n    folderMenuState,\n    optionMenuState,\n    folderMails\n  } = mail;\n\n  return {\n    width,\n    searchMail,\n    noContentFoundMessage,\n    alertMessage,\n    showMessage,\n    drawerState,\n    anchorEl,\n    allMail,\n    optionName,\n    loader,\n    currentMail,\n    user,\n    selectedMails,\n    selectedFolder,\n    composeMail,\n    labelMenuState,\n    folderMenuState,\n    optionMenuState,\n    folderMails\n  }\n};\n\n\nexport default connect(mapStateToProps, {\n  getAllMail,\n  fetchMails,\n  getImportantMail,\n  getMailNavFilters,\n  getMailNavLabels,\n  getNavFolders,\n  getReadMail,\n  getStarredMail,\n  getUnimportantMail,\n  getUnreadMail,\n  getUnselectedAllMail,\n  getUnStarredMail,\n  handleMailRequestClose,\n  hideMailLoader,\n  onAllMailSelect,\n  onComposeMail,\n  onDeleteMail,\n  onFolderMenuItemSelect,\n  onFolderSelect,\n  onImportantSelect,\n  onMailChecked,\n  onMailLabelMenuItemSelect,\n  onMailLabelSelect,\n  onMailOptionMenuSelect,\n  onMailSelect,\n  onMailSend,\n  onMailToggleDrawer,\n  onOptionMenuItemSelect,\n  onSearchMail,\n  onStartSelect,\n  setCurrentMailNull,\n  updateMailSearch\n})(MailWithRedux);"]},"metadata":{},"sourceType":"module"}