{"ast":null,"code":"import { all, call, put, takeEvery } from \"redux-saga/effects\";\nimport { updateUserList, showErrorMessage } from \"actions/UserManagement\";\nimport { ON_FILTER_USER } from \"../constants/ActionTypes\";\nimport Axios from \"axios\";\n\nconst getUsers = async payload => await Axios.get(\"https://localhost:5001/api/values\").then(response => {\n  console.log(response);\n  return response.data;\n}).catch(error => error);\n\nfunction* filterUsersRequest(payload) {\n  try {\n    const fetchedMail = yield call(getUsers, payload);\n    yield put(updateUserList(fetchedMail));\n  } catch (error) {\n    yield put(showErrorMessage(error));\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(ON_FILTER_USER, filterUsersRequest)]);\n}","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/sagas/UserManagement.js"],"names":["all","call","put","takeEvery","updateUserList","showErrorMessage","ON_FILTER_USER","Axios","getUsers","payload","get","then","response","console","log","data","catch","error","filterUsersRequest","fetchedMail","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,SAAzB,QAA0C,oBAA1C;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,wBAAjD;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,MAAOC,OAAP,IACf,MAAMF,KAAK,CAACG,GAAN,CAAU,mCAAV,EACHC,IADG,CACGC,QAAD,IAAc;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,SAAOA,QAAQ,CAACG,IAAhB;AACD,CAJG,EAKHC,KALG,CAKIC,KAAD,IAAWA,KALd,CADR;;AAQA,UAAUC,kBAAV,CAA6BT,OAA7B,EAAsC;AACpC,MAAI;AACF,UAAMU,WAAW,GAAG,MAAMlB,IAAI,CAACO,QAAD,EAAWC,OAAX,CAA9B;AACA,UAAMP,GAAG,CAACE,cAAc,CAACe,WAAD,CAAf,CAAT;AACD,GAHD,CAGE,OAAOF,KAAP,EAAc;AACd,UAAMf,GAAG,CAACG,gBAAgB,CAACY,KAAD,CAAjB,CAAT;AACD;AACF;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAMpB,GAAG,CAAC,CAACG,SAAS,CAACG,cAAD,EAAiBY,kBAAjB,CAAV,CAAD,CAAT;AACD","sourcesContent":["import { all, call, put, takeEvery } from \"redux-saga/effects\";\nimport { updateUserList, showErrorMessage } from \"actions/UserManagement\";\nimport { ON_FILTER_USER } from \"../constants/ActionTypes\";\nimport Axios from \"axios\";\n\nconst getUsers = async (payload) =>\n  await Axios.get(\"https://localhost:5001/api/values\")\n    .then((response) => {\n      console.log(response);\n      return response.data;\n    })\n    .catch((error) => error);\n\nfunction* filterUsersRequest(payload) {\n  try {\n    const fetchedMail = yield call(getUsers, payload);\n    yield put(updateUserList(fetchedMail));\n  } catch (error) {\n    yield put(showErrorMessage(error));\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(ON_FILTER_USER, filterUsersRequest)]);\n}\n"]},"metadata":{},"sourceType":"module"}