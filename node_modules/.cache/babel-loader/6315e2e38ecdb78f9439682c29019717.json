{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/drawer/persistent/PersistentDrawer.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { mailFolderListItems, otherMailFolderListItems } from '../tileData';\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    zIndex: 1,\n    overflow: 'hidden'\n  },\n  appFrame: {\n    position: 'relative',\n    display: 'flex',\n    width: '100%',\n    height: '100%'\n  },\n  appBar: {\n    position: 'absolute',\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20\n  },\n  hide: {\n    display: 'none'\n  },\n  drawerPaper: {\n    position: 'relative',\n    height: '100%',\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  content: {\n    width: '100%',\n    marginLeft: -drawerWidth,\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginTop: 56,\n    [theme.breakpoints.up('sm')]: {\n      content: {\n        height: 'calc(100% - 64px)',\n        marginTop: 64\n      }\n    }\n  },\n  contentShift: {\n    marginLeft: 0,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  }\n});\n\nclass PersistentDrawer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n\n    this.handleDrawerOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleDrawerClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      theme\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.appFrame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      className: classNames('bg-primary', classes.appBar, this.state.open && classes.appBarShift),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      disableGutters: !this.state.open,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"open drawer\",\n      onClick: this.handleDrawerOpen,\n      className: classNames(classes.menuButton, this.state.open && classes.hide),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(MenuIcon, {\n      className: \"text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      variant: \"h6\",\n      color: \"inherit\",\n      className: \"text-white\",\n      noWrap: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Persistent drawer\"))), React.createElement(Drawer, {\n      variant: \"persistent\",\n      classes: {\n        paper: classes.drawerPaper\n      },\n      open: this.state.open,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.drawerInner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.drawerHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: this.handleDrawerClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, theme.direction === 'rtl' ? React.createElement(ChevronRightIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }) : React.createElement(ChevronLeftIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(List, {\n      className: classes.list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, mailFolderListItems), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(List, {\n      className: classes.list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, otherMailFolderListItems))), React.createElement(\"main\", {\n      className: classNames(classes.content, this.state.open && classes.contentShift),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      noWrap: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, 'You think water moves fast? You should see ice.'))));\n  }\n\n}\n\nPersistentDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(PersistentDrawer);","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/drawer/persistent/PersistentDrawer.js"],"names":["React","PropTypes","withStyles","classNames","Drawer","AppBar","Toolbar","List","Typography","Divider","IconButton","MenuIcon","ChevronLeftIcon","ChevronRightIcon","mailFolderListItems","otherMailFolderListItems","drawerWidth","styles","theme","root","width","height","zIndex","overflow","appFrame","position","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawerPaper","drawerHeader","alignItems","justifyContent","padding","mixins","toolbar","content","flexGrow","spacing","unit","marginTop","breakpoints","up","contentShift","PersistentDrawer","Component","state","open","handleDrawerOpen","setState","handleDrawerClose","render","classes","props","paper","drawerInner","direction","list","propTypes","object","isRequired","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport {mailFolderListItems, otherMailFolderListItems} from '../tileData';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    zIndex: 1,\n    overflow: 'hidden',\n  },\n  appFrame: {\n    position: 'relative',\n    display: 'flex',\n    width: '100%',\n    height: '100%',\n  },\n  appBar: {\n    position: 'absolute',\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawerPaper: {\n    position: 'relative',\n    height: '100%',\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    width: '100%',\n    marginLeft: -drawerWidth,\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginTop: 56,\n    [theme.breakpoints.up('sm')]: {\n      content: {\n        height: 'calc(100% - 64px)',\n        marginTop: 64,\n      },\n    },\n  },\n  contentShift: {\n    marginLeft: 0,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n});\n\nclass PersistentDrawer extends React.Component {\n  state = {\n    open: false,\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({open: true});\n  };\n\n  handleDrawerClose = () => {\n    this.setState({open: false});\n  };\n\n  render() {\n    const {classes, theme} = this.props;\n\n    return (\n      <div className={classes.root}>\n        <div className={classes.appFrame}>\n          <AppBar className={classNames('bg-primary', classes.appBar, this.state.open && classes.appBarShift)}>\n            <Toolbar disableGutters={!this.state.open}>\n              <IconButton\n\n                aria-label=\"open drawer\"\n                onClick={this.handleDrawerOpen}\n                className={classNames(classes.menuButton, this.state.open && classes.hide)}>\n\n                <MenuIcon className=\"text-white\"/>\n              </IconButton>\n              <Typography variant=\"h6\" color=\"inherit\" className=\"text-white\" noWrap>\n                Persistent drawer\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            variant=\"persistent\"\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            open={this.state.open}\n          >\n            <div className={classes.drawerInner}>\n              <div className={classes.drawerHeader}>\n                <IconButton onClick={this.handleDrawerClose}>\n                  {theme.direction === 'rtl' ? <ChevronRightIcon/> : <ChevronLeftIcon/>}\n                </IconButton>\n              </div>\n              <Divider/>\n              <List className={classes.list}>{mailFolderListItems}</List>\n              <Divider/>\n              <List className={classes.list}>{otherMailFolderListItems}</List>\n            </div>\n          </Drawer>\n          <main className={classNames(classes.content, this.state.open && classes.contentShift)}>\n            <Typography variant=\"body1\" noWrap>\n              {'You think water moves fast? You should see ice.'}\n            </Typography>\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nPersistentDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, {withTheme: true})(PersistentDrawer);"]},"metadata":{},"sourceType":"module"}