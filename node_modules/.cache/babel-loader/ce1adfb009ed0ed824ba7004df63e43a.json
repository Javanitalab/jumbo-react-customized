{"ast":null,"code":"import _classCallCheck from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{connect}from'react-redux';import{withRouter}from'react-router-dom';import Drawer from'@material-ui/core/Drawer';import SidenavContent from'./SidenavContent';import UserInfo from'components/UserInfo';import{COLLAPSED_DRAWER,FIXED_DRAWER,HORIZONTAL_NAVIGATION}from'constants/ActionTypes';import{toggleCollapsedNav,updateWindowWidth}from'actions/Setting';var SideNav=/*#__PURE__*/function(_React$PureComponent){_inherits(SideNav,_React$PureComponent);function SideNav(){var _getPrototypeOf2;var _this;_classCallCheck(this,SideNav);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(SideNav)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.onToggleCollapsedNav=function(e){var val=!_this.props.navCollapsed;_this.props.toggleCollapsedNav(val);};return _this;}_createClass(SideNav,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;window.addEventListener('resize',function(){_this2.props.updateWindowWidth(window.innerWidth);});}},{key:\"render\",value:function render(){var _this$props=this.props,navCollapsed=_this$props.navCollapsed,drawerType=_this$props.drawerType,width=_this$props.width,navigationStyle=_this$props.navigationStyle;var drawerStyle=drawerType.includes(FIXED_DRAWER)?'d-xl-flex':drawerType.includes(COLLAPSED_DRAWER)?'':'d-flex';var type='permanent';if(drawerType.includes(COLLAPSED_DRAWER)||drawerType.includes(FIXED_DRAWER)&&width<1200){type='temporary';}if(navigationStyle===HORIZONTAL_NAVIGATION){drawerStyle='';type='temporary';}return React.createElement(\"div\",{className:\"app-sidebar d-none \".concat(drawerStyle)},React.createElement(Drawer,{className:\"app-sidebar-content\",variant:type,open:type.includes('temporary')?navCollapsed:true,onClose:this.onToggleCollapsedNav,classes:{paper:'side-nav'}},React.createElement(UserInfo,null),React.createElement(SidenavContent,null)));}}]);return SideNav;}(React.PureComponent);var mapStateToProps=function mapStateToProps(_ref){var settings=_ref.settings;var navCollapsed=settings.navCollapsed,drawerType=settings.drawerType,width=settings.width,navigationStyle=settings.navigationStyle;return{navCollapsed:navCollapsed,drawerType:drawerType,width:width,navigationStyle:navigationStyle};};export default withRouter(connect(mapStateToProps,{toggleCollapsedNav:toggleCollapsedNav,updateWindowWidth:updateWindowWidth})(SideNav));","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/containers/SideNav/index.js"],"names":["React","connect","withRouter","Drawer","SidenavContent","UserInfo","COLLAPSED_DRAWER","FIXED_DRAWER","HORIZONTAL_NAVIGATION","toggleCollapsedNav","updateWindowWidth","SideNav","onToggleCollapsedNav","e","val","props","navCollapsed","window","addEventListener","innerWidth","drawerType","width","navigationStyle","drawerStyle","includes","type","paper","PureComponent","mapStateToProps","settings"],"mappings":"2rBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,UAAR,KAAyB,kBAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,qBAArB,CACA,OAAQC,gBAAR,CAA0BC,YAA1B,CAAwCC,qBAAxC,KAAoE,uBAApE,CACA,OAAQC,kBAAR,CAA4BC,iBAA5B,KAAoD,iBAApD,C,GAEMC,CAAAA,O,uZAEJC,oB,CAAuB,SAACC,CAAD,CAAO,CAC5B,GAAMC,CAAAA,GAAG,CAAG,CAAC,MAAKC,KAAL,CAAWC,YAAxB,CACA,MAAKD,KAAL,CAAWN,kBAAX,CAA8BK,GAA9B,EACD,C,gGAEmB,iBAClBG,MAAM,CAACC,gBAAP,CAAwB,QAAxB,CAAkC,UAAM,CACtC,MAAI,CAACH,KAAL,CAAWL,iBAAX,CAA6BO,MAAM,CAACE,UAApC,EACD,CAFD,EAGD,C,uCAEQ,iBACoD,KAAKJ,KADzD,CACAC,YADA,aACAA,YADA,CACcI,UADd,aACcA,UADd,CAC0BC,KAD1B,aAC0BA,KAD1B,CACiCC,eADjC,aACiCA,eADjC,CAEP,GAAIC,CAAAA,WAAW,CAAGH,UAAU,CAACI,QAAX,CAAoBjB,YAApB,EAAoC,WAApC,CAAkDa,UAAU,CAACI,QAAX,CAAoBlB,gBAApB,EAAwC,EAAxC,CAA6C,QAAjH,CACA,GAAImB,CAAAA,IAAI,CAAG,WAAX,CACA,GAAIL,UAAU,CAACI,QAAX,CAAoBlB,gBAApB,GAA0Cc,UAAU,CAACI,QAAX,CAAoBjB,YAApB,GAAqCc,KAAK,CAAG,IAA3F,CAAkG,CAChGI,IAAI,CAAG,WAAP,CACD,CAED,GAAIH,eAAe,GAAKd,qBAAxB,CAA+C,CAC7Ce,WAAW,CAAG,EAAd,CACAE,IAAI,CAAG,WAAP,CACD,CACD,MACE,4BAAK,SAAS,8BAAwBF,WAAxB,CAAd,EACE,oBAAC,MAAD,EAAQ,SAAS,CAAC,qBAAlB,CACQ,OAAO,CAAEE,IADjB,CAEQ,IAAI,CAAEA,IAAI,CAACD,QAAL,CAAc,WAAd,EAA6BR,YAA7B,CAA4C,IAF1D,CAGQ,OAAO,CAAE,KAAKJ,oBAHtB,CAIQ,OAAO,CAAE,CACPc,KAAK,CAAE,UADA,CAJjB,EAQE,oBAAC,QAAD,MARF,CASE,oBAAC,cAAD,MATF,CADF,CADF,CAeD,C,qBAxCmB1B,KAAK,CAAC2B,a,EA2C5B,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAAgB,IAAdC,CAAAA,QAAc,MAAdA,QAAc,IAC/Bb,CAAAA,YAD+B,CACqBa,QADrB,CAC/Bb,YAD+B,CACjBI,UADiB,CACqBS,QADrB,CACjBT,UADiB,CACLC,KADK,CACqBQ,QADrB,CACLR,KADK,CACEC,eADF,CACqBO,QADrB,CACEP,eADF,CAEtC,MAAO,CAACN,YAAY,CAAZA,YAAD,CAAeI,UAAU,CAAVA,UAAf,CAA2BC,KAAK,CAALA,KAA3B,CAAkCC,eAAe,CAAfA,eAAlC,CAAP,CACD,CAHD,CAKA,cAAepB,CAAAA,UAAU,CAACD,OAAO,CAAC2B,eAAD,CAAkB,CAACnB,kBAAkB,CAAlBA,kBAAD,CAAqBC,iBAAiB,CAAjBA,iBAArB,CAAlB,CAAP,CAAkEC,OAAlE,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport Drawer from '@material-ui/core/Drawer';\nimport SidenavContent from './SidenavContent';\nimport UserInfo from 'components/UserInfo';\nimport {COLLAPSED_DRAWER, FIXED_DRAWER, HORIZONTAL_NAVIGATION} from 'constants/ActionTypes';\nimport {toggleCollapsedNav, updateWindowWidth} from 'actions/Setting';\n\nclass SideNav extends React.PureComponent {\n\n  onToggleCollapsedNav = (e) => {\n    const val = !this.props.navCollapsed;\n    this.props.toggleCollapsedNav(val);\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', () => {\n      this.props.updateWindowWidth(window.innerWidth)\n    });\n  }\n\n  render() {\n    const {navCollapsed, drawerType, width, navigationStyle} = this.props;\n    let drawerStyle = drawerType.includes(FIXED_DRAWER) ? 'd-xl-flex' : drawerType.includes(COLLAPSED_DRAWER) ? '' : 'd-flex';\n    let type = 'permanent';\n    if (drawerType.includes(COLLAPSED_DRAWER) || (drawerType.includes(FIXED_DRAWER) && width < 1200)) {\n      type = 'temporary';\n    }\n\n    if (navigationStyle === HORIZONTAL_NAVIGATION) {\n      drawerStyle = '';\n      type = 'temporary';\n    }\n    return (\n      <div className={`app-sidebar d-none ${drawerStyle}`}>\n        <Drawer className=\"app-sidebar-content\"\n                variant={type}\n                open={type.includes('temporary') ? navCollapsed : true}\n                onClose={this.onToggleCollapsedNav}\n                classes={{\n                  paper: 'side-nav',\n                }}\n        >\n          <UserInfo/>\n          <SidenavContent/>\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({settings}) => {\n  const {navCollapsed, drawerType, width, navigationStyle} = settings;\n  return {navCollapsed, drawerType, width, navigationStyle}\n};\n\nexport default withRouter(connect(mapStateToProps, {toggleCollapsedNav, updateWindowWidth})(SideNav));\n\n"]},"metadata":{},"sourceType":"module"}