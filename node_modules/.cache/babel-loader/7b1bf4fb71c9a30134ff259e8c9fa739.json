{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/todo/redux/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport filters from '../data/filters';\nimport labels from '../data/labels';\nimport options from '../data/options';\nimport ToDoList from 'components/todo/ToDoList';\nimport ToDoDetail from 'components/todo/ToDoDetail/index';\nimport AppModuleHeader from 'components/AppModuleHeader/index';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { fetchTodo, fetchTodoConversation, getAllTodo, getImportantToDo, getNavFilters, getNavLabels, getStarredToDo, getUnimportantToDo, getUnselectedAllTodo, getUnStarredTodo, handleToDoMenuRequestClose, hideToDoLoader, onDeleteToDo, onLabelMenuItemSelect, onLabelSelect, onLabelUpdate, onMarkAsStart, onOptionMenuSelect, onSearchTodo, onSortEnd, onTodoAdd, onTodoChecked, onTodoSelect, onToDoUpdate, selectAllTodo, setCurrentToDoNull, toDoToggleDrawer, updateSearch } from 'actions/ToDo';\nimport IntlMessages from 'util/IntlMessages';\nimport CustomScrollbars from 'util/CustomScrollbars';\n\nclass ToDoWithRedux extends Component {\n  constructor() {\n    super();\n\n    this.onSortEnd = ({\n      oldIndex,\n      newIndex\n    }) => {\n      this.props.onSortEnd({\n        oldIndex,\n        newIndex\n      });\n    };\n\n    this.onLabelSelect = event => {\n      this.props.onLabelSelect();\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.onOptionMenuSelect = event => {\n      this.props.onOptionMenuSelect();\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.handleRequestClose = event => {\n      this.props.handleToDoMenuRequestClose();\n    };\n\n    this.onOptionMenuItemSelect = option => {\n      switch (option.title) {\n        case 'All':\n          this.props.handleToDoMenuRequestClose();\n          this.props.selectAllTodo();\n          break;\n\n        case 'None':\n          this.props.handleToDoMenuRequestClose();\n          this.props.getUnselectedAllTodo();\n          break;\n\n        case 'Starred':\n          this.props.handleToDoMenuRequestClose();\n          this.props.getStarredToDo();\n          break;\n\n        case 'Unstarred':\n          this.props.handleToDoMenuRequestClose();\n          this.props.getUnStarredTodo();\n          break;\n\n        case 'Important':\n          this.props.handleToDoMenuRequestClose();\n          this.props.getImportantToDo();\n          break;\n\n        case 'Unimportant':\n          this.props.handleToDoMenuRequestClose();\n          this.props.getUnimportantToDo();\n          break;\n\n        default:\n          this.props.handleToDoMenuRequestClose();\n          this.props.selectAllTodo();\n      }\n    };\n\n    this.onLabelMenuItemSelect = label => {\n      this.props.handleToDoMenuRequestClose();\n      this.props.onLabelMenuItemSelect(label);\n    };\n\n    this.onLabelUpdate = (data, label) => {\n      this.props.handleToDoMenuRequestClose();\n      this.props.onLabelUpdate({\n        data,\n        label\n      });\n    };\n\n    this.onToDoUpdate = data => {\n      this.props.handleToDoMenuRequestClose();\n      this.props.onToDoUpdate(data);\n    };\n\n    this.onMarkAsStart = data => {\n      this.props.onMarkAsStart(data);\n    };\n\n    this.onDeleteToDo = data => {\n      this.props.onDeleteToDo(data);\n    };\n\n    this.onSearchTodo = searchText => {\n      this.props.onSearchTodo(searchText);\n    };\n\n    this.onTodoChecked = data => {\n      this.props.onTodoChecked(data);\n    };\n\n    this.onAllTodoSelect = () => {\n      const selectAll = this.props.selectedToDos < this.props.toDos.length;\n\n      if (selectAll) {\n        this.props.selectAllTodo();\n      } else {\n        this.props.getUnselectedAllTodo();\n      }\n    };\n\n    this.onTodoAdd = data => {\n      this.props.onTodoAdd(data);\n    };\n\n    this.onTodoSelect = todo => {\n      this.props.onTodoSelect(todo);\n      setTimeout(() => {\n        this.props.hideToDoLoader();\n      }, 1500);\n    };\n\n    this.removeLabel = (todo, label) => {\n      todo.labels.splice(todo.labels.indexOf(label), 1);\n      return todo.labels;\n    };\n\n    this.addLabel = (todo, label) => {\n      todo.labels = todo.labels.concat(label);\n      return todo.labels;\n    };\n\n    this.onToggleDrawer = () => {\n      this.props.toDoToggleDrawer();\n    };\n\n    this.updateSearch = evt => {\n      this.props.updateSearch(evt.target.value);\n      this.onSearchTodo(evt.target.value);\n    };\n\n    this.getNavFilters = () => {\n      return filters.map((filter, index) => React.createElement(\"li\", {\n        key: index,\n        onClick: () => {\n          this.props.getNavFilters(filter);\n          setTimeout(() => {\n            this.props.hideToDoLoader();\n          }, 1500);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: `jr-link ${filter.id === this.props.selectedSectionId ? 'active' : ''}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: `zmdi zmdi-${filter.icon}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, filter.title))));\n    };\n\n    this.getNavLabels = () => {\n      return labels.map((label, index) => React.createElement(\"li\", {\n        key: index,\n        onClick: () => {\n          this.props.getNavLabels(label);\n          setTimeout(() => {\n            this.props.hideToDoLoader();\n          }, 1500);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"jr-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: `zmdi zmdi-circle text-${label.color}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, label.title))));\n    };\n\n    this.ToDoSideBar = () => {\n      return React.createElement(\"div\", {\n        className: \"module-side\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"module-side-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"module-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-email mr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"sidebar.appModule.toDo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"module-side-content scrollbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(CustomScrollbars, {\n        className: \"module-side-scroll scrollbar\",\n        style: {\n          height: this.props.width >= 1200 ? 'calc(100vh - 200px)' : 'calc(100vh - 80px)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"module-add-task\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: \"btn btn-primary btn-block\",\n        onClick: () => {\n          this.setState({\n            addTodo: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \" \", React.createElement(IntlMessages, {\n        id: \"todo.addTask\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), \" \")), React.createElement(\"ul\", {\n        className: \"module-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        onClick: () => {\n          this.props.getAllTodo();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"jr-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"todo.all\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      })))), React.createElement(\"li\", {\n        className: \"module-nav-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"todo.filters\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      })), this.getNavFilters(), React.createElement(\"li\", {\n        className: \"module-nav-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"todo.labels\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      })), this.getNavLabels()))));\n    };\n\n    this.showToDos = ({\n      currentTodo,\n      toDos,\n      conversation,\n      user\n    }) => {\n      return currentTodo === null ? React.createElement(ToDoList, {\n        toDos: toDos,\n        onSortEnd: this.onSortEnd,\n        onTodoSelect: this.onTodoSelect.bind(this),\n        width: this.props.width,\n        onMarkAsStart: this.onMarkAsStart.bind(this),\n        onTodoChecked: this.onTodoChecked.bind(this),\n        useDragHandle: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }) : React.createElement(ToDoDetail, {\n        todo: currentTodo,\n        user: user,\n        conversation: conversation,\n        onLabelUpdate: this.onLabelUpdate.bind(this),\n        width: this.props.width,\n        onToDoUpdate: this.onToDoUpdate.bind(this),\n        onDeleteToDo: this.onDeleteToDo.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      });\n    };\n\n    this.state = {\n      anchorEl: null\n    };\n  }\n\n  componentWillMount() {\n    this.props.fetchTodo();\n    this.props.fetchTodoConversation();\n  }\n\n  render() {\n    const {\n      selectedToDos,\n      loader,\n      toDos,\n      alertMessage,\n      showMessage\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"app-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"animated slideInUpTiny animation-duration-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"app-module\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-block d-xl-none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(Drawer, {\n      open: this.props.drawerState,\n      onClose: this.onToggleDrawer.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, this.ToDoSideBar())), React.createElement(\"div\", {\n      className: \"app-module-sidenav d-none d-xl-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, this.ToDoSideBar()), React.createElement(\"div\", {\n      className: \"module-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"module-box-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: \"drawer-btn d-block d-xl-none\",\n      \"aria-label\": \"Menu\",\n      onClick: this.onToggleDrawer.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"zmdi zmdi-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    })), React.createElement(AppModuleHeader, {\n      placeholder: \"Search To Do\",\n      user: this.props.user,\n      onChange: this.updateSearch.bind(this),\n      value: this.props.searchTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"module-box-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, this.props.currentTodo === null ? React.createElement(\"div\", {\n      className: \"module-box-topbar module-box-topbar-todo d-flex flex-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      color: \"primary\",\n      indeterminate: selectedToDos > 0 && selectedToDos < toDos.length,\n      checked: selectedToDos > 0,\n      onChange: this.onAllTodoSelect.bind(this),\n      value: \"SelectMail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"d-flex align-items-center\",\n      onClick: this.onOptionMenuSelect.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"px-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, \" \", this.props.optionName), React.createElement(IconButton, {\n      className: \"icon-btn-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"zmdi zmdi-caret-down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }))), selectedToDos > 0 && React.createElement(IconButton, {\n      className: \"icon-btn\",\n      onClick: this.onLabelSelect.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"zmdi zmdi-label-alt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }))) : React.createElement(\"div\", {\n      className: \"module-box-topbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: \"icon-btn\",\n      onClick: () => {\n        this.props.setCurrentToDoNull();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"zmdi zmdi-arrow-back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }))), React.createElement(Menu, {\n      id: \"option-menu\",\n      anchorEl: this.state.anchorEl,\n      open: this.props.optionMenuState,\n      onClose: this.props.handleToDoMenuRequestClose,\n      MenuListProps: {\n        style: {\n          width: 150\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, options.map(option => React.createElement(MenuItem, {\n      key: option.title,\n      onClick: this.onOptionMenuItemSelect.bind(this, option),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, option.title))), React.createElement(Menu, {\n      id: \"label-menu\",\n      anchorEl: this.state.anchorEl,\n      open: this.props.labelMenuState,\n      onClose: this.props.handleToDoMenuRequestClose,\n      MenuListProps: {\n        style: {\n          width: 150\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, labels.map(label => React.createElement(MenuItem, {\n      key: label.id,\n      onClick: this.onLabelMenuItemSelect.bind(this, label),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, label.title))), loader ? React.createElement(\"div\", {\n      className: \"loader-view\",\n      style: {\n        height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    })) : this.showToDos(this.props)))), React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      open: showMessage,\n      autoHideDuration: 3000,\n      onClose: this.handleRequestClose,\n      ContentProps: {\n        'aria-describedby': 'message-id'\n      },\n      message: React.createElement(\"span\", {\n        id: \"message-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, alertMessage),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = ({\n  toDo,\n  settings\n}) => {\n  const {\n    width\n  } = settings;\n  const {\n    searchTodo,\n    alertMessage,\n    loader,\n    showMessage,\n    drawerState,\n    allToDos,\n    optionName,\n    currentTodo,\n    user,\n    selectedToDos,\n    labelMenuState,\n    optionMenuState,\n    toDos,\n    filter,\n    todoConversation,\n    conversation\n  } = toDo;\n  return {\n    width,\n    searchTodo,\n    alertMessage,\n    loader,\n    showMessage,\n    drawerState,\n    allToDos,\n    optionName,\n    currentTodo,\n    user,\n    selectedToDos,\n    labelMenuState,\n    optionMenuState,\n    toDos,\n    filter,\n    todoConversation,\n    conversation\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAllTodo,\n  fetchTodo,\n  fetchTodoConversation,\n  getImportantToDo,\n  getNavFilters,\n  getNavLabels,\n  getStarredToDo,\n  getUnimportantToDo,\n  getUnselectedAllTodo,\n  getUnStarredTodo,\n  handleToDoMenuRequestClose,\n  hideToDoLoader,\n  onDeleteToDo,\n  onLabelMenuItemSelect,\n  onLabelSelect,\n  onLabelUpdate,\n  onOptionMenuSelect,\n  onSearchTodo,\n  onSortEnd,\n  onTodoAdd,\n  onTodoChecked,\n  onTodoSelect,\n  onToDoUpdate,\n  onMarkAsStart,\n  selectAllTodo,\n  setCurrentToDoNull,\n  toDoToggleDrawer,\n  updateSearch\n})(ToDoWithRedux);","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/todo/redux/index.js"],"names":["React","Component","connect","Drawer","Button","Snackbar","Checkbox","IconButton","Menu","MenuItem","filters","labels","options","ToDoList","ToDoDetail","AppModuleHeader","CircularProgress","fetchTodo","fetchTodoConversation","getAllTodo","getImportantToDo","getNavFilters","getNavLabels","getStarredToDo","getUnimportantToDo","getUnselectedAllTodo","getUnStarredTodo","handleToDoMenuRequestClose","hideToDoLoader","onDeleteToDo","onLabelMenuItemSelect","onLabelSelect","onLabelUpdate","onMarkAsStart","onOptionMenuSelect","onSearchTodo","onSortEnd","onTodoAdd","onTodoChecked","onTodoSelect","onToDoUpdate","selectAllTodo","setCurrentToDoNull","toDoToggleDrawer","updateSearch","IntlMessages","CustomScrollbars","ToDoWithRedux","constructor","oldIndex","newIndex","props","event","setState","anchorEl","currentTarget","handleRequestClose","onOptionMenuItemSelect","option","title","label","data","searchText","onAllTodoSelect","selectAll","selectedToDos","toDos","length","todo","setTimeout","removeLabel","splice","indexOf","addLabel","concat","onToggleDrawer","evt","target","value","map","filter","index","id","selectedSectionId","icon","color","ToDoSideBar","height","width","addTodo","showToDos","currentTodo","conversation","user","bind","state","componentWillMount","render","loader","alertMessage","showMessage","drawerState","searchTodo","optionName","optionMenuState","style","labelMenuState","vertical","horizontal","mapStateToProps","toDo","settings","allToDos","todoConversation"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport filters from '../data/filters';\nimport labels from '../data/labels';\nimport options from '../data/options';\nimport ToDoList from 'components/todo/ToDoList';\nimport ToDoDetail from 'components/todo/ToDoDetail/index';\nimport AppModuleHeader from 'components/AppModuleHeader/index';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {\n  fetchTodo,\n  fetchTodoConversation,\n  getAllTodo,\n  getImportantToDo,\n  getNavFilters,\n  getNavLabels,\n  getStarredToDo,\n  getUnimportantToDo,\n  getUnselectedAllTodo,\n  getUnStarredTodo,\n  handleToDoMenuRequestClose,\n  hideToDoLoader,\n  onDeleteToDo,\n  onLabelMenuItemSelect,\n  onLabelSelect,\n  onLabelUpdate,\n  onMarkAsStart,\n  onOptionMenuSelect,\n  onSearchTodo,\n  onSortEnd,\n  onTodoAdd,\n  onTodoChecked,\n  onTodoSelect,\n  onToDoUpdate,\n  selectAllTodo,\n  setCurrentToDoNull,\n  toDoToggleDrawer,\n  updateSearch\n} from 'actions/ToDo';\nimport IntlMessages from 'util/IntlMessages';\nimport CustomScrollbars from 'util/CustomScrollbars';\n\n\nclass ToDoWithRedux extends Component {\n  onSortEnd = ({oldIndex, newIndex}) => {\n    this.props.onSortEnd({oldIndex, newIndex});\n  };\n  onLabelSelect = event => {\n    this.props.onLabelSelect();\n    this.setState({\n      anchorEl: event.currentTarget,\n    })\n  };\n  onOptionMenuSelect = event => {\n    this.props.onOptionMenuSelect();\n    this.setState({\n      anchorEl: event.currentTarget,\n    })\n  };\n  handleRequestClose = event => {\n    this.props.handleToDoMenuRequestClose();\n  };\n\n  onOptionMenuItemSelect = (option) => {\n    switch (option.title) {\n      case 'All':\n        this.props.handleToDoMenuRequestClose();\n        this.props.selectAllTodo();\n        break;\n      case 'None':\n        this.props.handleToDoMenuRequestClose();\n        this.props.getUnselectedAllTodo();\n        break;\n      case 'Starred':\n        this.props.handleToDoMenuRequestClose();\n        this.props.getStarredToDo();\n        break;\n      case 'Unstarred':\n        this.props.handleToDoMenuRequestClose();\n        this.props.getUnStarredTodo();\n        break;\n      case 'Important':\n        this.props.handleToDoMenuRequestClose();\n        this.props.getImportantToDo();\n        break;\n      case 'Unimportant':\n        this.props.handleToDoMenuRequestClose();\n        this.props.getUnimportantToDo();\n        break;\n      default:\n        this.props.handleToDoMenuRequestClose();\n        this.props.selectAllTodo();\n    }\n  };\n  onLabelMenuItemSelect = (label) => {\n    this.props.handleToDoMenuRequestClose();\n    this.props.onLabelMenuItemSelect(label);\n\n  };\n  onLabelUpdate = (data, label) => {\n    this.props.handleToDoMenuRequestClose();\n    this.props.onLabelUpdate({data, label});\n  };\n  onToDoUpdate = (data) => {\n    this.props.handleToDoMenuRequestClose();\n    this.props.onToDoUpdate(data);\n  };\n  onMarkAsStart = (data) => {\n    this.props.onMarkAsStart(data);\n  };\n\n\n  onDeleteToDo = (data) => {\n    this.props.onDeleteToDo(data);\n  };\n\n  onSearchTodo = (searchText) => {\n    this.props.onSearchTodo(searchText);\n  };\n\n  onTodoChecked = (data) => {\n    this.props.onTodoChecked(data);\n  };\n\n  onAllTodoSelect = () => {\n    const selectAll = this.props.selectedToDos < this.props.toDos.length;\n    if (selectAll) {\n      this.props.selectAllTodo();\n    } else {\n      this.props.getUnselectedAllTodo();\n    }\n  };\n\n  onTodoAdd = (data) => {\n    this.props.onTodoAdd(data);\n  };\n\n  onTodoSelect = (todo) => {\n    this.props.onTodoSelect(todo);\n    setTimeout(() => {\n      this.props.hideToDoLoader();\n    }, 1500);\n  };\n\n  removeLabel = (todo, label) => {\n    todo.labels.splice(todo.labels.indexOf(label), 1);\n    return todo.labels;\n  };\n\n  addLabel = (todo, label) => {\n    todo.labels = todo.labels.concat(label);\n    return todo.labels\n  };\n\n  onToggleDrawer = () => {\n    this.props.toDoToggleDrawer();\n  };\n\n  updateSearch = (evt) => {\n    this.props.updateSearch(evt.target.value);\n    this.onSearchTodo(evt.target.value)\n  };\n  getNavFilters = () => {\n    return filters.map((filter, index) =>\n      <li key={index} onClick={() => {\n        this.props.getNavFilters(filter);\n        setTimeout(() => {\n          this.props.hideToDoLoader();\n        }, 1500);\n      }\n      }>\n        <span className={`jr-link ${filter.id === this.props.selectedSectionId ? 'active' : ''}`}>\n          <i className={`zmdi zmdi-${filter.icon}`}/>\n          <span>{filter.title}</span>\n        </span>\n      </li>\n    )\n  };\n  getNavLabels = () => {\n    return labels.map((label, index) =>\n      <li key={index} onClick={() => {\n        this.props.getNavLabels(label);\n        setTimeout(() => {\n          this.props.hideToDoLoader();\n        }, 1500);\n      }\n      }>\n        <span className=\"jr-link\">\n          <i className={`zmdi zmdi-circle text-${label.color}`}/>\n          <span>{label.title}</span>\n        </span>\n      </li>\n    )\n  };\n  ToDoSideBar = () => {\n    return <div className=\"module-side\">\n      <div className=\"module-side-header\">\n        <div className=\"module-logo\">\n          <i className=\"zmdi zmdi-email mr-4\"/>\n          <span><IntlMessages id=\"sidebar.appModule.toDo\"/></span>\n        </div>\n\n      </div>\n      <div className=\"module-side-content scrollbar\">\n        <CustomScrollbars className=\"module-side-scroll scrollbar\"\n                          style={{height: this.props.width >= 1200 ? 'calc(100vh - 200px)' : 'calc(100vh - 80px)'}}>\n          <div className=\"module-add-task\">\n            <Button variant=\"contained\" color=\"primary\" className=\"btn btn-primary btn-block\" onClick={() => {\n              this.setState({addTodo: true})\n            }}> <IntlMessages id=\"todo.addTask\"/> </Button>\n          </div>\n          <ul className=\"module-nav\">\n\n            <li onClick={() => {\n              this.props.getAllTodo();\n            }\n            }>\n              <span className=\"jr-link\">\n                <i className=\"zmdi zmdi-menu\"/>\n                <span><IntlMessages id=\"todo.all\"/></span>\n              </span>\n            </li>\n\n            <li className=\"module-nav-label\">\n              <IntlMessages id=\"todo.filters\"/>\n            </li>\n\n            {this.getNavFilters()}\n\n            <li className=\"module-nav-label\">\n              <IntlMessages id=\"todo.labels\"/>\n            </li>\n\n            {this.getNavLabels()}\n\n          </ul>\n        </CustomScrollbars>\n      </div>\n    </div>\n  };\n  showToDos = ({currentTodo, toDos, conversation, user}) => {\n    return currentTodo === null ?\n      <ToDoList toDos={toDos} onSortEnd={this.onSortEnd}\n                onTodoSelect={this.onTodoSelect.bind(this)}\n                width={this.props.width}\n                onMarkAsStart={this.onMarkAsStart.bind(this)}\n                onTodoChecked={this.onTodoChecked.bind(this)} useDragHandle={true}/>\n      :\n      <ToDoDetail todo={currentTodo} user={user}\n                  conversation={conversation}\n                  onLabelUpdate={this.onLabelUpdate.bind(this)}\n                  width={this.props.width}\n                  onToDoUpdate={this.onToDoUpdate.bind(this)}\n                  onDeleteToDo={this.onDeleteToDo.bind(this)}/>;\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      anchorEl: null\n    }\n  }\n\n  componentWillMount() {\n    this.props.fetchTodo();\n    this.props.fetchTodoConversation();\n  }\n\n  render() {\n    const {selectedToDos, loader, toDos, alertMessage, showMessage} = this.props;\n\n    return (\n      <div className=\"app-wrapper\">\n        <div className=\"animated slideInUpTiny animation-duration-3\">\n          <div className=\"app-module\">\n            <div className=\"d-block d-xl-none\">\n              <Drawer\n                open={this.props.drawerState}\n                onClose={this.onToggleDrawer.bind(this)}>\n                {this.ToDoSideBar()}\n              </Drawer>\n            </div>\n            <div className=\"app-module-sidenav d-none d-xl-flex\">\n              {this.ToDoSideBar()}\n            </div>\n\n            <div className=\"module-box\">\n              <div className=\"module-box-header\">\n\n                <IconButton className=\"drawer-btn d-block d-xl-none\" aria-label=\"Menu\"\n                            onClick={this.onToggleDrawer.bind(this)}>\n                  <i className=\"zmdi zmdi-menu\"/>\n                </IconButton>\n                <AppModuleHeader placeholder=\"Search To Do\" user={this.props.user}\n                                 onChange={this.updateSearch.bind(this)}\n                                 value={this.props.searchTodo}/>\n              </div>\n              <div className=\"module-box-content\">\n                {this.props.currentTodo === null ?\n                  <div className=\"module-box-topbar module-box-topbar-todo d-flex flex-row\">\n                    <Checkbox color=\"primary\"\n                              indeterminate={selectedToDos > 0 && selectedToDos < toDos.length}\n                              checked={selectedToDos > 0}\n                              onChange={this.onAllTodoSelect.bind(this)}\n                              value=\"SelectMail\"/>\n\n                    <div className=\"d-flex align-items-center\" onClick={this.onOptionMenuSelect.bind(this)}>\n                      <span className=\"px-2\"> {this.props.optionName}</span>\n                      <IconButton className=\"icon-btn-sm\">\n                        <i className=\"zmdi zmdi-caret-down\"/>\n                      </IconButton>\n                    </div>\n\n                    {(selectedToDos > 0) &&\n                    <IconButton className=\"icon-btn\"\n                                onClick={this.onLabelSelect.bind(this)}>\n                      <i className=\"zmdi zmdi-label-alt\"/>\n                    </IconButton>}\n                  </div>\n                  :\n                  <div className=\"module-box-topbar\">\n                    <IconButton className=\"icon-btn\"\n                                onClick={() => {\n                                  this.props.setCurrentToDoNull();\n                                }}>\n                      <i className=\"zmdi zmdi-arrow-back\"/>\n                    </IconButton>\n                  </div>\n                }\n\n\n                <Menu id=\"option-menu\"\n                      anchorEl={this.state.anchorEl}\n                      open={this.props.optionMenuState}\n                      onClose={this.props.handleToDoMenuRequestClose}\n                      MenuListProps={{\n                        style: {\n                          width: 150,\n                        },\n                      }}>\n                  {options.map(option =>\n                    <MenuItem key={option.title}\n                              onClick={this.onOptionMenuItemSelect.bind(this, option)}>\n                      {option.title}\n                    </MenuItem>,\n                  )}\n                </Menu>\n\n                <Menu id=\"label-menu\"\n                      anchorEl={this.state.anchorEl}\n                      open={this.props.labelMenuState}\n                      onClose={this.props.handleToDoMenuRequestClose}\n                      MenuListProps={{\n                        style: {\n                          width: 150,\n                        },\n                      }}>\n                  {labels.map(label =>\n                    <MenuItem key={label.id}\n                              onClick={this.onLabelMenuItemSelect.bind(this, label)}>\n                      {label.title}\n                    </MenuItem>,\n                  )}\n                </Menu>\n\n                {loader ?\n                  <div className=\"loader-view\"\n                       style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\n                    <CircularProgress/>\n                  </div> :\n                  this.showToDos(this.props)\n                }\n              </div>\n            </div>\n          </div>\n          <Snackbar\n            anchorOrigin={{vertical: 'top', horizontal: 'center'}}\n            open={showMessage}\n            autoHideDuration={3000}\n            onClose={this.handleRequestClose}\n            ContentProps={{\n              'aria-describedby': 'message-id',\n            }}\n            message={<span id=\"message-id\">{alertMessage}</span>}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({toDo, settings}) => {\n  const {width} = settings;\n  const {\n    searchTodo,\n    alertMessage,\n    loader,\n    showMessage,\n    drawerState,\n    allToDos,\n    optionName,\n    currentTodo,\n    user,\n    selectedToDos,\n    labelMenuState,\n    optionMenuState,\n    toDos,\n    filter,\n    todoConversation,\n    conversation\n  } = toDo;\n  return {\n    width,\n    searchTodo,\n    alertMessage,\n    loader,\n    showMessage,\n    drawerState,\n    allToDos,\n    optionName,\n    currentTodo,\n    user,\n    selectedToDos,\n    labelMenuState,\n    optionMenuState,\n    toDos,\n    filter,\n    todoConversation,\n    conversation\n  }\n};\n\n\nexport default connect(mapStateToProps, {\n  getAllTodo,\n  fetchTodo,\n  fetchTodoConversation,\n  getImportantToDo,\n  getNavFilters,\n  getNavLabels,\n  getStarredToDo,\n  getUnimportantToDo,\n  getUnselectedAllTodo,\n  getUnStarredTodo,\n  handleToDoMenuRequestClose,\n  hideToDoLoader,\n  onDeleteToDo,\n  onLabelMenuItemSelect,\n  onLabelSelect,\n  onLabelUpdate,\n  onOptionMenuSelect,\n  onSearchTodo,\n  onSortEnd,\n  onTodoAdd,\n  onTodoChecked,\n  onTodoSelect,\n  onToDoUpdate,\n  onMarkAsStart,\n  selectAllTodo,\n  setCurrentToDoNull,\n  toDoToggleDrawer,\n  updateSearch\n})(ToDoWithRedux);"]},"metadata":{},"sourceType":"module"}