{"ast":null,"code":"import { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\nimport { auth, facebookAuthProvider, githubAuthProvider, googleAuthProvider, twitterAuthProvider } from \"../firebase/firebase\";\nimport { SIGNIN_FACEBOOK_USER, SIGNIN_GITHUB_USER, SIGNIN_GOOGLE_USER, SIGNIN_TWITTER_USER, SIGNIN_USER, SIGNOUT_USER, SIGNUP_USER } from \"constants/ActionTypes\";\nimport { showAuthMessage, userSignInSuccess, userSignOutSuccess, userSignUpSuccess } from \"actions/Auth\";\nimport { userFacebookSignInSuccess, userGithubSignInSuccess, userGoogleSignInSuccess, userTwitterSignInSuccess } from \"../actions/Auth\";\n\nconst createUserWithEmailPasswordRequest = async (email, password) => await auth.createUserWithEmailAndPassword(email, password).then(authUser => authUser).catch(error => error);\n\nconst signInUserWithEmailPasswordRequest = async (email, password) => await auth.signInWithEmailAndPassword(email, password).then(authUser => authUser).catch(error => error);\n\nconst signOutRequest = async () => await auth.signOut().then(authUser => authUser).catch(error => error);\n\nconst signInUserWithGoogleRequest = async () => await auth.signInWithPopup(googleAuthProvider).then(authUser => authUser).catch(error => error);\n\nconst signInUserWithFacebookRequest = async () => await auth.signInWithPopup(facebookAuthProvider).then(authUser => authUser).catch(error => error);\n\nconst signInUserWithGithubRequest = async () => await auth.signInWithPopup(githubAuthProvider).then(authUser => authUser).catch(error => error);\n\nconst signInUserWithTwitterRequest = async () => await auth.signInWithPopup(twitterAuthProvider).then(authUser => authUser).catch(error => error);\n\nfunction* createUserWithEmailPassword({\n  payload\n}) {\n  const {\n    email,\n    password\n  } = payload;\n\n  try {\n    const signUpUser = yield call(createUserWithEmailPasswordRequest, email, password);\n\n    if (signUpUser.message) {\n      yield put(showAuthMessage(signUpUser.message));\n    } else {\n      localStorage.setItem('user_id', signUpUser.user.uid);\n      yield put(userSignUpSuccess(signUpUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\n\nfunction* signInUserWithGoogle() {\n  try {\n    const signUpUser = yield call(signInUserWithGoogleRequest);\n\n    if (signUpUser.message) {\n      yield put(showAuthMessage(signUpUser.message));\n    } else {\n      localStorage.setItem('user_id', signUpUser.user.uid);\n      yield put(userGoogleSignInSuccess(signUpUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\n\nfunction* signInUserWithFacebook() {\n  try {\n    const signUpUser = yield call(signInUserWithFacebookRequest);\n\n    if (signUpUser.message) {\n      yield put(showAuthMessage(signUpUser.message));\n    } else {\n      localStorage.setItem('user_id', signUpUser.user.uid);\n      yield put(userFacebookSignInSuccess(signUpUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\n\nfunction* signInUserWithGithub() {\n  try {\n    const signUpUser = yield call(signInUserWithGithubRequest);\n\n    if (signUpUser.message) {\n      yield put(showAuthMessage(signUpUser.message));\n    } else {\n      localStorage.setItem('user_id', signUpUser.user.uid);\n      yield put(userGithubSignInSuccess(signUpUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\n\nfunction* signInUserWithTwitter() {\n  try {\n    const signUpUser = yield call(signInUserWithTwitterRequest);\n\n    if (signUpUser.message) {\n      if (signUpUser.message.length > 100) {\n        yield put(showAuthMessage('Your request has been canceled.'));\n      } else {\n        yield put(showAuthMessage(signUpUser.message));\n      }\n    } else {\n      localStorage.setItem('user_id', signUpUser.user.uid);\n      yield put(userTwitterSignInSuccess(signUpUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\n\nfunction* signInUserWithEmailPassword({\n  payload\n}) {\n  const {\n    email,\n    password\n  } = payload;\n\n  try {\n    const signInUser = yield call(signInUserWithEmailPasswordRequest, email, password);\n\n    if (signInUser.message) {\n      yield put(showAuthMessage(signInUser.message));\n    } else {\n      localStorage.setItem('user_id', signInUser.user.uid);\n      yield put(userSignInSuccess(signInUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\n\nfunction* signOut() {\n  try {\n    const signOutUser = yield call(signOutRequest);\n\n    if (signOutUser === undefined) {\n      localStorage.removeItem('user_id');\n      yield put(userSignOutSuccess(signOutUser));\n    } else {\n      yield put(showAuthMessage(signOutUser.message));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\n\nexport function* createUserAccount() {\n  yield takeEvery(SIGNUP_USER, createUserWithEmailPassword);\n}\nexport function* signInWithGoogle() {\n  yield takeEvery(SIGNIN_GOOGLE_USER, signInUserWithGoogle);\n}\nexport function* signInWithFacebook() {\n  yield takeEvery(SIGNIN_FACEBOOK_USER, signInUserWithFacebook);\n}\nexport function* signInWithTwitter() {\n  yield takeEvery(SIGNIN_TWITTER_USER, signInUserWithTwitter);\n}\nexport function* signInWithGithub() {\n  yield takeEvery(SIGNIN_GITHUB_USER, signInUserWithGithub);\n}\nexport function* signInUser() {\n  yield takeEvery(SIGNIN_USER, signInUserWithEmailPassword);\n}\nexport function* signOutUser() {\n  yield takeEvery(SIGNOUT_USER, signOut);\n}\nexport default function* rootSaga() {\n  yield all([fork(signInUser), fork(createUserAccount), fork(signInWithGoogle), fork(signInWithFacebook), fork(signInWithTwitter), fork(signInWithGithub), fork(signOutUser)]);\n}","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/sagas/Auth.js"],"names":["all","call","fork","put","takeEvery","auth","facebookAuthProvider","githubAuthProvider","googleAuthProvider","twitterAuthProvider","SIGNIN_FACEBOOK_USER","SIGNIN_GITHUB_USER","SIGNIN_GOOGLE_USER","SIGNIN_TWITTER_USER","SIGNIN_USER","SIGNOUT_USER","SIGNUP_USER","showAuthMessage","userSignInSuccess","userSignOutSuccess","userSignUpSuccess","userFacebookSignInSuccess","userGithubSignInSuccess","userGoogleSignInSuccess","userTwitterSignInSuccess","createUserWithEmailPasswordRequest","email","password","createUserWithEmailAndPassword","then","authUser","catch","error","signInUserWithEmailPasswordRequest","signInWithEmailAndPassword","signOutRequest","signOut","signInUserWithGoogleRequest","signInWithPopup","signInUserWithFacebookRequest","signInUserWithGithubRequest","signInUserWithTwitterRequest","createUserWithEmailPassword","payload","signUpUser","message","localStorage","setItem","user","uid","signInUserWithGoogle","signInUserWithFacebook","signInUserWithGithub","signInUserWithTwitter","length","signInUserWithEmailPassword","signInUser","signOutUser","undefined","removeItem","createUserAccount","signInWithGoogle","signInWithFacebook","signInWithTwitter","signInWithGithub","rootSaga"],"mappings":"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","sourcesContent":["import {all, call, fork, put, takeEvery} from \"redux-saga/effects\";\nimport {\n  auth,\n  facebookAuthProvider,\n  githubAuthProvider,\n  googleAuthProvider,\n  twitterAuthProvider\n} from \"../firebase/firebase\";\nimport {\n  SIGNIN_FACEBOOK_USER,\n  SIGNIN_GITHUB_USER,\n  SIGNIN_GOOGLE_USER,\n  SIGNIN_TWITTER_USER,\n  SIGNIN_USER,\n  SIGNOUT_USER,\n  SIGNUP_USER\n} from \"constants/ActionTypes\";\nimport {showAuthMessage, userSignInSuccess, userSignOutSuccess, userSignUpSuccess} from \"actions/Auth\";\nimport {\n  userFacebookSignInSuccess,\n  userGithubSignInSuccess,\n  userGoogleSignInSuccess,\n  userTwitterSignInSuccess\n} from \"../actions/Auth\";\n\nconst createUserWithEmailPasswordRequest = async (email, password) =>\n  await  auth.createUserWithEmailAndPassword(email, password)\n    .then(authUser => authUser)\n    .catch(error => error);\n\nconst signInUserWithEmailPasswordRequest = async (email, password) =>\n  await  auth.signInWithEmailAndPassword(email, password)\n    .then(authUser => authUser)\n    .catch(error => error);\n\nconst signOutRequest = async () =>\n  await  auth.signOut()\n    .then(authUser => authUser)\n    .catch(error => error);\n\n\nconst signInUserWithGoogleRequest = async () =>\n  await  auth.signInWithPopup(googleAuthProvider)\n    .then(authUser => authUser)\n    .catch(error => error);\n\nconst signInUserWithFacebookRequest = async () =>\n  await  auth.signInWithPopup(facebookAuthProvider)\n    .then(authUser => authUser)\n    .catch(error => error);\n\nconst signInUserWithGithubRequest = async () =>\n  await  auth.signInWithPopup(githubAuthProvider)\n    .then(authUser => authUser)\n    .catch(error => error);\n\nconst signInUserWithTwitterRequest = async () =>\n  await  auth.signInWithPopup(twitterAuthProvider)\n    .then(authUser => authUser)\n    .catch(error => error);\n\nfunction* createUserWithEmailPassword({payload}) {\n  const {email, password} = payload;\n  try {\n    const signUpUser = yield call(createUserWithEmailPasswordRequest, email, password);\n    if (signUpUser.message) {\n      yield put(showAuthMessage(signUpUser.message));\n    } else {\n      localStorage.setItem('user_id', signUpUser.user.uid);\n      yield put(userSignUpSuccess(signUpUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\n\nfunction* signInUserWithGoogle() {\n  try {\n    const signUpUser = yield call(signInUserWithGoogleRequest);\n    if (signUpUser.message) {\n      yield put(showAuthMessage(signUpUser.message));\n    } else {\n      localStorage.setItem('user_id', signUpUser.user.uid);\n      yield put(userGoogleSignInSuccess(signUpUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\n\n\nfunction* signInUserWithFacebook() {\n  try {\n    const signUpUser = yield call(signInUserWithFacebookRequest);\n    if (signUpUser.message) {\n      yield put(showAuthMessage(signUpUser.message));\n    } else {\n      localStorage.setItem('user_id', signUpUser.user.uid);\n      yield put(userFacebookSignInSuccess(signUpUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\n\n\nfunction* signInUserWithGithub() {\n  try {\n    const signUpUser = yield call(signInUserWithGithubRequest);\n    if (signUpUser.message) {\n      yield put(showAuthMessage(signUpUser.message));\n    } else {\n      localStorage.setItem('user_id', signUpUser.user.uid);\n      yield put(userGithubSignInSuccess(signUpUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\n\n\nfunction* signInUserWithTwitter() {\n  try {\n    const signUpUser = yield call(signInUserWithTwitterRequest);\n    if (signUpUser.message) {\n      if (signUpUser.message.length > 100) {\n        yield put(showAuthMessage('Your request has been canceled.'));\n      } else {\n        yield put(showAuthMessage(signUpUser.message));\n      }\n    } else {\n      localStorage.setItem('user_id', signUpUser.user.uid);\n      yield put(userTwitterSignInSuccess(signUpUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\n\nfunction* signInUserWithEmailPassword({payload}) {\n  const {email, password} = payload;\n  try {\n    const signInUser = yield call(signInUserWithEmailPasswordRequest, email, password);\n    if (signInUser.message) {\n      yield put(showAuthMessage(signInUser.message));\n    } else {\n      localStorage.setItem('user_id', signInUser.user.uid);\n      yield put(userSignInSuccess(signInUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\n\nfunction* signOut() {\n  try {\n    const signOutUser = yield call(signOutRequest);\n    if (signOutUser === undefined) {\n      localStorage.removeItem('user_id');\n      yield put(userSignOutSuccess(signOutUser));\n    } else {\n      yield put(showAuthMessage(signOutUser.message));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\n\nexport function* createUserAccount() {\n  yield takeEvery(SIGNUP_USER, createUserWithEmailPassword);\n}\n\nexport function* signInWithGoogle() {\n  yield takeEvery(SIGNIN_GOOGLE_USER, signInUserWithGoogle);\n}\n\nexport function* signInWithFacebook() {\n  yield takeEvery(SIGNIN_FACEBOOK_USER, signInUserWithFacebook);\n}\n\nexport function* signInWithTwitter() {\n  yield takeEvery(SIGNIN_TWITTER_USER, signInUserWithTwitter);\n}\n\nexport function* signInWithGithub() {\n  yield takeEvery(SIGNIN_GITHUB_USER, signInUserWithGithub);\n}\n\nexport function* signInUser() {\n  yield takeEvery(SIGNIN_USER, signInUserWithEmailPassword);\n}\n\nexport function* signOutUser() {\n  yield takeEvery(SIGNOUT_USER, signOut);\n}\n\nexport default function* rootSaga() {\n  yield all([fork(signInUser),\n    fork(createUserAccount),\n    fork(signInWithGoogle),\n    fork(signInWithFacebook),\n    fork(signInWithTwitter),\n    fork(signInWithGithub),\n    fork(signOutUser)]);\n}"]},"metadata":{},"sourceType":"module"}