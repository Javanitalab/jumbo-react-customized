{"ast":null,"code":"import React from'react';import{withStyles}from'@material-ui/core/styles';import Table from'@material-ui/core/Table';import TableBody from'@material-ui/core/TableBody';import TableCell from'@material-ui/core/TableCell';import TableHead from'@material-ui/core/TableHead';import TableRow from'@material-ui/core/TableRow';import Paper from'@material-ui/core/Paper';var CustomTableCell=withStyles(function(theme){return{head:{backgroundColor:theme.palette.common.black,color:theme.palette.common.white},body:{fontSize:14}};})(TableCell);var styles=function styles(theme){return{root:{width:'100%',marginTop:theme.spacing.unit*3,overflowX:'auto'},table:{minWidth:700},row:{'&:nth-of-type(odd)':{backgroundColor:theme.palette.background.default}}};};var id=0;function createData(name,calories,fat,carbs,protein){id+=1;return{id:id,name:name,calories:calories,fat:fat,carbs:carbs,protein:protein};}var data=[createData('Frozen yoghurt',159,6.0,24,4.0),createData('Ice cream sandwich',237,9.0,37,4.3),createData('Eclair',262,16.0,24,6.0),createData('Cupcake',305,3.7,67,4.3),createData('Gingerbread',356,16.0,49,3.9)];function CustomizedTable(props){var classes=props.classes;return React.createElement(Paper,{className:classes.root},React.createElement(Table,{className:classes.table},React.createElement(TableHead,null,React.createElement(TableRow,null,React.createElement(CustomTableCell,null,\"Dessert (100g serving)\"),React.createElement(CustomTableCell,{align:\"right\"},\"Calories\"),React.createElement(CustomTableCell,{align:\"right\"},\"Fat (g)\"),React.createElement(CustomTableCell,{align:\"right\"},\"Carbs (g)\"),React.createElement(CustomTableCell,{align:\"right\"},\"Protein (g)\"))),React.createElement(TableBody,null,data.map(function(n){return React.createElement(TableRow,{className:classes.row,key:n.id},React.createElement(CustomTableCell,null,n.name),React.createElement(CustomTableCell,{align:\"right\"},n.calories),React.createElement(CustomTableCell,{align:\"right\"},n.fat),React.createElement(CustomTableCell,{align:\"right\"},n.carbs),React.createElement(CustomTableCell,{align:\"right\"},n.protein));}))));}export default withStyles(styles)(CustomizedTable);","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/table/routes/data/Components/CustomizedTable.js"],"names":["React","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","CustomTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","styles","root","width","marginTop","spacing","unit","overflowX","table","minWidth","row","background","default","id","createData","name","calories","fat","carbs","protein","data","CustomizedTable","props","classes","map","n"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n  row: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n});\n\nlet id = 0;\n\nfunction createData(name, calories, fat, carbs, protein) {\n  id += 1;\n  return {id, name, calories, fat, carbs, protein};\n}\n\nconst data = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nfunction CustomizedTable(props) {\n  const {classes} = props;\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <CustomTableCell>Dessert (100g serving)</CustomTableCell>\n            <CustomTableCell align=\"right\">Calories</CustomTableCell>\n            <CustomTableCell align=\"right\">Fat (g)</CustomTableCell>\n            <CustomTableCell align=\"right\">Carbs (g)</CustomTableCell>\n            <CustomTableCell align=\"right\">Protein (g)</CustomTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map(n => {\n            return (\n              <TableRow className={classes.row} key={n.id}>\n                <CustomTableCell>{n.name}</CustomTableCell>\n                <CustomTableCell align=\"right\">{n.calories}</CustomTableCell>\n                <CustomTableCell align=\"right\">{n.fat}</CustomTableCell>\n                <CustomTableCell align=\"right\">{n.carbs}</CustomTableCell>\n                <CustomTableCell align=\"right\">{n.protein}</CustomTableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\nCustomizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CustomizedTable);"]},"metadata":{},"sourceType":"module"}