{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/extensions/routes/dragnDrop/index.js\";\nimport React, { Component } from 'react';\nimport ContactCell from './ContactCell/index';\nimport contacts from 'app/routes/contact/data/contactList';\nimport { arrayMove, SortableContainer } from 'react-sortable-hoc';\nimport ContainerHeader from 'components/ContainerHeader/index';\nimport IntlMessages from 'util/IntlMessages';\nconst Contacts = SortableContainer(({\n  contacts\n}) => {\n  return React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, contacts.map((contact, index) => React.createElement(ContactCell, {\n    key: index,\n    index: index,\n    contact: contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  })));\n});\n\nclass DragNDrop extends Component {\n  constructor() {\n    super();\n\n    this.onSortEnd = ({\n      oldIndex,\n      newIndex\n    }) => {\n      this.setState({\n        contacts: arrayMove(this.state.contacts, oldIndex, newIndex)\n      });\n    };\n\n    this.state = {\n      contacts: contacts\n    };\n  }\n\n  render() {\n    const {\n      contacts\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(ContainerHeader, {\n      title: React.createElement(IntlMessages, {\n        id: \"sidebar.extensions.dragNDrop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }),\n      match: this.props.match,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"animated slideInUpTiny animation-duration-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Contacts, {\n      contacts: contacts,\n      onSortEnd: this.onSortEnd,\n      useDragHandle: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default DragNDrop;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/extensions/routes/dragnDrop/index.js"],"names":["React","Component","ContactCell","contacts","arrayMove","SortableContainer","ContainerHeader","IntlMessages","Contacts","map","contact","index","DragNDrop","constructor","onSortEnd","oldIndex","newIndex","setState","state","render","props","match"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,SAAQC,SAAR,EAAmBC,iBAAnB,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AAEA,MAAMC,QAAQ,GAAGH,iBAAiB,CAAC,CAAC;AAACF,EAAAA;AAAD,CAAD,KAAgB;AACjD,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,CAACM,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KACZ,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,KAAlB;AAAyB,IAAA,KAAK,EAAEA,KAAhC;AAAuC,IAAA,OAAO,EAAED,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF;AAOD,CARiC,CAAlC;;AAWA,MAAME,SAAN,SAAwBX,SAAxB,CAAkC;AAQhCY,EAAAA,WAAW,GAAG;AACZ;;AADY,SANdC,SAMc,GANF,CAAC;AAACC,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAD,KAA0B;AACpC,WAAKC,QAAL,CAAc;AACZd,QAAAA,QAAQ,EAAEC,SAAS,CAAC,KAAKc,KAAL,CAAWf,QAAZ,EAAsBY,QAAtB,EAAgCC,QAAhC;AADP,OAAd;AAGD,KAEa;;AAEZ,SAAKE,KAAL,GAAa;AACXf,MAAAA,QAAQ,EAAEA;AADC,KAAb;AAGD;;AAEDgB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAChB,MAAAA;AAAD,QAAa,KAAKe,KAAxB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAC,8BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxB;AAA2E,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWC,KAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,6CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAElB,QAApB;AAA8B,MAAA,SAAS,EAAE,KAAKW,SAA9C;AAAyD,MAAA,aAAa,EAAE,IAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CADF;AAQD;;AAzB+B;;AA4BlC,eAAeF,SAAf","sourcesContent":["import React, {Component} from 'react';\nimport ContactCell from './ContactCell/index'\nimport contacts from 'app/routes/contact/data/contactList';\nimport {arrayMove, SortableContainer} from 'react-sortable-hoc';\n\nimport ContainerHeader from 'components/ContainerHeader/index';\nimport IntlMessages from 'util/IntlMessages';\n\nconst Contacts = SortableContainer(({contacts}) => {\n  return (\n    <div className=\"row\">\n      {contacts.map((contact, index) => (\n        <ContactCell key={index} index={index} contact={contact}/>\n      ))}\n    </div>\n  );\n});\n\n\nclass DragNDrop extends Component {\n\n  onSortEnd = ({oldIndex, newIndex}) => {\n    this.setState({\n      contacts: arrayMove(this.state.contacts, oldIndex, newIndex),\n    });\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      contacts: contacts,\n    }\n  }\n\n  render() {\n    const {contacts} = this.state;\n    return (\n      <div>\n        <ContainerHeader title={<IntlMessages id=\"sidebar.extensions.dragNDrop\"/>} match={this.props.match}/>\n        <div className=\"animated slideInUpTiny animation-duration-3\">\n          <Contacts contacts={contacts} onSortEnd={this.onSortEnd} useDragHandle={true}/>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DragNDrop\n"]},"metadata":{},"sourceType":"module"}