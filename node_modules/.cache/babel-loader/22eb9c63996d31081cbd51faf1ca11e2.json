{"ast":null,"code":"import _objectSpread from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ADD_FAVOURITE,FETCH_ALL_CONTACT_SUCCESS,FILTER_CONTACT,GET_ALL_CONTACT,GET_UNSELECTED_ALL_CONTACT,HANDLE_REQUEST_CLOSE,HIDE_CONTACT_LOADER,ON_ADD_CONTACT,ON_ALL_CONTACT_SELECT,ON_CONTACT_CLOSE,ON_CONTACT_SELECT,ON_DELETE_CONTACT,ON_DELETE_SELECTED_CONTACT,ON_FILTER_OPTION_SELECT,ON_SAVE_CONTACT,ON_TOGGLE_DRAWER,SHOW_MESSAGE,UPDATE_SEARCH_USER}from'constants/ActionTypes';import data from'app/routes/contact/data/contactList';var INIT_STATE={alertMessage:'',showMessage:false,loader:true,noContentFoundMessage:'No contact found in selected folder',selectedSectionId:1,drawerState:false,user:{name:'Robert Johnson',email:'robert.johnson@example.com',avatar:'https://via.placeholder.com/150x150'},searchUser:'',filterOption:'All contacts',// allContact: [],\n// contactList: [], //only for prod\nallContact:data,contactList:data,selectedContact:null,selectedContacts:0,addContactState:false};export default(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:INIT_STATE;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ADD_FAVOURITE:{return _objectSpread({},state,{alertMessage:action.payload.starred?'Contact removed as star':'Contact marked as star',showMessage:true,contactList:state.contactList.map(function(contact){return contact.id===action.payload.id?_objectSpread({},contact,{starred:!action.payload.starred}):contact;}),allContact:state.allContact.map(function(contact){return contact.id===action.payload.id?_objectSpread({},contact,{starred:!action.payload.starred}):contact;})});}case FETCH_ALL_CONTACT_SUCCESS:{return _objectSpread({},state,{loader:false,allContact:action.payload,contactList:action.payload});}case SHOW_MESSAGE:{return _objectSpread({},state,{alertMessage:action.payload,showMessage:true,loader:false});}case ON_CONTACT_SELECT:{action.payload.selected=!action.payload.selected;var selectedContacts=0;var contactList=state.contactList.map(function(contact){if(contact.selected){selectedContacts++;}if(contact.id===action.payload.id){if(contact.selected){selectedContacts++;}return action.payload;}else{return contact;}});return _objectSpread({},state,{INIT_STATE:INIT_STATE,selectedContacts:selectedContacts,contactList:contactList});}case ON_ADD_CONTACT:{return _objectSpread({},state,{addContactState:true});}case ON_CONTACT_CLOSE:{return _objectSpread({},state,{addContactState:false});}case ON_FILTER_OPTION_SELECT:{var selectedSectionId=0;var filterOption='';var _contactList=[];switch(action.payload.name){case'All contacts':{selectedSectionId=action.payload.id;filterOption=action.payload.name;_contactList=state.allContact;break;}case'Frequently contacted':{selectedSectionId=action.payload.id;filterOption=action.payload.name;_contactList=state.allContact.filter(function(contact){return contact.frequently;});break;}case'Starred contacts':{selectedSectionId=action.payload.id;filterOption=action.payload.name;_contactList=state.allContact.filter(function(contact){return contact.starred;});break;}default:{selectedSectionId=action.payload.id;filterOption=action.payload.name;_contactList=state.allContact;break;}}return _objectSpread({},state,{selectedSectionId:selectedSectionId,filterOption:filterOption,contactList:_contactList,drawerState:false});}case ON_SAVE_CONTACT:{var isNew=true;var _contactList2=state.allContact.map(function(contact){if(contact.id===action.payload.id){isNew=false;return action.payload;}else{return contact;}});if(isNew){_contactList2.push(action.payload);}return _objectSpread({},state,{alertMessage:isNew?'Contact Added Successfully':'Contact Updated Successfully',showMessage:true,contactList:_contactList2,allContact:_contactList2});}case ON_DELETE_CONTACT:{return _objectSpread({},state,{alertMessage:'Contact Deleted Successfully',showMessage:true,allContact:state.allContact.filter(function(contact){return contact.id!==action.payload.id;}),contactList:state.allContact.filter(function(contact){return contact.id!==action.payload.id;})});}case ON_DELETE_SELECTED_CONTACT:{var contacts=state.allContact.filter(function(contact){return!contact.selected;});return _objectSpread({},state,{alertMessage:'Contact Deleted Successfully',showMessage:true,allContact:contacts,contactList:contacts,selectedContacts:0});}case FILTER_CONTACT:{var _filterOption=state.filterOption;var _contactList3=[];if(action.payload===''){_contactList3=state.allContact;}else{var filterContact=state.allContact.filter(function(contact){return contact.name.toLowerCase().indexOf(action.payload.toLowerCase())>-1;});if(_filterOption==='All contacts'){_contactList3=filterContact;}else if(_filterOption==='Frequently contacted'){_contactList3=filterContact.filter(function(contact){return contact.frequently;});}else if(_filterOption==='Starred contacts'){_contactList3=filterContact.filter(function(contact){return contact.starred;});}}return _objectSpread({},state,{contactList:_contactList3});}case GET_ALL_CONTACT:{var _contactList4=state.allContact.map(function(contact){return contact?_objectSpread({},contact,{selected:true}):contact;});return _objectSpread({},state,{selectedContacts:_contactList4.length,allContact:_contactList4,contactList:_contactList4});}case GET_UNSELECTED_ALL_CONTACT:{var _contactList5=state.allContact.map(function(contact){return contact?_objectSpread({},contact,{selected:false}):contact;});return _objectSpread({},state,{selectedContacts:0,allContact:_contactList5,contactList:_contactList5});}case ON_ALL_CONTACT_SELECT:{var selectAll=state.selectedContacts<state.contactList.length;var _selectedContacts=0;var _contactList6=[];if(selectAll){_contactList6=state.allContact.map(function(contact){return contact?_objectSpread({},contact,{selected:true}):contact;});_selectedContacts=_contactList6.length;}else{_contactList6=state.allContact.map(function(contact){return contact?_objectSpread({},contact,{selected:true}):contact;});_selectedContacts=0;}return _objectSpread({},state,{selectedContacts:_selectedContacts,allContact:_contactList6,contactList:_contactList6});}case UPDATE_SEARCH_USER:{return _objectSpread({},state,{searchUser:action.payload});}case HANDLE_REQUEST_CLOSE:{return _objectSpread({},state,{showMessage:false});}case ON_TOGGLE_DRAWER:{return _objectSpread({},state,{drawerState:!state.drawerState});}case HIDE_CONTACT_LOADER:{return _objectSpread({},state,{loader:false});}default:return state;}});","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/reducers/Contact.js"],"names":["ADD_FAVOURITE","FETCH_ALL_CONTACT_SUCCESS","FILTER_CONTACT","GET_ALL_CONTACT","GET_UNSELECTED_ALL_CONTACT","HANDLE_REQUEST_CLOSE","HIDE_CONTACT_LOADER","ON_ADD_CONTACT","ON_ALL_CONTACT_SELECT","ON_CONTACT_CLOSE","ON_CONTACT_SELECT","ON_DELETE_CONTACT","ON_DELETE_SELECTED_CONTACT","ON_FILTER_OPTION_SELECT","ON_SAVE_CONTACT","ON_TOGGLE_DRAWER","SHOW_MESSAGE","UPDATE_SEARCH_USER","data","INIT_STATE","alertMessage","showMessage","loader","noContentFoundMessage","selectedSectionId","drawerState","user","name","email","avatar","searchUser","filterOption","allContact","contactList","selectedContact","selectedContacts","addContactState","state","action","type","payload","starred","map","contact","id","selected","filter","frequently","isNew","push","contacts","filterContact","toLowerCase","indexOf","length","selectAll"],"mappings":"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","sourcesContent":["import {\n  ADD_FAVOURITE,\n  FETCH_ALL_CONTACT_SUCCESS,\n  FILTER_CONTACT,\n  GET_ALL_CONTACT,\n  GET_UNSELECTED_ALL_CONTACT,\n  HANDLE_REQUEST_CLOSE,\n  HIDE_CONTACT_LOADER,\n  ON_ADD_CONTACT,\n  ON_ALL_CONTACT_SELECT,\n  ON_CONTACT_CLOSE,\n  ON_CONTACT_SELECT,\n  ON_DELETE_CONTACT,\n  ON_DELETE_SELECTED_CONTACT,\n  ON_FILTER_OPTION_SELECT,\n  ON_SAVE_CONTACT,\n  ON_TOGGLE_DRAWER,\n  SHOW_MESSAGE,\n  UPDATE_SEARCH_USER\n} from 'constants/ActionTypes';\nimport data from 'app/routes/contact/data/contactList'\n\nconst INIT_STATE = {\n  alertMessage: '',\n  showMessage: false,\n  loader: true,\n  noContentFoundMessage: 'No contact found in selected folder',\n  selectedSectionId: 1,\n  drawerState: false,\n  user: {\n    name: 'Robert Johnson',\n    email: 'robert.johnson@example.com',\n    avatar: 'https://via.placeholder.com/150x150'\n  },\n  searchUser: '',\n  filterOption: 'All contacts',\n  // allContact: [],\n  // contactList: [], //only for prod\n  allContact: data,\n  contactList: data,\n  selectedContact: null,\n  selectedContacts: 0,\n  addContactState: false,\n};\n\nexport default (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case ADD_FAVOURITE: {\n      return {\n        ...state,\n        alertMessage: action.payload.starred ? 'Contact removed as star' : 'Contact marked as star',\n        showMessage: true,\n        contactList: state.contactList.map((contact) => contact.id === action.payload.id ? {\n          ...contact,\n          starred: !action.payload.starred\n        } : contact),\n        allContact: state.allContact.map((contact) => contact.id === action.payload.id ? {\n          ...contact,\n          starred: !action.payload.starred\n        } : contact)\n      };\n    }\n    case FETCH_ALL_CONTACT_SUCCESS: {\n      return {\n        ...state,\n        loader: false,\n        allContact: action.payload,\n        contactList: action.payload,\n      }\n    }\n    case SHOW_MESSAGE: {\n      return {\n        ...state,\n        alertMessage: action.payload,\n        showMessage: true,\n        loader: false\n      }\n    }\n    case ON_CONTACT_SELECT: {\n      action.payload.selected = !action.payload.selected;\n      let selectedContacts = 0;\n      const contactList = state.contactList.map(contact => {\n          if (contact.selected) {\n            selectedContacts++;\n          }\n          if (contact.id === action.payload.id) {\n            if (contact.selected) {\n              selectedContacts++;\n            }\n            return action.payload;\n          } else {\n            return contact;\n          }\n        }\n      );\n      return {\n        ...state, INIT_STATE,\n        selectedContacts: selectedContacts,\n        contactList: contactList\n      };\n    }\n    case ON_ADD_CONTACT: {\n      return {...state, addContactState: true};\n    }\n    case ON_CONTACT_CLOSE: {\n      return {...state, addContactState: false};\n    }\n    case ON_FILTER_OPTION_SELECT: {\n      let selectedSectionId = 0;\n      let filterOption = '';\n      let contactList = [];\n      switch (action.payload.name) {\n        case 'All contacts': {\n          selectedSectionId = action.payload.id;\n          filterOption = action.payload.name;\n          contactList = state.allContact;\n          break;\n        }\n        case 'Frequently contacted': {\n          selectedSectionId = action.payload.id;\n          filterOption = action.payload.name;\n          contactList = state.allContact.filter((contact) => contact.frequently);\n          break;\n        }\n        case 'Starred contacts': {\n          selectedSectionId = action.payload.id;\n          filterOption = action.payload.name;\n          contactList = state.allContact.filter((contact) => contact.starred);\n          break;\n        }\n\n        default: {\n          selectedSectionId = action.payload.id;\n          filterOption = action.payload.name;\n          contactList = state.allContact;\n          break;\n        }\n      }\n      return {\n        ...state, selectedSectionId, filterOption, contactList, drawerState: false\n      };\n    }\n    case ON_SAVE_CONTACT: {\n      let isNew = true;\n      const contactList = state.allContact.map((contact) => {\n        if (contact.id === action.payload.id) {\n          isNew = false;\n          return action.payload\n        } else {\n          return contact\n        }\n      });\n      if (isNew) {\n        contactList.push(action.payload);\n      }\n      return {\n        ...state,\n        alertMessage: isNew ? 'Contact Added Successfully' : 'Contact Updated Successfully',\n        showMessage: true,\n        contactList: contactList,\n        allContact: contactList,\n      }\n    }\n    case ON_DELETE_CONTACT: {\n      return {\n        ...state,\n        alertMessage: 'Contact Deleted Successfully',\n        showMessage: true,\n        allContact: state.allContact.filter((contact) => contact.id !== action.payload.id),\n        contactList: state.allContact.filter((contact) => contact.id !== action.payload.id),\n      }\n    }\n    case ON_DELETE_SELECTED_CONTACT: {\n      const contacts = state.allContact.filter((contact) => !contact.selected);\n      return {\n        ...state,\n        alertMessage: 'Contact Deleted Successfully',\n        showMessage: true,\n        allContact: contacts,\n        contactList: contacts,\n        selectedContacts: 0\n      }\n    }\n    case FILTER_CONTACT: {\n      const {filterOption} = state;\n      let contactList = [];\n      if (action.payload === '') {\n        contactList = state.allContact;\n      } else {\n        const filterContact = state.allContact.filter((contact) =>\n          contact.name.toLowerCase().indexOf(action.payload.toLowerCase()) > -1);\n        if (filterOption === 'All contacts') {\n          contactList = filterContact\n        } else if (filterOption === 'Frequently contacted') {\n          contactList = filterContact.filter((contact) => contact.frequently);\n        } else if (filterOption === 'Starred contacts') {\n          contactList = filterContact.filter((contact) => contact.starred);\n        }\n      }\n      return {...state, contactList: contactList}\n    }\n    case GET_ALL_CONTACT: {\n      let contactList = state.allContact.map((contact) => contact ? {\n        ...contact,\n        selected: true\n      } : contact);\n      return {\n        ...state,\n        selectedContacts: contactList.length,\n        allContact: contactList,\n        contactList: contactList\n      }\n    }\n    case GET_UNSELECTED_ALL_CONTACT: {\n      let contactList = state.allContact.map((contact) => contact ? {\n        ...contact,\n        selected: false\n      } : contact);\n      return {\n        ...state,\n        selectedContacts: 0,\n        allContact: contactList,\n        contactList: contactList\n      }\n    }\n    case ON_ALL_CONTACT_SELECT: {\n      const selectAll = state.selectedContacts < state.contactList.length;\n      let selectedContacts = 0;\n      let contactList = [];\n      if (selectAll) {\n        contactList = state.allContact.map((contact) => contact ? {\n          ...contact,\n          selected: true\n        } : contact);\n        selectedContacts = contactList.length;\n      } else {\n        contactList = state.allContact.map((contact) => contact ? {\n          ...contact,\n          selected: true\n        } : contact);\n        selectedContacts = 0;\n      }\n      return {\n        ...state,\n        selectedContacts: selectedContacts,\n        allContact: contactList,\n        contactList: contactList\n      }\n    }\n    case UPDATE_SEARCH_USER: {\n      return {...state, searchUser: action.payload}\n    }\n    case HANDLE_REQUEST_CLOSE: {\n      return {...state, showMessage: false}\n    }\n    case ON_TOGGLE_DRAWER: {\n      return {...state, drawerState: !state.drawerState}\n    }\n    case HIDE_CONTACT_LOADER: {\n      return {...state, loader: false}\n    }\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}