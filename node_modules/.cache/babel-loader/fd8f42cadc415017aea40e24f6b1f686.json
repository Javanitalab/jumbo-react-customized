{"ast":null,"code":"// import axios from \"./Axios\";\n//define an instance from Axios and set headers and baseurl => because we are using proxy we can't set base url\nconst baseUrl = \"https://enrouteservice.com/api/\";\nconst POSTMethod = \"POST\";\nconst Headers = {\n  Accept: \"application/json\",\n  \"Content-Type\": \"application/json;charset=UTF-8\",\n  \"Access-Control-Allow-Origin\": \"*\"\n};\n\nconst signIn = async Data => {\n  var options = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json;charset=UTF-8\"\n    },\n    body: JSON.stringify(Data)\n  };\n  var response = fetch(baseUrl + \"token-auth\", options).then(response => response.json());\n  return response;\n};\n\nexport default signIn;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/api/AxiosAuth.js"],"names":["baseUrl","POSTMethod","Headers","Accept","signIn","Data","options","method","headers","body","JSON","stringify","response","fetch","then","json"],"mappings":"AAAA;AACA;AAEA,MAAMA,OAAO,GAAG,iCAAhB;AACA,MAAMC,UAAU,GAAG,MAAnB;AACA,MAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE,kBADM;AAEd,kBAAgB,gCAFF;AAGd,iCAA+B;AAHjB,CAAhB;;AAMA,MAAMC,MAAM,GAAG,MAAOC,IAAP,IAAgB;AAC7B,MAAIC,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE,MADI;AAEZC,IAAAA,OAAO,EAAE;AACPL,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB;AAFT,KAFG;AAMZM,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AANM,GAAd;AASA,MAAIO,QAAQ,GAAGC,KAAK,CAACb,OAAO,GAAG,YAAX,EAAyBM,OAAzB,CAAL,CAAuCQ,IAAvC,CAA6CF,QAAD,IACzDA,QAAQ,CAACG,IAAT,EADa,CAAf;AAGA,SAAOH,QAAP;AACD,CAdD;;AAgBA,eAAeR,MAAf","sourcesContent":["// import axios from \"./Axios\";\n//define an instance from Axios and set headers and baseurl => because we are using proxy we can't set base url\n\nconst baseUrl = \"https://enrouteservice.com/api/\";\nconst POSTMethod = \"POST\";\nconst Headers = {\n  Accept: \"application/json\",\n  \"Content-Type\": \"application/json;charset=UTF-8\",\n  \"Access-Control-Allow-Origin\": \"*\",\n};\n\nconst signIn = async (Data) => {\n  var options = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json;charset=UTF-8\",\n    },\n    body: JSON.stringify(Data),\n  };\n\n  var response = fetch(baseUrl + \"token-auth\", options).then((response) =>\n    response.json()\n  );\n  return response;\n};\n\nexport default signIn;\n"]},"metadata":{},"sourceType":"module"}