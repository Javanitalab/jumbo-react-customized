{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/charts/routes/treemap/Components/CustomContentTreemap.js\";\nimport React, { Component } from 'react';\nimport { ResponsiveContainer, Treemap } from 'recharts';\nimport data from './data';\nconst COLORS = ['#8889DD', '#9597E4', '#8DC77B', '#A5D297', '#E2CF45', '#F8C12D'];\n\nclass CustomizedContent extends Component {\n  render() {\n    const {\n      root,\n      depth,\n      x,\n      y,\n      width,\n      height,\n      index,\n      colors,\n      name\n    } = this.props;\n    return React.createElement(\"g\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"rect\", {\n      x: x,\n      y: y,\n      width: width,\n      height: height,\n      style: {\n        fill: depth < 2 ? colors[Math.floor(index / root.children.length * 6)] : 'none',\n        stroke: '#fff',\n        strokeWidth: 2 / (depth + 1e-10),\n        strokeOpacity: 1 / (depth + 1e-10)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }), depth === 1 ? React.createElement(\"text\", {\n      x: x + width / 2,\n      y: y + height / 2 + 7,\n      textAnchor: \"middle\",\n      fill: \"#fff\",\n      fontSize: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, name) : null, depth === 1 ? React.createElement(\"text\", {\n      x: x + 4,\n      y: y + 18,\n      fill: \"#fff\",\n      fontSize: 16,\n      fillOpacity: 0.9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, index + 1) : null);\n  }\n\n}\n\nconst CustomContentTreemap = () => React.createElement(ResponsiveContainer, {\n  width: \"100%\",\n  height: 200,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}, React.createElement(Treemap, {\n  data: data,\n  dataKey: \"size\",\n  ratio: 4 / 3,\n  stroke: \"#fff\",\n  fill: \"#3367d6\",\n  content: React.createElement(CustomizedContent, {\n    colors: COLORS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}));\n\nexport default CustomContentTreemap;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/charts/routes/treemap/Components/CustomContentTreemap.js"],"names":["React","Component","ResponsiveContainer","Treemap","data","COLORS","CustomizedContent","render","root","depth","x","y","width","height","index","colors","name","props","fill","Math","floor","children","length","stroke","strokeWidth","strokeOpacity","CustomContentTreemap"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,mBAAR,EAA6BC,OAA7B,QAA2C,UAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAGA,MAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,CAAf;;AAEA,MAAMC,iBAAN,SAAgCL,SAAhC,CAA0C;AACxCM,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA,KAAP;AAAcC,MAAAA,CAAd;AAAiBC,MAAAA,CAAjB;AAAoBC,MAAAA,KAApB;AAA2BC,MAAAA,MAA3B;AAAmCC,MAAAA,KAAnC;AAA0CC,MAAAA,MAA1C;AAAkDC,MAAAA;AAAlD,QAA0D,KAAKC,KAArE;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,CAAC,EAAEP,CADL;AAEE,MAAA,CAAC,EAAEC,CAFL;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,MAAM,EAAEC,MAJV;AAKE,MAAA,KAAK,EAAE;AACLK,QAAAA,IAAI,EAAET,KAAK,GAAG,CAAR,GAAYM,MAAM,CAACI,IAAI,CAACC,KAAL,CAAWN,KAAK,GAAGN,IAAI,CAACa,QAAL,CAAcC,MAAtB,GAA+B,CAA1C,CAAD,CAAlB,GAAmE,MADpE;AAELC,QAAAA,MAAM,EAAE,MAFH;AAGLC,QAAAA,WAAW,EAAE,KAAKf,KAAK,GAAG,KAAb,CAHR;AAILgB,QAAAA,aAAa,EAAE,KAAKhB,KAAK,GAAG,KAAb;AAJV,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAcIA,KAAK,KAAK,CAAV,GACE;AACE,MAAA,CAAC,EAAEC,CAAC,GAAGE,KAAK,GAAG,CADjB;AAEE,MAAA,CAAC,EAAED,CAAC,GAAGE,MAAM,GAAG,CAAb,GAAiB,CAFtB;AAGE,MAAA,UAAU,EAAC,QAHb;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,QAAQ,EAAE,EALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGG,IAPH,CADF,GAUI,IAxBR,EA2BIP,KAAK,KAAK,CAAV,GACE;AACE,MAAA,CAAC,EAAEC,CAAC,GAAG,CADT;AAEE,MAAA,CAAC,EAAEC,CAAC,GAAG,EAFT;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,QAAQ,EAAE,EAJZ;AAKE,MAAA,WAAW,EAAE,GALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGG,KAAK,GAAG,CAPX,CADF,GAUI,IArCR,CADF;AA0CD;;AA9CuC;;AAiD1C,MAAMY,oBAAoB,GAAG,MAC3B,oBAAC,mBAAD;AAAqB,EAAA,KAAK,EAAC,MAA3B;AAAkC,EAAA,MAAM,EAAE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,OAAD;AACE,EAAA,IAAI,EAAEtB,IADR;AAEE,EAAA,OAAO,EAAC,MAFV;AAGE,EAAA,KAAK,EAAE,IAAI,CAHb;AAIE,EAAA,MAAM,EAAC,MAJT;AAKE,EAAA,IAAI,EAAC,SALP;AAME,EAAA,OAAO,EAAE,oBAAC,iBAAD;AAAmB,IAAA,MAAM,EAAEC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF;;AAaA,eAAeqB,oBAAf","sourcesContent":["import React, {Component} from 'react';\nimport {ResponsiveContainer, Treemap} from 'recharts';\nimport data from './data';\n\n\nconst COLORS = ['#8889DD', '#9597E4', '#8DC77B', '#A5D297', '#E2CF45', '#F8C12D'];\n\nclass CustomizedContent extends Component {\n  render() {\n    const {root, depth, x, y, width, height, index, colors, name} = this.props;\n\n    return (\n      <g>\n        <rect\n          x={x}\n          y={y}\n          width={width}\n          height={height}\n          style={{\n            fill: depth < 2 ? colors[Math.floor(index / root.children.length * 6)] : 'none',\n            stroke: '#fff',\n            strokeWidth: 2 / (depth + 1e-10),\n            strokeOpacity: 1 / (depth + 1e-10),\n          }}\n        />\n        {\n          depth === 1 ?\n            <text\n              x={x + width / 2}\n              y={y + height / 2 + 7}\n              textAnchor=\"middle\"\n              fill=\"#fff\"\n              fontSize={14}\n            >\n              {name}\n            </text>\n            : null\n        }\n        {\n          depth === 1 ?\n            <text\n              x={x + 4}\n              y={y + 18}\n              fill=\"#fff\"\n              fontSize={16}\n              fillOpacity={0.9}\n            >\n              {index + 1}\n            </text>\n            : null\n        }\n      </g>\n    );\n  }\n}\n\nconst CustomContentTreemap = () => (\n  <ResponsiveContainer width=\"100%\" height={200}>\n    <Treemap\n      data={data}\n      dataKey=\"size\"\n      ratio={4 / 3}\n      stroke=\"#fff\"\n      fill=\"#3367d6\"\n      content={<CustomizedContent colors={COLORS}/>}\n    />\n  </ResponsiveContainer>\n);\n\nexport default CustomContentTreemap;"]},"metadata":{},"sourceType":"module"}