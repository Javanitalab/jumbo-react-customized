{"ast":null,"code":"import _classCallCheck from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";var google=window.google;var _=require(\"lodash\");var _require=require(\"recompose\"),compose=_require.compose,withProps=_require.withProps,lifecycle=_require.lifecycle;var _require2=require(\"react-google-maps\"),withScriptjs=_require2.withScriptjs,withGoogleMap=_require2.withGoogleMap,GoogleMap=_require2.GoogleMap,Marker=_require2.Marker;var _require3=require(\"react-google-maps/lib/components/places/SearchBox\"),SearchBox=_require3.SearchBox;var MapWithASearchBoxs=compose(withProps({googleMapURL:\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=places,geometry,drawing&key=AIzaSyC9dEjps9u3AP1ce5dxcXCTYDRUege490k\",loadingElement:React.createElement(\"div\",{style:{height:\"100%\"}}),containerElement:React.createElement(\"div\",{style:{height:\"400px\"}}),mapElement:React.createElement(\"div\",{style:{height:\"100%\"}})}),lifecycle({componentWillMount:function componentWillMount(){var _this=this;var refs={};this.setState({bounds:null,center:{lat:41.9,lng:-87.624},markers:[],onMapMounted:function onMapMounted(ref){refs.map=ref;},onBoundsChanged:function onBoundsChanged(){_this.setState({bounds:refs.map.getBounds(),center:refs.map.getCenter()});},onSearchBoxMounted:function onSearchBoxMounted(ref){refs.searchBox=ref;},onPlacesChanged:function onPlacesChanged(){var places=refs.searchBox.getPlaces();var bounds=new google.maps.LatLngBounds();places.forEach(function(place){if(place.geometry.viewport){bounds.union(place.geometry.viewport);}else{bounds.extend(place.geometry.location);}});var nextMarkers=places.map(function(place){return{position:place.geometry.location};});var nextCenter=_.get(nextMarkers,'0.position',_this.state.center);_this.setState({center:nextCenter,markers:nextMarkers});// refs.map.fitBounds(bounds);\n}});}}),withScriptjs,withGoogleMap)(function(props){return React.createElement(GoogleMap,{ref:props.onMapMounted,defaultZoom:15,center:props.center,defaultOptions:{mapTypeControl:false},onBoundsChanged:props.onBoundsChanged},React.createElement(SearchBox,{ref:props.onSearchBoxMounted,bounds:props.bounds// controlPosition={new google.maps.ControlPosition.TOP_LEFT}\n,onPlacesChanged:props.onPlacesChanged},React.createElement(\"input\",{type:\"text\",placeholder:\"Enter search location\",style:{boxSizing:\"border-box\",border:\"1px solid transparent\",width:\"240px\",height:\"32px\",marginTop:\"27px\",padding:\"0 12px\",borderRadius:\"3px\",boxShadow:\"0 2px 6px rgba(0, 0, 0, 0.3)\",fontSize:\"14px\",outline:\"none\",marginLeft:'20px',textOverflow:\"ellipses\"}})),props.markers.map(function(marker,index){return React.createElement(Marker,{key:index,position:marker.position});}));});var MapWithASearchBox=/*#__PURE__*/function(_Component){_inherits(MapWithASearchBox,_Component);function MapWithASearchBox(){_classCallCheck(this,MapWithASearchBox);return _possibleConstructorReturn(this,_getPrototypeOf(MapWithASearchBox).apply(this,arguments));}_createClass(MapWithASearchBox,[{key:\"render\",value:function render(){var styleName=this.props.styleName;if(!styleName){styleName='embed-responsive-21by9';}return React.createElement(MapWithASearchBoxs,{containerElement:React.createElement(\"div\",{className:\"embed-responsive \".concat(styleName)}),mapElement:React.createElement(\"div\",{className:\"embed-responsive-item\"})});}}]);return MapWithASearchBox;}(Component);export{MapWithASearchBox as default};","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/map/routes/MapWithSearchBox/Components/MapWithASearchBox.js"],"names":["React","Component","google","window","_","require","compose","withProps","lifecycle","withScriptjs","withGoogleMap","GoogleMap","Marker","SearchBox","MapWithASearchBoxs","googleMapURL","loadingElement","height","containerElement","mapElement","componentWillMount","refs","setState","bounds","center","lat","lng","markers","onMapMounted","ref","map","onBoundsChanged","getBounds","getCenter","onSearchBoxMounted","searchBox","onPlacesChanged","places","getPlaces","maps","LatLngBounds","forEach","place","geometry","viewport","union","extend","location","nextMarkers","position","nextCenter","get","state","props","mapTypeControl","boxSizing","border","width","marginTop","padding","borderRadius","boxShadow","fontSize","outline","marginLeft","textOverflow","marker","index","MapWithASearchBox","styleName"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\n\nconst google = window.google;\n\nconst _ = require(\"lodash\");\nconst {compose, withProps, lifecycle} = require(\"recompose\");\nconst {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n} = require(\"react-google-maps\");\nconst {SearchBox} = require(\"react-google-maps/lib/components/places/SearchBox\");\n\nconst MapWithASearchBoxs = compose(\n  withProps({\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=places,geometry,drawing&key=AIzaSyC9dEjps9u3AP1ce5dxcXCTYDRUege490k\",\n    loadingElement: <div style={{height: `100%`}}/>,\n    containerElement: <div style={{height: `400px`}}/>,\n    mapElement: <div style={{height: `100%`}}/>,\n  }),\n  lifecycle({\n    componentWillMount() {\n      const refs = {}\n\n      this.setState({\n        bounds: null,\n        center: {\n          lat: 41.9, lng: -87.624\n        },\n        markers: [],\n        onMapMounted: ref => {\n          refs.map = ref;\n        },\n        onBoundsChanged: () => {\n          this.setState({\n            bounds: refs.map.getBounds(),\n            center: refs.map.getCenter(),\n          })\n        },\n        onSearchBoxMounted: ref => {\n          refs.searchBox = ref;\n        },\n        onPlacesChanged: () => {\n          const places = refs.searchBox.getPlaces();\n          const bounds = new google.maps.LatLngBounds();\n\n          places.forEach(place => {\n            if (place.geometry.viewport) {\n              bounds.union(place.geometry.viewport)\n            } else {\n              bounds.extend(place.geometry.location)\n            }\n          });\n          const nextMarkers = places.map(place => ({\n            position: place.geometry.location,\n          }));\n          const nextCenter = _.get(nextMarkers, '0.position', this.state.center);\n\n          this.setState({\n            center: nextCenter,\n            markers: nextMarkers,\n          });\n          // refs.map.fitBounds(bounds);\n        },\n      })\n    },\n  }),\n  withScriptjs,\n  withGoogleMap\n)(props =>\n  <GoogleMap\n    ref={props.onMapMounted}\n    defaultZoom={15}\n    center={props.center}\n    defaultOptions={{mapTypeControl: false}}\n    onBoundsChanged={props.onBoundsChanged}\n  >\n    <SearchBox\n      ref={props.onSearchBoxMounted}\n      bounds={props.bounds}\n      // controlPosition={new google.maps.ControlPosition.TOP_LEFT}\n      onPlacesChanged={props.onPlacesChanged}>\n      <input\n        type=\"text\"\n        placeholder=\"Enter search location\"\n        style={{\n          boxSizing: `border-box`,\n          border: `1px solid transparent`,\n          width: `240px`,\n          height: `32px`,\n          marginTop: `27px`,\n          padding: `0 12px`,\n          borderRadius: `3px`,\n          boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n          fontSize: `14px`,\n          outline: `none`,\n          marginLeft: '20px',\n          textOverflow: `ellipses`,\n        }}\n      />\n    </SearchBox>\n    {props.markers.map((marker, index) =>\n      <Marker key={index} position={marker.position}/>\n    )}\n  </GoogleMap>\n);\n\nexport default class MapWithASearchBox extends Component {\n\n  render() {\n    let styleName = this.props.styleName;\n    if (!styleName) {\n      styleName = 'embed-responsive-21by9'\n    }\n    return (\n      <MapWithASearchBoxs\n        containerElement={\n          <div className={`embed-responsive ${styleName}`}/>\n        }\n        mapElement={<div className=\"embed-responsive-item\"/>}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}