{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/components/CustomLineChart/index.js\";\nimport React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nclass CustomLineChart extends Component {\n  render() {\n    const {\n      labels,\n      label,\n      borderColor,\n      chartData,\n      pointBackgroundColor,\n      height,\n      pointBorderColor,\n      borderWidth,\n      shadowColor,\n      pointBorderWidth,\n      lineTension,\n      pointRadius,\n      pointHoverBorderColor,\n      gridLinesDisplay,\n      gridLineWidth\n    } = this.props;\n\n    const data = canvas => {\n      const ctx = canvas.getContext(\"2d\");\n      const _stroke = ctx.stroke;\n\n      ctx.stroke = function () {\n        ctx.save();\n        ctx.shadowColor = shadowColor;\n        ctx.shadowBlur = 13;\n        ctx.shadowOffsetX = 0;\n        ctx.shadowOffsetY = 12;\n\n        _stroke.apply(this, arguments);\n\n        ctx.restore();\n      };\n\n      return {\n        labels: labels,\n        datasets: [{\n          label: label,\n          fill: false,\n          lineTension: lineTension,\n          fillOpacity: 0.3,\n          borderColor: borderColor,\n          borderWidth: borderWidth,\n          pointBorderColor: pointBorderColor,\n          pointBackgroundColor: pointBackgroundColor,\n          pointBorderWidth: pointBorderWidth,\n          pointRadius: pointRadius,\n          pointHoverBackgroundColor: pointBackgroundColor,\n          pointHoverBorderColor: pointHoverBorderColor,\n          pointHoverBorderWidth: 4,\n          pointHoverRadius: 6,\n          data: chartData\n        }]\n      };\n    }; // chart options\n\n\n    const options = {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          display: true,\n          ticks: {\n            display: false,\n            min: 0\n          },\n          gridLines: {\n            display: gridLinesDisplay,\n            drawBorder: false,\n            lineWidth: gridLineWidth\n          }\n        }],\n        yAxes: [{\n          display: false,\n          ticks: {\n            suggestedMin: 0,\n            beginAtZero: true\n          }\n        }]\n      },\n      layout: {\n        padding: {\n          left: -30,\n          right: 0,\n          top: 10,\n          bottom: -10\n        }\n      }\n    };\n    return React.createElement(Line, {\n      data: data,\n      options: options,\n      height: height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default CustomLineChart;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/components/CustomLineChart/index.js"],"names":["React","Component","Line","CustomLineChart","render","labels","label","borderColor","chartData","pointBackgroundColor","height","pointBorderColor","borderWidth","shadowColor","pointBorderWidth","lineTension","pointRadius","pointHoverBorderColor","gridLinesDisplay","gridLineWidth","props","data","canvas","ctx","getContext","_stroke","stroke","save","shadowBlur","shadowOffsetX","shadowOffsetY","apply","arguments","restore","datasets","fill","fillOpacity","pointHoverBackgroundColor","pointHoverBorderWidth","pointHoverRadius","options","maintainAspectRatio","legend","display","scales","xAxes","ticks","min","gridLines","drawBorder","lineWidth","yAxes","suggestedMin","beginAtZero","layout","padding","left","right","top","bottom"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Line} from 'react-chartjs-2';\n\n\nclass CustomLineChart extends Component {\n  render() {\n    const {\n      labels,\n      label,\n      borderColor,\n      chartData,\n      pointBackgroundColor,\n      height,\n      pointBorderColor,\n      borderWidth,\n      shadowColor,\n      pointBorderWidth,\n      lineTension,\n      pointRadius,\n      pointHoverBorderColor,\n      gridLinesDisplay,\n      gridLineWidth\n    } = this.props;\n\n    const data = (canvas) => {\n      const ctx = canvas.getContext(\"2d\");\n      const _stroke = ctx.stroke;\n      ctx.stroke = function () {\n        ctx.save();\n        ctx.shadowColor = shadowColor;\n        ctx.shadowBlur = 13;\n        ctx.shadowOffsetX = 0;\n        ctx.shadowOffsetY = 12;\n        _stroke.apply(this, arguments);\n        ctx.restore();\n      };\n      return {\n        labels: labels,\n        datasets: [\n          {\n            label: label,\n            fill: false,\n            lineTension: lineTension,\n            fillOpacity: 0.3,\n            borderColor: borderColor,\n            borderWidth: borderWidth,\n            pointBorderColor: pointBorderColor,\n            pointBackgroundColor: pointBackgroundColor,\n            pointBorderWidth: pointBorderWidth,\n            pointRadius: pointRadius,\n            pointHoverBackgroundColor: pointBackgroundColor,\n            pointHoverBorderColor: pointHoverBorderColor,\n            pointHoverBorderWidth: 4,\n            pointHoverRadius: 6,\n            data: chartData,\n          }\n        ]\n      }\n    }\n    // chart options\n    const options = {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          display: true,\n          ticks: {\n            display: false,\n            min: 0\n          },\n          gridLines: {\n            display: gridLinesDisplay,\n            drawBorder: false,\n            lineWidth: gridLineWidth\n          }\n        }],\n        yAxes: [{\n          display: false,\n          ticks: {\n            suggestedMin: 0,\n            beginAtZero: true\n          }\n        }],\n\n      },\n      layout: {\n        padding: {\n          left: -30,\n          right: 0,\n          top: 10,\n          bottom: -10,\n        },\n      }\n    };\n    return (\n      <Line data={data} options={options} height={height}/>\n    );\n  }\n}\n\nexport default CustomLineChart;\n"]},"metadata":{},"sourceType":"module"}