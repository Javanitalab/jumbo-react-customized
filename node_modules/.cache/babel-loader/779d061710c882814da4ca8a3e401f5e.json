{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/drawer/mini/MiniDrawer.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { mailFolderListItems, otherMailFolderListItems } from '../tileData';\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    zIndex: 1,\n    overflow: 'hidden'\n  },\n  appFrame: {\n    position: 'relative',\n    display: 'flex',\n    width: '100%',\n    height: '100%'\n  },\n  appBar: {\n    position: 'absolute',\n    zIndex: theme.zIndex.navDrawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36\n  },\n  hide: {\n    display: 'none'\n  },\n  drawerPaper: {\n    position: 'relative',\n    height: '100%',\n    width: '100%',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    width: 60,\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  drawerInner: {\n    // Make the items inside not wrap when transitioning:\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  content: {\n    width: '100%',\n    flexGrow: 1,\n    padding: 24,\n    marginTop: 56,\n    [theme.breakpoints.up('sm')]: {\n      height: 'calc(100% - 64px)',\n      marginTop: 64\n    }\n  }\n});\n\nclass MiniDrawer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n\n    this.handleDrawerOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleDrawerClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      theme\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.appFrame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      className: classNames('bg-primary', classes.appBar, this.state.open && classes.appBarShift),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      disableGutters: !this.state.open,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"open drawer\",\n      onClick: this.handleDrawerOpen,\n      className: classNames(classes.menuButton, this.state.open && classes.hide),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(MenuIcon, {\n      className: \"text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      variant: \"h6\",\n      color: \"inherit\",\n      noWrap: true,\n      className: \"text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Mini variant drawer\"))), React.createElement(Drawer, {\n      variant: \"permanent\",\n      classes: {\n        paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose)\n      },\n      open: this.state.open,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.drawerInner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.drawerHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: this.handleDrawerClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, theme.direction === 'rtl' ? React.createElement(ChevronRightIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }) : React.createElement(ChevronLeftIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(List, {\n      className: classes.list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, mailFolderListItems), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(List, {\n      className: classes.list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, otherMailFolderListItems))), React.createElement(\"main\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      noWrap: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, 'You think water moves fast? You should see ice.'))));\n  }\n\n}\n\nMiniDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(MiniDrawer);","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/drawer/mini/MiniDrawer.js"],"names":["React","PropTypes","withStyles","classNames","Drawer","AppBar","Toolbar","List","Typography","Divider","IconButton","MenuIcon","ChevronLeftIcon","ChevronRightIcon","mailFolderListItems","otherMailFolderListItems","drawerWidth","styles","theme","root","width","height","zIndex","overflow","appFrame","position","display","appBar","navDrawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","drawerPaper","drawerPaperClose","overflowX","drawerInner","drawerHeader","alignItems","justifyContent","padding","mixins","toolbar","content","flexGrow","marginTop","breakpoints","up","MiniDrawer","Component","state","open","handleDrawerOpen","setState","handleDrawerClose","render","classes","props","paper","direction","list","propTypes","object","isRequired","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport {mailFolderListItems, otherMailFolderListItems} from '../tileData';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    zIndex: 1,\n    overflow: 'hidden',\n  },\n  appFrame: {\n    position: 'relative',\n    display: 'flex',\n    width: '100%',\n    height: '100%',\n  },\n  appBar: {\n    position: 'absolute',\n    zIndex: theme.zIndex.navDrawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawerPaper: {\n    position: 'relative',\n    height: '100%',\n    width: '100%',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    width: 60,\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  drawerInner: {\n    // Make the items inside not wrap when transitioning:\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    width: '100%',\n    flexGrow: 1,\n    padding: 24,\n    marginTop: 56,\n    [theme.breakpoints.up('sm')]: {\n      height: 'calc(100% - 64px)',\n      marginTop: 64,\n    },\n  },\n});\n\nclass MiniDrawer extends React.Component {\n  state = {\n    open: false,\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({open: true});\n  };\n\n  handleDrawerClose = () => {\n    this.setState({open: false});\n  };\n\n  render() {\n    const {classes, theme} = this.props;\n\n    return (\n      <div className={classes.root}>\n        <div className={classes.appFrame}>\n          <AppBar className={classNames('bg-primary', classes.appBar, this.state.open && classes.appBarShift)}>\n            <Toolbar disableGutters={!this.state.open}>\n              <IconButton\n\n                aria-label=\"open drawer\"\n                onClick={this.handleDrawerOpen}\n                className={classNames(classes.menuButton, this.state.open && classes.hide)}\n              >\n                <MenuIcon className=\"text-white\"/>\n              </IconButton>\n              <Typography variant=\"h6\" color=\"inherit\" noWrap className=\"text-white\">\n                Mini variant drawer\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            variant=\"permanent\"\n            classes={{\n              paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose),\n            }}\n            open={this.state.open}\n          >\n            <div className={classes.drawerInner}>\n              <div className={classes.drawerHeader}>\n                <IconButton onClick={this.handleDrawerClose}>\n                  {theme.direction === 'rtl' ? <ChevronRightIcon/> : <ChevronLeftIcon/>}\n                </IconButton>\n              </div>\n              <Divider/>\n              <List className={classes.list}>{mailFolderListItems}</List>\n              <Divider/>\n              <List className={classes.list}>{otherMailFolderListItems}</List>\n            </div>\n          </Drawer>\n          <main className={classes.content}>\n            <Typography variant=\"body1\" noWrap>\n              {'You think water moves fast? You should see ice.'}\n            </Typography>\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nMiniDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, {withTheme: true})(MiniDrawer);"]},"metadata":{},"sourceType":"module"}