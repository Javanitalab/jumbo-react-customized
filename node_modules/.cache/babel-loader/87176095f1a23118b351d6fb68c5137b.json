{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/containers/Customizer/SideNavOption.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport { ABOVE_THE_HEADER, BELOW_THE_HEADER, COLLAPSED_DRAWER, FIXED_DRAWER, HORIZONTAL_NAVIGATION, INSIDE_THE_HEADER, MINI_DRAWER, VERTICAL_NAVIGATION } from 'constants/ActionTypes';\nimport { changeNavigationStyle, setDrawerType, setHorizontalMenuPosition } from 'actions/index';\nimport { Button, ButtonGroup } from 'reactstrap';\n\nclass Customizer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.setFixedDrawer = () => {\n      this.props.setDrawerType(FIXED_DRAWER);\n    };\n\n    this.setCollapsedDrawer = () => {\n      this.props.setDrawerType(COLLAPSED_DRAWER);\n    };\n\n    this.setMiniDrawer = () => {\n      this.props.setDrawerType(MINI_DRAWER);\n    };\n  }\n\n  render() {\n    const {\n      drawerType,\n      navigationStyle,\n      horizontalNavPosition\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"side-nav-option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mb-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"mb-1 mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Navigation Style\"), React.createElement(\"div\", {\n      className: \"text-left py-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: \"d-block\",\n      component: \"fieldset\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(RadioGroup, {\n      className: \"sidenav-dir\",\n      \"aria-label\": \"nav-style\",\n      name: \"navStyle\",\n      value: navigationStyle,\n      onChange: event => {\n        this.props.changeNavigationStyle(event.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Radio, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }),\n      value: HORIZONTAL_NAVIGATION,\n      label: \"Horizontal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Radio, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }),\n      value: VERTICAL_NAVIGATION,\n      label: \"Vertical\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))))), navigationStyle === HORIZONTAL_NAVIGATION ? React.createElement(ButtonGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"default\",\n      className: `jr-btn  ${horizontalNavPosition === INSIDE_THE_HEADER && 'active'} `,\n      onClick: () => {\n        this.props.setHorizontalMenuPosition(INSIDE_THE_HEADER);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Inside\"), React.createElement(Button, {\n      color: \"default\",\n      className: `jr-btn ${horizontalNavPosition === ABOVE_THE_HEADER && 'active'} `,\n      onClick: () => {\n        this.props.setHorizontalMenuPosition(ABOVE_THE_HEADER);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Top\"), React.createElement(Button, {\n      color: \"default\",\n      className: `jr-btn ${horizontalNavPosition === BELOW_THE_HEADER && 'active'} `,\n      onClick: () => {\n        this.props.setHorizontalMenuPosition(BELOW_THE_HEADER);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Below\")) : React.createElement(ButtonGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"default\",\n      className: `jr-btn  ${drawerType === FIXED_DRAWER && 'active'} `,\n      onClick: this.setFixedDrawer.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Fixed\"), React.createElement(Button, {\n      color: \"default\",\n      className: `jr-btn ${drawerType === COLLAPSED_DRAWER && 'active'} `,\n      onClick: this.setCollapsedDrawer.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Collapsed\"), React.createElement(Button, {\n      color: \"default\",\n      className: `jr-btn ${drawerType === MINI_DRAWER && 'active'} `,\n      onClick: this.setMiniDrawer.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Mini\")));\n  }\n\n}\n\nconst mapStateToProps = ({\n  settings\n}) => {\n  const {\n    drawerType,\n    navigationStyle,\n    horizontalNavPosition\n  } = settings;\n  return {\n    drawerType,\n    navigationStyle,\n    horizontalNavPosition\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  changeNavigationStyle,\n  setDrawerType,\n  setHorizontalMenuPosition\n})(Customizer));","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/containers/Customizer/SideNavOption.js"],"names":["React","connect","withRouter","FormControl","FormControlLabel","Radio","RadioGroup","ABOVE_THE_HEADER","BELOW_THE_HEADER","COLLAPSED_DRAWER","FIXED_DRAWER","HORIZONTAL_NAVIGATION","INSIDE_THE_HEADER","MINI_DRAWER","VERTICAL_NAVIGATION","changeNavigationStyle","setDrawerType","setHorizontalMenuPosition","Button","ButtonGroup","Customizer","Component","setFixedDrawer","props","setCollapsedDrawer","setMiniDrawer","render","drawerType","navigationStyle","horizontalNavPosition","event","target","value","bind","mapStateToProps","settings"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SACEC,gBADF,EAEEC,gBAFF,EAGEC,gBAHF,EAIEC,YAJF,EAKEC,qBALF,EAMEC,iBANF,EAOEC,WAPF,EAQEC,mBARF,QASO,uBATP;AAWA,SAAQC,qBAAR,EAA+BC,aAA/B,EAA8CC,yBAA9C,QAA8E,eAA9E;AAEA,SAAQC,MAAR,EAAgBC,WAAhB,QAAkC,YAAlC;;AAEA,MAAMC,UAAN,SAAyBpB,KAAK,CAACqB,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SACvCC,cADuC,GACtB,MAAM;AACrB,WAAKC,KAAL,CAAWP,aAAX,CAAyBN,YAAzB;AACD,KAHsC;;AAAA,SAIvCc,kBAJuC,GAIlB,MAAM;AACzB,WAAKD,KAAL,CAAWP,aAAX,CAAyBP,gBAAzB;AACD,KANsC;;AAAA,SAOvCgB,aAPuC,GAOvB,MAAM;AACpB,WAAKF,KAAL,CAAWP,aAAX,CAAyBH,WAAzB;AACD,KATsC;AAAA;;AAWvCa,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA,UAAD;AAAaC,MAAAA,eAAb;AAA8BC,MAAAA;AAA9B,QAAuD,KAAKN,KAAlE;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAC,SAAvB;AAAiC,MAAA,SAAS,EAAC,UAA3C;AAAsD,MAAA,QAAQ,MAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,aAAtB;AACY,oBAAW,WADvB;AAEY,MAAA,IAAI,EAAC,UAFjB;AAGY,MAAA,KAAK,EAAEK,eAHnB;AAIY,MAAA,QAAQ,EAAGE,KAAD,IAAW;AACnB,aAAKP,KAAL,CAAWR,qBAAX,CAAiCe,KAAK,CAACC,MAAN,CAAaC,KAA9C;AACD,OANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EACvB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AACY,MAAA,KAAK,EAAErB,qBADnB;AAC0C,MAAA,KAAK,EAAC,YADhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAUE,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EACvB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AACY,MAAA,KAAK,EAAEG,mBADnB;AACwC,MAAA,KAAK,EAAC,UAD9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF,CADF,CAFF,CAFF,EAuBGc,eAAe,KAAKjB,qBAApB,GAA4C,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACzC,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AACQ,MAAA,SAAS,EAAG,WAAUkB,qBAAqB,KAAKjB,iBAA1B,IAA+C,QAAU,GADvF;AAEQ,MAAA,OAAO,EAAE,MAAM;AACb,aAAKW,KAAL,CAAWN,yBAAX,CAAqCL,iBAArC;AACD,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADyC,EAMzC,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AACQ,MAAA,SAAS,EAAG,UAASiB,qBAAqB,KAAKtB,gBAA1B,IAA8C,QAAS,GADpF;AAEQ,MAAA,OAAO,EAAE,MAAM;AACb,aAAKgB,KAAL,CAAWN,yBAAX,CAAqCV,gBAArC;AACD,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANyC,EAWzC,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AACQ,MAAA,SAAS,EAAG,UAASsB,qBAAqB,KAAKrB,gBAA1B,IAA8C,QAAU,GADrF;AAEQ,MAAA,OAAO,EAAE,MAAM;AACb,aAAKe,KAAL,CAAWN,yBAAX,CAAqCT,gBAArC;AACD,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXyC,CAA5C,GAkBC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AACQ,MAAA,SAAS,EAAG,WAAUmB,UAAU,KAAKjB,YAAf,IAA+B,QAAU,GADvE;AAEQ,MAAA,OAAO,EAAE,KAAKY,cAAL,CAAoBW,IAApB,CAAyB,IAAzB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAIE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AACQ,MAAA,SAAS,EAAG,UAASN,UAAU,KAAKlB,gBAAf,IAAmC,QAAS,GADzE;AAEQ,MAAA,OAAO,EAAE,KAAKe,kBAAL,CAAwBS,IAAxB,CAA6B,IAA7B,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,EAOE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AACQ,MAAA,SAAS,EAAG,UAASN,UAAU,KAAKd,WAAf,IAA8B,QAAU,GADrE;AAEQ,MAAA,OAAO,EAAE,KAAKY,aAAL,CAAmBQ,IAAnB,CAAwB,IAAxB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CAzCJ,CADF;AAyDD;;AAvEsC;;AA0EzC,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AACtC,QAAM;AAACR,IAAAA,UAAD;AAAaC,IAAAA,eAAb;AAA8BC,IAAAA;AAA9B,MAAuDM,QAA7D;AACA,SAAO;AAACR,IAAAA,UAAD;AAAaC,IAAAA,eAAb;AAA8BC,IAAAA;AAA9B,GAAP;AACD,CAHD;;AAKA,eAAe3B,UAAU,CAACD,OAAO,CAACiC,eAAD,EAAkB;AACjDnB,EAAAA,qBADiD;AAEjDC,EAAAA,aAFiD;AAGjDC,EAAAA;AAHiD,CAAlB,CAAP,CAIvBG,UAJuB,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport {\n  ABOVE_THE_HEADER,\n  BELOW_THE_HEADER,\n  COLLAPSED_DRAWER,\n  FIXED_DRAWER,\n  HORIZONTAL_NAVIGATION,\n  INSIDE_THE_HEADER,\n  MINI_DRAWER,\n  VERTICAL_NAVIGATION\n} from 'constants/ActionTypes'\n\nimport {changeNavigationStyle, setDrawerType, setHorizontalMenuPosition} from 'actions/index';\n\nimport {Button, ButtonGroup} from 'reactstrap';\n\nclass Customizer extends React.Component {\n  setFixedDrawer = () => {\n    this.props.setDrawerType(FIXED_DRAWER);\n  };\n  setCollapsedDrawer = () => {\n    this.props.setDrawerType(COLLAPSED_DRAWER);\n  };\n  setMiniDrawer = () => {\n    this.props.setDrawerType(MINI_DRAWER);\n  };\n\n  render() {\n    const {drawerType, navigationStyle, horizontalNavPosition} = this.props;\n\n    return (\n      <div className=\"side-nav-option\">\n\n        <div className=\"mb-1\">\n          <h3 className=\"mb-1 mt-4\">Navigation Style</h3>\n          <div className=\"text-left py-3\">\n            <FormControl className=\"d-block\" component=\"fieldset\" required>\n              <RadioGroup className=\"sidenav-dir\"\n                          aria-label=\"nav-style\"\n                          name=\"navStyle\"\n                          value={navigationStyle}\n                          onChange={(event) => {\n                            this.props.changeNavigationStyle(event.target.value)\n                          }}\n              >\n                <FormControlLabel control={\n                  <Radio/>} value={HORIZONTAL_NAVIGATION} label=\"Horizontal\"/>\n                <FormControlLabel control={\n                  <Radio/>} value={VERTICAL_NAVIGATION} label=\"Vertical\"/>\n\n              </RadioGroup>\n            </FormControl>\n          </div>\n        </div>\n        {navigationStyle === HORIZONTAL_NAVIGATION ? <ButtonGroup>\n            <Button color=\"default\"\n                    className={`jr-btn  ${horizontalNavPosition === INSIDE_THE_HEADER && 'active' } `}\n                    onClick={() => {\n                      this.props.setHorizontalMenuPosition(INSIDE_THE_HEADER)\n                    }}>Inside</Button>\n            <Button color=\"default\"\n                    className={`jr-btn ${horizontalNavPosition === ABOVE_THE_HEADER && 'active'} `}\n                    onClick={() => {\n                      this.props.setHorizontalMenuPosition(ABOVE_THE_HEADER)\n                    }}>Top</Button>\n            <Button color=\"default\"\n                    className={`jr-btn ${horizontalNavPosition === BELOW_THE_HEADER && 'active' } `}\n                    onClick={() => {\n                      this.props.setHorizontalMenuPosition(BELOW_THE_HEADER)\n                    }}>Below</Button>\n          </ButtonGroup>\n          :\n          <ButtonGroup>\n            <Button color=\"default\"\n                    className={`jr-btn  ${drawerType === FIXED_DRAWER && 'active' } `}\n                    onClick={this.setFixedDrawer.bind(this)}>Fixed</Button>\n            <Button color=\"default\"\n                    className={`jr-btn ${drawerType === COLLAPSED_DRAWER && 'active'} `}\n                    onClick={this.setCollapsedDrawer.bind(this)}>Collapsed</Button>\n            <Button color=\"default\"\n                    className={`jr-btn ${drawerType === MINI_DRAWER && 'active' } `}\n                    onClick={this.setMiniDrawer.bind(this)}>Mini</Button>\n          </ButtonGroup>\n        }\n\n\n      </div>);\n  }\n}\n\nconst mapStateToProps = ({settings}) => {\n  const {drawerType, navigationStyle, horizontalNavPosition} = settings;\n  return {drawerType, navigationStyle, horizontalNavPosition}\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  changeNavigationStyle,\n  setDrawerType,\n  setHorizontalMenuPosition\n})(Customizer));\n\n"]},"metadata":{},"sourceType":"module"}