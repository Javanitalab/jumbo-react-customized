{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/chips/chipsWithInputBox/ChipsWithInputBox.js\";\nimport React, { Component } from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport Input from '@material-ui/core/Input';\nlet count = 5;\n\nclass chipsWithInputBox extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      chipData: [{\n        key: 0,\n        name: 'Domnic Harris'\n      }, {\n        key: 1,\n        name: 'Garry Sobars'\n      }, {\n        key: 2,\n        name: 'Stella Johnson'\n      }, {\n        key: 3,\n        name: 'Alex Dolgove'\n      }, {\n        key: 4,\n        name: 'John Smith'\n      }]\n    };\n\n    this.handleRequestDelete = data => () => {\n      const chipData = [...this.state.chipData];\n      const chipToDelete = chipData.indexOf(data);\n      chipData.splice(chipToDelete, 1);\n      this.setState({\n        chipData\n      });\n    };\n\n    this.onValueChange = e => {\n      this.setState({\n        name: e.target.value\n      });\n    };\n\n    this._handleKeyPress = e => {\n      if (e.key === 'Enter') {\n        this.setState({\n          name: '',\n          chipData: this.state.chipData.concat({\n            key: count++,\n            name: e.target.value\n          })\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"manage-margin d-flex flex-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.state.chipData.map(data => {\n      return React.createElement(Chip, {\n        avatar: React.createElement(Avatar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, data.name.charAt(0).toUpperCase()),\n        label: data.name,\n        key: data.key,\n        onDelete: this.handleRequestDelete(data),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n    }), React.createElement(Input, {\n      type: \"text\",\n      placeholder: \"add more user\",\n      onChange: this.onValueChange.bind(this),\n      value: this.state.name,\n      onKeyPress: this._handleKeyPress.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default chipsWithInputBox;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/chips/chipsWithInputBox/ChipsWithInputBox.js"],"names":["React","Component","Chip","Avatar","Input","count","chipsWithInputBox","state","name","chipData","key","handleRequestDelete","data","chipToDelete","indexOf","splice","setState","onValueChange","e","target","value","_handleKeyPress","concat","render","map","charAt","toUpperCase","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,IAAIC,KAAK,GAAG,CAAZ;;AAEA,MAAMC,iBAAN,SAAgCL,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACxCM,KADwC,GAChC;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,QAAQ,EAAE,CACR;AAACC,QAAAA,GAAG,EAAE,CAAN;AAASF,QAAAA,IAAI,EAAE;AAAf,OADQ,EAER;AAACE,QAAAA,GAAG,EAAE,CAAN;AAASF,QAAAA,IAAI,EAAE;AAAf,OAFQ,EAGR;AAACE,QAAAA,GAAG,EAAE,CAAN;AAASF,QAAAA,IAAI,EAAE;AAAf,OAHQ,EAIR;AAACE,QAAAA,GAAG,EAAE,CAAN;AAASF,QAAAA,IAAI,EAAE;AAAf,OAJQ,EAKR;AAACE,QAAAA,GAAG,EAAE,CAAN;AAASF,QAAAA,IAAI,EAAE;AAAf,OALQ;AAFJ,KADgC;;AAAA,SAYxCG,mBAZwC,GAYlBC,IAAI,IAAI,MAAM;AAClC,YAAMH,QAAQ,GAAG,CAAC,GAAG,KAAKF,KAAL,CAAWE,QAAf,CAAjB;AACA,YAAMI,YAAY,GAAGJ,QAAQ,CAACK,OAAT,CAAiBF,IAAjB,CAArB;AACAH,MAAAA,QAAQ,CAACM,MAAT,CAAgBF,YAAhB,EAA8B,CAA9B;AACA,WAAKG,QAAL,CAAc;AAACP,QAAAA;AAAD,OAAd;AACD,KAjBuC;;AAAA,SAmBxCQ,aAnBwC,GAmBvBC,CAAD,IAAO;AACrB,WAAKF,QAAL,CAAc;AAACR,QAAAA,IAAI,EAAEU,CAAC,CAACC,MAAF,CAASC;AAAhB,OAAd;AACD,KArBuC;;AAAA,SAuBxCC,eAvBwC,GAuBrBH,CAAD,IAAO;AACvB,UAAIA,CAAC,CAACR,GAAF,KAAU,OAAd,EAAuB;AACrB,aAAKM,QAAL,CAAc;AACZR,UAAAA,IAAI,EAAE,EADM;AAEZC,UAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE,QAAX,CAAoBa,MAApB,CAA2B;AAACZ,YAAAA,GAAG,EAAEL,KAAK,EAAX;AAAeG,YAAAA,IAAI,EAAEU,CAAC,CAACC,MAAF,CAASC;AAA9B,WAA3B;AAFE,SAAd;AAID;AACF,KA9BuC;AAAA;;AAgCxCG,EAAAA,MAAM,GAAG;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKhB,KAAL,CAAWE,QAAX,CAAoBe,GAApB,CAAwBZ,IAAI,IAAI;AAC/B,aACE,oBAAC,IAAD;AACE,QAAA,MAAM,EAAE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASA,IAAI,CAACJ,IAAL,CAAUiB,MAAV,CAAiB,CAAjB,EAAoBC,WAApB,EAAT,CADV;AAEE,QAAA,KAAK,EAAEd,IAAI,CAACJ,IAFd;AAGE,QAAA,GAAG,EAAEI,IAAI,CAACF,GAHZ;AAIE,QAAA,QAAQ,EAAE,KAAKC,mBAAL,CAAyBC,IAAzB,CAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD,KATA,CADH,EAWE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,eAA/B;AACO,MAAA,QAAQ,EAAE,KAAKK,aAAL,CAAmBU,IAAnB,CAAwB,IAAxB,CADjB;AACgD,MAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWC,IADlE;AAEO,MAAA,UAAU,EAAE,KAAKa,eAAL,CAAqBM,IAArB,CAA0B,IAA1B,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF;AAiBD;;AAnDuC;;AAsD1C,eAAerB,iBAAf","sourcesContent":["import React, {Component} from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport Input from '@material-ui/core/Input';\n\nlet count = 5;\n\nclass chipsWithInputBox extends Component {\n  state = {\n    name: '',\n    chipData: [\n      {key: 0, name: 'Domnic Harris'},\n      {key: 1, name: 'Garry Sobars'},\n      {key: 2, name: 'Stella Johnson'},\n      {key: 3, name: 'Alex Dolgove'},\n      {key: 4, name: 'John Smith'},\n    ],\n  };\n\n  handleRequestDelete = data => () => {\n    const chipData = [...this.state.chipData];\n    const chipToDelete = chipData.indexOf(data);\n    chipData.splice(chipToDelete, 1);\n    this.setState({chipData});\n  };\n\n  onValueChange = (e) => {\n    this.setState({name: e.target.value});\n  };\n\n  _handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      this.setState({\n        name: '',\n        chipData: this.state.chipData.concat({key: count++, name: e.target.value})\n      })\n    }\n  };\n\n  render() {\n\n    return (\n      <div className=\"manage-margin d-flex flex-wrap\">\n        {this.state.chipData.map(data => {\n          return (\n            <Chip\n              avatar={<Avatar>{data.name.charAt(0).toUpperCase()}</Avatar>}\n              label={data.name}\n              key={data.key}\n              onDelete={this.handleRequestDelete(data)}\n            />\n          );\n        })}\n        <Input type=\"text\" placeholder=\"add more user\"\n               onChange={this.onValueChange.bind(this)} value={this.state.name}\n               onKeyPress={this._handleKeyPress.bind(this)}/>\n      </div>\n    );\n  }\n}\n\nexport default chipsWithInputBox;"]},"metadata":{},"sourceType":"module"}