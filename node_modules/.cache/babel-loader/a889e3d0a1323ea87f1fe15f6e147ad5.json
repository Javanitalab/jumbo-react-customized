{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/components/wall/PostList/index.js\";\nimport React, { Component } from \"react\";\nimport PostItem from \"./PostItem\";\nimport WriteBox from \"../../../components/wall/WriteBox/index\";\nimport Auxiliary from \"../../../util/Auxiliary\";\n\nclass PostList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      postList: [],\n      user: {}\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      postList: this.props.postList,\n      user: this.props.user\n    });\n  }\n\n  addPost(commentText, imageList) {\n    const post = {\n      id: Math.random() * 1343300,\n      text: commentText,\n      user: this.state.user,\n      date: new Date().toString(),\n      mediaList: imageList.map(data => {\n        return {\n          image: data.preview\n        };\n      }),\n      viewCount: 0,\n      likeCount: 0,\n      isLike: false,\n      commentCount: 0,\n      commentList: []\n    };\n    console.log(\"Post Data :==()==>\", post);\n    let postArray = this.state.postList;\n    postArray.unshift(post);\n    this.setState({\n      postList: postArray\n    });\n  }\n\n  render() {\n    return React.createElement(Auxiliary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(WriteBox, {\n      addPost: this.addPost.bind(this),\n      user: this.state.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), this.state.postList.map(post => {\n      return React.createElement(PostItem, {\n        key: post.id,\n        index: post.id,\n        postData: post,\n        user: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\n\nexport default PostList;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/components/wall/PostList/index.js"],"names":["React","Component","PostItem","WriteBox","Auxiliary","PostList","state","postList","user","componentWillMount","setState","props","addPost","commentText","imageList","post","id","Math","random","text","date","Date","toString","mediaList","map","data","image","preview","viewCount","likeCount","isLike","commentCount","commentList","console","log","postArray","unshift","render","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,yCAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE/BK,KAF+B,GAEvB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,IAAI,EAAE;AAFA,KAFuB;AAAA;;AAO/BC,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,QAAL,CAAc;AAACH,MAAAA,QAAQ,EAAE,KAAKI,KAAL,CAAWJ,QAAtB;AAAgCC,MAAAA,IAAI,EAAE,KAAKG,KAAL,CAAWH;AAAjD,KAAd;AACD;;AAGDI,EAAAA,OAAO,CAACC,WAAD,EAAcC,SAAd,EAAyB;AAE9B,UAAMC,IAAI,GAAG;AACXC,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,KAAgB,OADT;AAEXC,MAAAA,IAAI,EAAEN,WAFK;AAGXL,MAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE,IAHN;AAIXY,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,QAAX,EAJK;AAKXC,MAAAA,SAAS,EAAET,SAAS,CAACU,GAAV,CAAcC,IAAI,IAAI;AAC/B,eAAO;AAACC,UAAAA,KAAK,EAAED,IAAI,CAACE;AAAb,SAAP;AACD,OAFU,CALA;AAQXC,MAAAA,SAAS,EAAE,CARA;AASXC,MAAAA,SAAS,EAAE,CATA;AAUXC,MAAAA,MAAM,EAAE,KAVG;AAWXC,MAAAA,YAAY,EAAE,CAXH;AAYXC,MAAAA,WAAW,EAAE;AAZF,KAAb;AAcAC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCnB,IAAlC;AAEA,QAAIoB,SAAS,GAAG,KAAK7B,KAAL,CAAWC,QAA3B;AACA4B,IAAAA,SAAS,CAACC,OAAV,CAAkBrB,IAAlB;AACA,SAAKL,QAAL,CAAc;AACZH,MAAAA,QAAQ,EAAE4B;AADE,KAAd;AAGD;;AAEDE,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAKzB,OAAL,CAAa0B,IAAb,CAAkB,IAAlB,CAAnB;AAA4C,MAAA,IAAI,EAAE,KAAKhC,KAAL,CAAWE,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEG,KAAKF,KAAL,CAAWC,QAAX,CAAoBiB,GAApB,CAAyBT,IAAD,IAAU;AAC/B,aAAO,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,QAAA,KAAK,EAAED,IAAI,CAACC,EAApC;AAAwC,QAAA,QAAQ,EAAED,IAAlD;AAAwD,QAAA,IAAI,EAAE,KAAKT,KAAL,CAAWE,IAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFF,CAFH,CADF;AASD;;AA/C8B;;AAkDjC,eAAeH,QAAf","sourcesContent":["import React, {Component} from \"react\";\nimport PostItem from \"./PostItem\";\nimport WriteBox from \"../../../components/wall/WriteBox/index\";\nimport Auxiliary from \"../../../util/Auxiliary\";\n\nclass PostList extends Component {\n\n  state = {\n    postList: [],\n    user: {}\n  }\n\n  componentWillMount() {\n    this.setState({postList: this.props.postList, user: this.props.user})\n  }\n\n\n  addPost(commentText, imageList) {\n\n    const post = {\n      id: Math.random() * 1343300,\n      text: commentText,\n      user: this.state.user,\n      date: new Date().toString(),\n      mediaList: imageList.map(data => {\n        return {image: data.preview}\n      }),\n      viewCount: 0,\n      likeCount: 0,\n      isLike: false,\n      commentCount: 0,\n      commentList: [],\n    };\n    console.log(\"Post Data :==()==>\", post)\n\n    let postArray = this.state.postList;\n    postArray.unshift(post);\n    this.setState({\n      postList: postArray\n    });\n  }\n\n  render() {\n    return (\n      <Auxiliary>\n        <WriteBox addPost={this.addPost.bind(this)} user={this.state.user}/>\n        {this.state.postList.map((post) => {\n            return <PostItem key={post.id} index={post.id} postData={post} user={this.state.user}/>\n          }\n        )}\n      </Auxiliary>\n    )\n  }\n}\n\nexport default PostList\n"]},"metadata":{},"sourceType":"module"}