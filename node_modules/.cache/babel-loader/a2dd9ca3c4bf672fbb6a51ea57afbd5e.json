{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/selection/switches/SwitchLabels.js\";\nimport React, { Component } from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nclass SwitchLabels extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      checkedA: true,\n      checkedB: true,\n      checkedC: false,\n      checkedD: false,\n      checkedE: true,\n      checkedF: true,\n      checkedG: true\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        color: \"primary\",\n        classes: {\n          checked: 'text-primary',\n          bar: 'bg-primary'\n        },\n        checked: this.state.checkedA,\n        onChange: (event, checked) => this.setState({\n          checkedA: checked\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }),\n      label: \"A\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        classes: {\n          checked: 'text-secondary',\n          bar: 'bg-secondary'\n        },\n        checked: this.state.checkedB,\n        onChange: (event, checked) => this.setState({\n          checkedB: checked\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }),\n      label: \"B\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }),\n      disabled: true,\n      label: \"C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        classes: {\n          checked: 'text-dark',\n          bar: 'bg-dark'\n        },\n        checked: this.state.checkedD,\n        onChange: (event, checked) => this.setState({\n          checkedD: checked\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }),\n      label: \"D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        classes: {\n          checked: 'text-success',\n          bar: 'bg-success'\n        },\n        checked: this.state.checkedE,\n        onChange: (event, checked) => this.setState({\n          checkedE: checked\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }),\n      label: \"E\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        classes: {\n          checked: 'text-danger',\n          bar: 'bg-danger'\n        },\n        checked: this.state.checkedF,\n        onChange: (event, checked) => this.setState({\n          checkedF: checked\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }),\n      label: \"F\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        classes: {\n          checked: 'text-warning',\n          bar: 'bg-warning'\n        },\n        checked: this.state.checkedG,\n        onChange: (event, checked) => this.setState({\n          checkedG: checked\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }),\n      label: \"G\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SwitchLabels;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/selection/switches/SwitchLabels.js"],"names":["React","Component","FormControlLabel","Switch","SwitchLabels","state","checkedA","checkedB","checkedC","checkedD","checkedE","checkedF","checkedG","render","checked","bar","event","setState"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nclass SwitchLabels extends Component {\n  state = {\n    checkedA: true,\n    checkedB: true,\n    checkedC: false,\n    checkedD: false,\n    checkedE: true,\n    checkedF: true,\n    checkedG: true,\n  };\n\n  render() {\n    return (\n      <div>\n        <FormControlLabel\n          control={\n            <Switch color=\"primary\"\n                    classes={{\n                      checked: 'text-primary',\n                      bar: 'bg-primary',\n                    }}\n                    checked={this.state.checkedA}\n                    onChange={(event, checked) => this.setState({checkedA: checked})}\n            />\n          }\n          label=\"A\"\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              classes={{\n                checked: 'text-secondary',\n                bar: 'bg-secondary',\n              }}\n              checked={this.state.checkedB}\n              onChange={(event, checked) => this.setState({checkedB: checked})}\n            />\n          }\n          label=\"B\"\n        />\n        <FormControlLabel control={<Switch/>} disabled label=\"C\"/>\n\n        <FormControlLabel\n          control={\n            <Switch\n              classes={{\n                checked: 'text-dark',\n                bar: 'bg-dark',\n              }}\n              checked={this.state.checkedD}\n              onChange={(event, checked) => this.setState({checkedD: checked})}\n            />\n          }\n          label=\"D\"\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              classes={{\n                checked: 'text-success',\n                bar: 'bg-success',\n              }}\n              checked={this.state.checkedE}\n              onChange={(event, checked) => this.setState({checkedE: checked})}\n            />\n          }\n          label=\"E\"\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              classes={{\n                checked: 'text-danger',\n                bar: 'bg-danger',\n              }}\n              checked={this.state.checkedF}\n              onChange={(event, checked) => this.setState({checkedF: checked})}\n            />\n          }\n          label=\"F\"\n        /><FormControlLabel\n        control={\n          <Switch\n            classes={{\n              checked: 'text-warning',\n              bar: 'bg-warning',\n            }}\n            checked={this.state.checkedG}\n            onChange={(event, checked) => this.setState({checkedG: checked})}\n          />\n        }\n        label=\"G\"\n      />\n\n      </div>\n    );\n  }\n}\n\nexport default SwitchLabels;"]},"metadata":{},"sourceType":"module"}