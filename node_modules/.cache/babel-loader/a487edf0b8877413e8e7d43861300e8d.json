{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/list/checkbox/CheckboxList.js\";\nimport React, { Component } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nconst lists = [{\n  id: 1,\n  icon: 'label',\n  name: 'Label',\n  color: 'primary'\n}, {\n  id: 2,\n  icon: 'layers',\n  name: 'Layer',\n  color: 'info'\n}, {\n  id: 3,\n  icon: 'lamp',\n  name: 'Lamp',\n  color: 'secondary'\n}, {\n  id: 4,\n  icon: 'movie',\n  name: 'Movie',\n  color: 'warning'\n}, {\n  id: 5,\n  icon: 'puzzle-piece',\n  name: 'Puzzle',\n  color: 'danger'\n}];\n\nclass CheckboxList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      checked: [0]\n    };\n\n    this.handleToggle = (event, value) => {\n      const {\n        checked\n      } = this.state;\n      const currentIndex = checked.indexOf(value);\n      const newChecked = [...checked];\n\n      if (currentIndex === -1) {\n        newChecked.push(value);\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n\n      this.setState({\n        checked: newChecked\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, lists.map(item => React.createElement(ListItem, {\n      button: true,\n      key: item.id,\n      onClick: event => this.handleToggle(event, item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      color: \"primary\",\n      checked: this.state.checked.indexOf(item.id) !== -1,\n      tabIndex: \"-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(ListItemText, {\n      primary: item.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(ListItemSecondaryAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: `zmdi zmdi-${item.icon} text-${item.color}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default CheckboxList;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/list/checkbox/CheckboxList.js"],"names":["React","Component","List","ListItem","ListItemSecondaryAction","ListItemText","Checkbox","IconButton","lists","id","icon","name","color","CheckboxList","state","checked","handleToggle","event","value","currentIndex","indexOf","newChecked","push","splice","setState","render","map","item"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst lists = [\n  {id: 1, icon: 'label', name: 'Label', color: 'primary'},\n  {id: 2, icon: 'layers', name: 'Layer', color: 'info'},\n  {id: 3, icon: 'lamp', name: 'Lamp', color: 'secondary'},\n  {id: 4, icon: 'movie', name: 'Movie', color: 'warning'},\n  {id: 5, icon: 'puzzle-piece', name: 'Puzzle', color: 'danger'}];\n\nclass CheckboxList extends Component {\n  state = {\n    checked: [0],\n  };\n\n  handleToggle = (event, value) => {\n    const {checked} = this.state;\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    this.setState({\n      checked: newChecked,\n    });\n  };\n\n  render() {\n    return (\n      <List>\n        {lists.map(item =>\n          <ListItem button key={item.id} onClick={event => this.handleToggle(event, item.id)}>\n            <Checkbox color=\"primary\"\n                      checked={this.state.checked.indexOf(item.id) !== -1}\n                      tabIndex=\"-1\"\n            />\n\n            <ListItemText primary={item.name}/>\n            <ListItemSecondaryAction>\n              <IconButton>\n                <i className={`zmdi zmdi-${item.icon} text-${item.color}`}/>\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>,\n        )}\n      </List>\n    );\n  }\n}\n\nexport default CheckboxList;"]},"metadata":{},"sourceType":"module"}