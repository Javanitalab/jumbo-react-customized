{"ast":null,"code":"var warnOnce;\nexport default function createSpacing() {\n  var spacingInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;\n\n  // Already transformed.\n  if (spacingInput.mui) {\n    return spacingInput;\n  } // All components align to an 8dp square baseline grid for mobile, tablet, and desktop.\n  // https://material.io/design/layout/understanding-layout.html#pixel-density\n\n\n  var transform;\n\n  if (typeof spacingInput === 'function') {\n    transform = spacingInput;\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof spacingInput !== 'number') {\n        console.error([\"Material-UI: the `theme.spacing` value (\".concat(spacingInput, \") is invalid.\"), 'It should be a number or a function.'].join('\\n'));\n      }\n    }\n\n    transform = function transform(factor) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof factor !== 'number') {\n          console.error(\"Expected spacing argument to be a number, got \".concat(factor));\n        }\n      }\n\n      return spacingInput * factor;\n    };\n  }\n\n  var spacing = function spacing() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!(args.length <= 4)) {\n        console.error(\"Material-UI: Too many arguments provided, expected between 0 and 4, got \".concat(args.length));\n      }\n    }\n\n    if (args.length === 0) {\n      return transform(1);\n    }\n\n    if (args.length === 1) {\n      return transform(args[0]);\n    }\n\n    return args.map(function (factor) {\n      var output = transform(factor);\n      return typeof output === 'number' ? \"\".concat(output, \"px\") : output;\n    }).join(' ');\n  }; // Backward compatibility, to remove in v5.\n\n\n  Object.defineProperty(spacing, 'unit', {\n    get: function get() {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!warnOnce || process.env.NODE_ENV === 'test') {\n          console.error(['Material-UI: theme.spacing.unit usage has been deprecated.', 'It will be removed in v5.', 'You can replace `theme.spacing.unit * y` with `theme.spacing(y)`.', '', 'You can use the `https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod/README.md#theme-spacing-api` migration helper to make the process smoother.'].join('\\n'));\n        }\n\n        warnOnce = true;\n      }\n\n      return spacingInput;\n    }\n  });\n  spacing.mui = true;\n  return spacing;\n}","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@material-ui/core/es/styles/createSpacing.js"],"names":["warnOnce","createSpacing","spacingInput","mui","transform","process","env","NODE_ENV","console","error","join","factor","spacing","args","length","map","output","Object","defineProperty","get"],"mappings":"AAAA,IAAIA,QAAJ;AACA,eAAe,SAASC,aAAT,GAAyC;AAAA,MAAlBC,YAAkB,uEAAH,CAAG;;AACtD;AACA,MAAIA,YAAY,CAACC,GAAjB,EAAsB;AACpB,WAAOD,YAAP;AACD,GAJqD,CAIpD;AACF;;;AAGA,MAAIE,SAAJ;;AAEA,MAAI,OAAOF,YAAP,KAAwB,UAA5B,EAAwC;AACtCE,IAAAA,SAAS,GAAGF,YAAZ;AACD,GAFD,MAEO;AACL,QAAIG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAI,OAAOL,YAAP,KAAwB,QAA5B,EAAsC;AACpCM,QAAAA,OAAO,CAACC,KAAR,CAAc,mDAA8CP,YAA9C,oBAA2E,sCAA3E,EAAmHQ,IAAnH,CAAwH,IAAxH,CAAd;AACD;AACF;;AAEDN,IAAAA,SAAS,GAAG,mBAAAO,MAAM,EAAI;AACpB,UAAIN,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,YAAI,OAAOI,MAAP,KAAkB,QAAtB,EAAgC;AAC9BH,UAAAA,OAAO,CAACC,KAAR,yDAA+DE,MAA/D;AACD;AACF;;AAED,aAAOT,YAAY,GAAGS,MAAtB;AACD,KARD;AASD;;AAED,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAa;AAAA,sCAATC,IAAS;AAATA,MAAAA,IAAS;AAAA;;AAC3B,QAAIR,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAI,EAAEM,IAAI,CAACC,MAAL,IAAe,CAAjB,CAAJ,EAAyB;AACvBN,QAAAA,OAAO,CAACC,KAAR,mFAAyFI,IAAI,CAACC,MAA9F;AACD;AACF;;AAED,QAAID,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;AACrB,aAAOV,SAAS,CAAC,CAAD,CAAhB;AACD;;AAED,QAAIS,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;AACrB,aAAOV,SAAS,CAACS,IAAI,CAAC,CAAD,CAAL,CAAhB;AACD;;AAED,WAAOA,IAAI,CAACE,GAAL,CAAS,UAAAJ,MAAM,EAAI;AACxB,UAAMK,MAAM,GAAGZ,SAAS,CAACO,MAAD,CAAxB;AACA,aAAO,OAAOK,MAAP,KAAkB,QAAlB,aAAgCA,MAAhC,UAA6CA,MAApD;AACD,KAHM,EAGJN,IAHI,CAGC,GAHD,CAAP;AAID,GAnBD,CA9BsD,CAiDnD;;;AAGHO,EAAAA,MAAM,CAACC,cAAP,CAAsBN,OAAtB,EAA+B,MAA/B,EAAuC;AACrCO,IAAAA,GAAG,EAAE,eAAM;AACT,UAAId,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,YAAI,CAACP,QAAD,IAAaK,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAA1C,EAAkD;AAChDC,UAAAA,OAAO,CAACC,KAAR,CAAc,CAAC,4DAAD,EAA+D,2BAA/D,EAA4F,mEAA5F,EAAiK,EAAjK,EAAqK,8KAArK,EAAqVC,IAArV,CAA0V,IAA1V,CAAd;AACD;;AAEDV,QAAAA,QAAQ,GAAG,IAAX;AACD;;AAED,aAAOE,YAAP;AACD;AAXoC,GAAvC;AAaAU,EAAAA,OAAO,CAACT,GAAR,GAAc,IAAd;AACA,SAAOS,OAAP;AACD","sourcesContent":["let warnOnce;\nexport default function createSpacing(spacingInput = 8) {\n  // Already transformed.\n  if (spacingInput.mui) {\n    return spacingInput;\n  } // All components align to an 8dp square baseline grid for mobile, tablet, and desktop.\n  // https://material.io/design/layout/understanding-layout.html#pixel-density\n\n\n  let transform;\n\n  if (typeof spacingInput === 'function') {\n    transform = spacingInput;\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof spacingInput !== 'number') {\n        console.error([`Material-UI: the \\`theme.spacing\\` value (${spacingInput}) is invalid.`, 'It should be a number or a function.'].join('\\n'));\n      }\n    }\n\n    transform = factor => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof factor !== 'number') {\n          console.error(`Expected spacing argument to be a number, got ${factor}`);\n        }\n      }\n\n      return spacingInput * factor;\n    };\n  }\n\n  const spacing = (...args) => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!(args.length <= 4)) {\n        console.error(`Material-UI: Too many arguments provided, expected between 0 and 4, got ${args.length}`);\n      }\n    }\n\n    if (args.length === 0) {\n      return transform(1);\n    }\n\n    if (args.length === 1) {\n      return transform(args[0]);\n    }\n\n    return args.map(factor => {\n      const output = transform(factor);\n      return typeof output === 'number' ? `${output}px` : output;\n    }).join(' ');\n  }; // Backward compatibility, to remove in v5.\n\n\n  Object.defineProperty(spacing, 'unit', {\n    get: () => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!warnOnce || process.env.NODE_ENV === 'test') {\n          console.error(['Material-UI: theme.spacing.unit usage has been deprecated.', 'It will be removed in v5.', 'You can replace `theme.spacing.unit * y` with `theme.spacing(y)`.', '', 'You can use the `https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod/README.md#theme-spacing-api` migration helper to make the process smoother.'].join('\\n'));\n        }\n\n        warnOnce = true;\n      }\n\n      return spacingInput;\n    }\n  });\n  spacing.mui = true;\n  return spacing;\n}"]},"metadata":{},"sourceType":"module"}