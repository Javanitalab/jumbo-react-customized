{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/components/dashboard/default/Chart.js\";\nimport React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\nexport default class Chart extends Component {\n  render() {\n    const {\n      labels,\n      label,\n      borderColor,\n      chartdata,\n      pointBackgroundColor,\n      height,\n      pointBorderColor,\n      shadowColor\n    } = this.props;\n\n    const data = canvas => {\n      const ctx = canvas.getContext(\"2d\");\n      const _stroke = ctx.stroke;\n\n      ctx.stroke = function () {\n        ctx.save();\n        ctx.shadowColor = shadowColor;\n        ctx.shadowBlur = 13;\n        ctx.shadowOffsetX = 0;\n        ctx.shadowOffsetY = 12;\n\n        _stroke.apply(this, arguments);\n\n        ctx.restore();\n      };\n\n      return {\n        labels: labels,\n        datasets: [{\n          label: label,\n          fill: false,\n          tension: 0.40,\n          fillOpacity: 0.3,\n          borderColor: borderColor,\n          borderWidth: '4',\n          pointBorderColor: pointBorderColor,\n          pointBackgroundColor: pointBackgroundColor,\n          pointBorderWidth: '3',\n          pointHoverBackgroundColor: pointBackgroundColor,\n          pointHoverBorderColor: '#4CB050',\n          pointHoverBorderWidth: '6',\n          pointHoverRadius: '8',\n          pointRadius: 3,\n          pointHitRadius: 8,\n          data: chartdata\n        }]\n      };\n    };\n\n    const options = {\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          display: true,\n          ticks: {\n            min: 0,\n            display: false\n          },\n          gridLines: {\n            display: true,\n            drawBorder: false,\n            lineWidth: 10\n          }\n        }],\n        yAxes: [{\n          display: false,\n          ticks: {\n            suggestedMin: 0,\n            beginAtZero: true\n          }\n        }]\n      }\n    };\n    return React.createElement(Line, {\n      data: data,\n      options: options,\n      height: height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/components/dashboard/default/Chart.js"],"names":["React","Component","Line","Chart","render","labels","label","borderColor","chartdata","pointBackgroundColor","height","pointBorderColor","shadowColor","props","data","canvas","ctx","getContext","_stroke","stroke","save","shadowBlur","shadowOffsetX","shadowOffsetY","apply","arguments","restore","datasets","fill","tension","fillOpacity","borderWidth","pointBorderWidth","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHoverRadius","pointRadius","pointHitRadius","options","legend","display","scales","xAxes","ticks","min","gridLines","drawBorder","lineWidth","yAxes","suggestedMin","beginAtZero"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AAEA,eAAe,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC3CG,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA,MAAD;AAASC,MAAAA,KAAT;AAAgBC,MAAAA,WAAhB;AAA6BC,MAAAA,SAA7B;AAAwCC,MAAAA,oBAAxC;AAA8DC,MAAAA,MAA9D;AAAsEC,MAAAA,gBAAtE;AAAwFC,MAAAA;AAAxF,QAAuG,KAAKC,KAAlH;;AACA,UAAMC,IAAI,GAAIC,MAAD,IAAY;AACvB,YAAMC,GAAG,GAAGD,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAZ;AACA,YAAMC,OAAO,GAAGF,GAAG,CAACG,MAApB;;AACAH,MAAAA,GAAG,CAACG,MAAJ,GAAa,YAAY;AACvBH,QAAAA,GAAG,CAACI,IAAJ;AACAJ,QAAAA,GAAG,CAACJ,WAAJ,GAAkBA,WAAlB;AACAI,QAAAA,GAAG,CAACK,UAAJ,GAAiB,EAAjB;AACAL,QAAAA,GAAG,CAACM,aAAJ,GAAoB,CAApB;AACAN,QAAAA,GAAG,CAACO,aAAJ,GAAoB,EAApB;;AACAL,QAAAA,OAAO,CAACM,KAAR,CAAc,IAAd,EAAoBC,SAApB;;AACAT,QAAAA,GAAG,CAACU,OAAJ;AACD,OARD;;AASA,aAAO;AACLrB,QAAAA,MAAM,EAAEA,MADH;AAELsB,QAAAA,QAAQ,EAAE,CACR;AACErB,UAAAA,KAAK,EAAEA,KADT;AAEEsB,UAAAA,IAAI,EAAE,KAFR;AAGEC,UAAAA,OAAO,EAAE,IAHX;AAIEC,UAAAA,WAAW,EAAE,GAJf;AAKEvB,UAAAA,WAAW,EAAEA,WALf;AAMEwB,UAAAA,WAAW,EAAE,GANf;AAOEpB,UAAAA,gBAAgB,EAAEA,gBAPpB;AAQEF,UAAAA,oBAAoB,EAAEA,oBARxB;AASEuB,UAAAA,gBAAgB,EAAE,GATpB;AAUEC,UAAAA,yBAAyB,EAAExB,oBAV7B;AAWEyB,UAAAA,qBAAqB,EAAE,SAXzB;AAYEC,UAAAA,qBAAqB,EAAE,GAZzB;AAaEC,UAAAA,gBAAgB,EAAE,GAbpB;AAcEC,UAAAA,WAAW,EAAE,CAdf;AAeEC,UAAAA,cAAc,EAAE,CAflB;AAgBExB,UAAAA,IAAI,EAAEN;AAhBR,SADQ;AAFL,OAAP;AAuBD,KAnCD;;AAqCA,UAAM+B,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE;AADH,OADM;AAIdC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,CAAC;AACNF,UAAAA,OAAO,EAAE,IADH;AAENG,UAAAA,KAAK,EAAE;AACLC,YAAAA,GAAG,EAAE,CADA;AAELJ,YAAAA,OAAO,EAAE;AAFJ,WAFD;AAMNK,UAAAA,SAAS,EAAE;AACTL,YAAAA,OAAO,EAAE,IADA;AAETM,YAAAA,UAAU,EAAE,KAFH;AAGTC,YAAAA,SAAS,EAAE;AAHF;AANL,SAAD,CADD;AAcNC,QAAAA,KAAK,EAAE,CAAC;AACNR,UAAAA,OAAO,EAAE,KADH;AAENG,UAAAA,KAAK,EAAE;AACLM,YAAAA,YAAY,EAAE,CADT;AAELC,YAAAA,WAAW,EAAE;AAFR;AAFD,SAAD;AAdD;AAJM,KAAhB;AA2BA,WACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAErC,IAAZ;AAAkB,MAAA,OAAO,EAAEyB,OAA3B;AAAoC,MAAA,MAAM,EAAE7B,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAtE0C","sourcesContent":["import React, {Component} from 'react';\nimport {Line} from 'react-chartjs-2';\n\nexport default class Chart extends Component {\n  render() {\n    const {labels, label, borderColor, chartdata, pointBackgroundColor, height, pointBorderColor, shadowColor} = this.props;\n    const data = (canvas) => {\n      const ctx = canvas.getContext(\"2d\");\n      const _stroke = ctx.stroke;\n      ctx.stroke = function () {\n        ctx.save();\n        ctx.shadowColor = shadowColor;\n        ctx.shadowBlur = 13;\n        ctx.shadowOffsetX = 0;\n        ctx.shadowOffsetY = 12;\n        _stroke.apply(this, arguments);\n        ctx.restore();\n      };\n      return {\n        labels: labels,\n        datasets: [\n          {\n            label: label,\n            fill: false,\n            tension: 0.40,\n            fillOpacity: 0.3,\n            borderColor: borderColor,\n            borderWidth: '4',\n            pointBorderColor: pointBorderColor,\n            pointBackgroundColor: pointBackgroundColor,\n            pointBorderWidth: '3',\n            pointHoverBackgroundColor: pointBackgroundColor,\n            pointHoverBorderColor: '#4CB050',\n            pointHoverBorderWidth: '6',\n            pointHoverRadius: '8',\n            pointRadius: 3,\n            pointHitRadius: 8,\n            data: chartdata,\n          }\n        ]\n      }\n    }\n\n    const options = {\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          display: true,\n          ticks: {\n            min: 0,\n            display: false,\n          },\n          gridLines: {\n            display: true,\n            drawBorder: false,\n            lineWidth: 10,\n          }\n        }],\n\n        yAxes: [{\n          display: false,\n          ticks: {\n            suggestedMin: 0,\n            beginAtZero: true\n          }\n        }]\n      },\n    };\n    return (\n      <Line data={data} options={options} height={height}/>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}