{"ast":null,"code":"import _objectSpread from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Drawer from'@material-ui/core/Drawer';import IconButton from'@material-ui/core/IconButton';import Checkbox from'@material-ui/core/Checkbox';import{connect}from'react-redux';import Button from'@material-ui/core/Button';import Snackbar from'@material-ui/core/Snackbar';import contactList from'../data/contactList';import ContactList from'components/contact/ContactList';import AppModuleHeader from'components/AppModuleHeader/index';import AddContact from'components/contact/AddContact';import IntlMessages from'util/IntlMessages';import CustomScrollbars from'util/CustomScrollbars';var contactId=723812738;var filterOptions=[{id:1,name:'All contacts',icon:'zmdi-menu'},{id:2,name:'Frequently contacted',icon:'zmdi-time-restore'},{id:3,name:'Starred contacts',icon:'zmdi-star'}];var Contact=/*#__PURE__*/function(_Component){_inherits(Contact,_Component);function Contact(){var _this;_classCallCheck(this,Contact);_this=_possibleConstructorReturn(this,_getPrototypeOf(Contact).call(this));_this.ContactSideBar=function(user){return React.createElement(\"div\",{className:\"module-side\"},React.createElement(\"div\",{className:\"module-side-header\"},React.createElement(\"div\",{className:\"module-logo\"},React.createElement(\"i\",{className:\"zmdi zmdi-account-box mr-4\"}),React.createElement(\"span\",null,React.createElement(IntlMessages,{id:\"chat.contacts\"})))),React.createElement(\"div\",{className:\"module-side-content\"},React.createElement(CustomScrollbars,{className:\"module-side-scroll scrollbar\",style:{height:_this.props.width>=1200?'calc(100vh - 200px)':'calc(100vh - 80px)'}},React.createElement(\"div\",{className:\"module-add-task\"},React.createElement(Button,{className:\"jr-btn btn-block\",variant:\"contained\",color:\"primary\",\"aria-label\":\"add\",onClick:_this.onAddContact},React.createElement(\"i\",{className:\"zmdi zmdi-account-add zmdi-hc-fw\"}),React.createElement(\"span\",null,\"Add New Contact\"))),React.createElement(\"div\",{className:\"module-side-nav\"},React.createElement(\"ul\",{className:\"module-nav\"},filterOptions.map(function(option){return React.createElement(\"li\",{key:option.id,className:\"nav-item\"},React.createElement(\"span\",{className:\"jr-link \".concat(option.id===_this.state.selectedSectionId?'active':''),onClick:_this.onFilterOptionSelect.bind(_assertThisInitialized(_this),option)},React.createElement(\"i\",{className:\"zmdi \".concat(option.icon)}),React.createElement(\"span\",null,option.name)));}))))));};_this.addFavourite=function(data){_this.setState({alertMessage:data.starred?'Contact removed as star':'Contact marked as star',showMessage:true,contactList:_this.state.contactList.map(function(contact){return contact.id===data.id?_objectSpread({},contact,{starred:!data.starred}):contact;}),allContact:_this.state.allContact.map(function(contact){return contact.id===data.id?_objectSpread({},contact,{starred:!data.starred}):contact;})});};_this.onContactSelect=function(data){data.selected=!data.selected;var selectedContacts=0;var contactList=_this.state.contactList.map(function(contact){if(contact.selected){selectedContacts++;}if(contact.id===data.id){if(contact.selected){selectedContacts++;}return data;}else{return contact;}});_this.setState({selectedContacts:selectedContacts,contactList:contactList});};_this.onAddContact=function(){_this.setState({addContactState:true});};_this.onContactClose=function(){_this.setState({addContactState:false});};_this.onFilterOptionSelect=function(option){switch(option.name){case'All contacts':{_this.setState({selectedSectionId:option.id,filterOption:option.name,contactList:_this.state.allContact});break;}case'Frequently contacted':{_this.setState({selectedSectionId:option.id,filterOption:option.name,contactList:_this.state.allContact.filter(function(contact){return contact.frequently;})});break;}case'Starred contacts':{_this.setState({selectedSectionId:option.id,filterOption:option.name,contactList:_this.state.allContact.filter(function(contact){return contact.starred;})});break;}default:{_this.setState({selectedSectionId:option.id,filterOption:option.name,contactList:_this.state.allContact});}}};_this.onSaveContact=function(data){var isNew=true;var contactList=_this.state.allContact.map(function(contact){if(contact.id===data.id){isNew=false;return data;}else{return contact;}});if(isNew){contactList.push(data);}_this.setState({alertMessage:isNew?'Contact Added Successfully':'Contact Updated Successfully',showMessage:true,contactList:contactList,allContact:contactList});// this.onFilterOptionSelect(this.state.filterOption);\n};_this.onDeleteContact=function(data){_this.setState({alertMessage:'Contact Deleted Successfully',showMessage:true,allContact:_this.state.allContact.filter(function(contact){return contact.id!==data.id;}),contactList:_this.state.allContact.filter(function(contact){return contact.id!==data.id;})});};_this.onDeleteSelectedContact=function(){var contacts=_this.state.allContact.filter(function(contact){return!contact.selected;});_this.setState({alertMessage:'Contact Deleted Successfully',showMessage:true,allContact:contacts,contactList:contacts,selectedContacts:0});};_this.filterContact=function(userName){var filterOption=_this.state.filterOption;if(userName===''){_this.setState({contactList:_this.state.allContact});}else{var filterContact=_this.state.allContact.filter(function(contact){return contact.name.toLowerCase().indexOf(userName.toLowerCase())>-1;});if(filterOption==='All contacts'){_this.setState({contactList:filterContact});}else if(filterOption==='Frequently contacted'){_this.setState({contactList:filterContact.filter(function(contact){return contact.frequently;})});}else if(filterOption==='Starred contacts'){_this.setState({contactList:filterContact.filter(function(contact){return contact.starred;})});}}};_this.handleRequestClose=function(){_this.setState({showMessage:false});};_this.getAllContact=function(){var contactList=_this.state.allContact.map(function(contact){return contact?_objectSpread({},contact,{selected:true}):contact;});_this.setState({selectedContacts:contactList.length,allContact:contactList,contactList:contactList});};_this.getUnselectedAllContact=function(){var contactList=_this.state.allContact.map(function(contact){return contact?_objectSpread({},contact,{selected:false}):contact;});_this.setState({selectedContacts:0,allContact:contactList,contactList:contactList});};_this.state={noContentFoundMessage:'No contact found in selected folder',alertMessage:'',showMessage:false,selectedSectionId:1,drawerState:false,user:{name:'Robert Johnson',email:'robert.johnson@example.com',avatar:'https://via.placeholder.com/150x150'},searchUser:'',filterOption:'All contacts',allContact:contactList,contactList:contactList,selectedContact:null,selectedContacts:0,addContactState:false};return _this;}_createClass(Contact,[{key:\"onAllContactSelect\",value:function onAllContactSelect(){var selectAll=this.state.selectedContacts<this.state.contactList.length;if(selectAll){this.getAllContact();}else{this.getUnselectedAllContact();}}},{key:\"updateContactUser\",value:function updateContactUser(evt){this.setState({searchUser:evt.target.value});this.filterContact(evt.target.value);}},{key:\"onToggleDrawer\",value:function onToggleDrawer(){this.setState({drawerState:!this.state.drawerState});}},{key:\"render\",value:function render(){var _this$state=this.state,user=_this$state.user,contactList=_this$state.contactList,addContactState=_this$state.addContactState,selectedContacts=_this$state.selectedContacts,alertMessage=_this$state.alertMessage,showMessage=_this$state.showMessage,noContentFoundMessage=_this$state.noContentFoundMessage;return React.createElement(\"div\",{className:\"app-wrapper\"},React.createElement(\"div\",{className:\"app-module animated slideInUpTiny animation-duration-3\"},React.createElement(\"div\",{className:\"d-block d-xl-none\"},React.createElement(Drawer,{open:this.state.drawerState,onClose:this.onToggleDrawer.bind(this)},this.ContactSideBar(user))),React.createElement(\"div\",{className:\"app-module-sidenav d-none d-xl-flex\"},this.ContactSideBar(user)),React.createElement(\"div\",{className:\"module-box\"},React.createElement(\"div\",{className:\"module-box-header\"},React.createElement(IconButton,{className:\"drawer-btn d-block d-xl-none\",\"aria-label\":\"Menu\",onClick:this.onToggleDrawer.bind(this)},React.createElement(\"i\",{className:\"zmdi zmdi-menu\"})),React.createElement(AppModuleHeader,{placeholder:\"Search contact\",notification:false,apps:false,user:this.state.user,onChange:this.updateContactUser.bind(this),value:this.state.searchUser})),React.createElement(\"div\",{className:\"module-box-content\"},React.createElement(\"div\",{className:\"module-box-topbar\"},React.createElement(Checkbox,{color:\"primary\",indeterminate:selectedContacts>0&&selectedContacts<contactList.length,checked:selectedContacts>0,onChange:this.onAllContactSelect.bind(this),value:\"SelectMail\"}),selectedContacts>0&&React.createElement(IconButton,{className:\"icon-btn\",onClick:this.onDeleteSelectedContact.bind(this)},React.createElement(\"i\",{className:\"zmdi zmdi-delete\"}))),React.createElement(CustomScrollbars,{className:\"module-list-scroll scrollbar\",style:{height:this.props.width>=1200?'calc(100vh - 261px)':'calc(100vh - 240px)'}},contactList.length===0?React.createElement(\"div\",{className:\"h-100 d-flex align-items-center justify-content-center\"},noContentFoundMessage):React.createElement(ContactList,{contactList:contactList,addFavourite:this.addFavourite.bind(this),onContactSelect:this.onContactSelect.bind(this),onDeleteContact:this.onDeleteContact.bind(this),onSaveContact:this.onSaveContact.bind(this)}))))),React.createElement(AddContact,{open:addContactState,contact:{'id':contactId++,'name':'','thumb':'','email':'','phone':'','designation':'','selected':false,'starred':false,'frequently':false},onSaveContact:this.onSaveContact,onContactClose:this.onContactClose,onDeleteContact:this.onDeleteContact}),React.createElement(Snackbar,{anchorOrigin:{vertical:'top',horizontal:'center'},open:showMessage,autoHideDuration:3000,onClose:this.handleRequestClose,ContentProps:{'aria-describedby':'message-id'},message:React.createElement(\"span\",{id:\"message-id\"},alertMessage)}));}}]);return Contact;}(Component);var mapStateToProps=function mapStateToProps(_ref){var settings=_ref.settings;var width=settings.width;return{width:width};};export default connect(mapStateToProps)(Contact);","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/contact/basic/index.js"],"names":["React","Component","Drawer","IconButton","Checkbox","connect","Button","Snackbar","contactList","ContactList","AppModuleHeader","AddContact","IntlMessages","CustomScrollbars","contactId","filterOptions","id","name","icon","Contact","ContactSideBar","user","height","props","width","onAddContact","map","option","state","selectedSectionId","onFilterOptionSelect","bind","addFavourite","data","setState","alertMessage","starred","showMessage","contact","allContact","onContactSelect","selected","selectedContacts","addContactState","onContactClose","filterOption","filter","frequently","onSaveContact","isNew","push","onDeleteContact","onDeleteSelectedContact","contacts","filterContact","userName","toLowerCase","indexOf","handleRequestClose","getAllContact","length","getUnselectedAllContact","noContentFoundMessage","drawerState","email","avatar","searchUser","selectedContact","selectAll","evt","target","value","onToggleDrawer","updateContactUser","onAllContactSelect","vertical","horizontal","mapStateToProps","settings"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {connect} from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport contactList from '../data/contactList';\nimport ContactList from 'components/contact/ContactList';\nimport AppModuleHeader from 'components/AppModuleHeader/index';\nimport AddContact from 'components/contact/AddContact';\nimport IntlMessages from 'util/IntlMessages';\nimport CustomScrollbars from 'util/CustomScrollbars';\n\nlet contactId = 723812738;\n\nconst filterOptions = [\n  {\n    id: 1,\n    name: 'All contacts',\n    icon: 'zmdi-menu'\n  }, {\n    id: 2,\n    name: 'Frequently contacted',\n    icon: 'zmdi-time-restore'\n\n  }, {\n\n    id: 3,\n    name: 'Starred contacts',\n    icon: 'zmdi-star'\n  }\n];\n\nclass Contact extends Component {\n\n  ContactSideBar = (user) => {\n    return <div className=\"module-side\">\n      <div className=\"module-side-header\">\n        <div className=\"module-logo\">\n          <i className=\"zmdi zmdi-account-box mr-4\"/>\n          <span><IntlMessages id=\"chat.contacts\"/></span>\n        </div>\n      </div>\n\n      <div className=\"module-side-content\">\n        <CustomScrollbars className=\"module-side-scroll scrollbar\"\n                          style={{height: this.props.width >= 1200 ? 'calc(100vh - 200px)' : 'calc(100vh - 80px)'}}>\n          <div className=\"module-add-task\">\n            <Button className=\"jr-btn btn-block\" variant=\"contained\" color=\"primary\" aria-label=\"add\"\n                    onClick={this.onAddContact}>\n              <i className=\"zmdi zmdi-account-add zmdi-hc-fw\"/>\n              <span>Add New Contact</span>\n            </Button>\n          </div>\n          <div className=\"module-side-nav\">\n            <ul className=\"module-nav\">\n              {filterOptions.map(option => <li key={option.id} className=\"nav-item\">\n                  <span\n                    className={`jr-link ${option.id === this.state.selectedSectionId ? 'active' : ''}`} onClick={\n                    this.onFilterOptionSelect.bind(this, option)\n                  }>\n                    <i className={`zmdi ${option.icon}`}/>\n                    <span>{option.name}</span>\n                  </span>\n                </li>\n              )}\n\n            </ul>\n          </div>\n        </CustomScrollbars>\n      </div>\n    </div>\n\n  };\n\n  addFavourite = (data) => {\n    this.setState({\n      alertMessage: data.starred ? 'Contact removed as star' : 'Contact marked as star',\n      showMessage: true,\n      contactList: this.state.contactList.map((contact) => contact.id === data.id ? {\n        ...contact,\n        starred: !data.starred\n      } : contact),\n      allContact: this.state.allContact.map((contact) => contact.id === data.id ? {\n        ...contact,\n        starred: !data.starred\n      } : contact)\n    })\n  };\n  onContactSelect = (data) => {\n    data.selected = !data.selected;\n    let selectedContacts = 0;\n    const contactList = this.state.contactList.map(contact => {\n        if (contact.selected) {\n          selectedContacts++;\n        }\n        if (contact.id === data.id) {\n          if (contact.selected) {\n            selectedContacts++;\n          }\n          return data;\n        } else {\n          return contact;\n        }\n      }\n    );\n    this.setState({\n      selectedContacts: selectedContacts,\n      contactList: contactList\n    });\n\n  };\n\n\n  onAddContact = () => {\n    this.setState({addContactState: true});\n  };\n  onContactClose = () => {\n    this.setState({addContactState: false});\n  };\n  onFilterOptionSelect = (option) => {\n    switch (option.name) {\n      case 'All contacts': {\n        this.setState({\n          selectedSectionId: option.id,\n          filterOption: option.name,\n          contactList: this.state.allContact\n        });\n        break;\n      }\n      case 'Frequently contacted': {\n        this.setState({\n          selectedSectionId: option.id,\n          filterOption: option.name,\n          contactList: this.state.allContact.filter((contact) => contact.frequently)\n        });\n        break;\n      }\n      case 'Starred contacts': {\n        this.setState({\n          selectedSectionId: option.id,\n          filterOption: option.name,\n          contactList: this.state.allContact.filter((contact) => contact.starred)\n        });\n        break;\n      }\n      default: {\n        this.setState({\n          selectedSectionId: option.id,\n          filterOption: option.name,\n          contactList: this.state.allContact\n        });\n      }\n    }\n\n  };\n  onSaveContact = (data) => {\n    let isNew = true;\n    const contactList = this.state.allContact.map((contact) => {\n      if (contact.id === data.id) {\n        isNew = false;\n        return data\n      } else {\n        return contact\n      }\n    });\n    if (isNew) {\n      contactList.push(data);\n    }\n    this.setState({\n      alertMessage: isNew ? 'Contact Added Successfully' : 'Contact Updated Successfully',\n      showMessage: true,\n      contactList: contactList,\n      allContact: contactList\n    });\n    // this.onFilterOptionSelect(this.state.filterOption);\n  };\n  onDeleteContact = (data) => {\n    this.setState({\n      alertMessage: 'Contact Deleted Successfully',\n      showMessage: true,\n      allContact: this.state.allContact.filter((contact) => contact.id !== data.id),\n      contactList: this.state.allContact.filter((contact) => contact.id !== data.id)\n    })\n  };\n  onDeleteSelectedContact = () => {\n    const contacts = this.state.allContact.filter((contact) => !contact.selected);\n    this.setState({\n      alertMessage: 'Contact Deleted Successfully',\n      showMessage: true,\n      allContact: contacts,\n      contactList: contacts,\n      selectedContacts: 0\n    })\n  };\n  filterContact = (userName) => {\n    const {filterOption} = this.state;\n    if (userName === '') {\n      this.setState({contactList: this.state.allContact});\n    } else {\n      const filterContact = this.state.allContact.filter((contact) =>\n        contact.name.toLowerCase().indexOf(userName.toLowerCase()) > -1);\n      if (filterOption === 'All contacts') {\n        this.setState({contactList: filterContact});\n      } else if (filterOption === 'Frequently contacted') {\n        this.setState({contactList: filterContact.filter((contact) => contact.frequently)});\n\n      } else if (filterOption === 'Starred contacts') {\n        this.setState({contactList: filterContact.filter((contact) => contact.starred)});\n      }\n    }\n  };\n  handleRequestClose = () => {\n    this.setState({\n      showMessage: false,\n    });\n  };\n  getAllContact = () => {\n    let contactList = this.state.allContact.map((contact) => contact ? {\n      ...contact,\n      selected: true\n    } : contact);\n    this.setState({\n      selectedContacts: contactList.length,\n      allContact: contactList,\n      contactList: contactList\n    });\n  };\n  getUnselectedAllContact = () => {\n    let contactList = this.state.allContact.map((contact) => contact ? {\n      ...contact,\n      selected: false\n    } : contact);\n    this.setState({\n      selectedContacts: 0,\n      allContact: contactList,\n      contactList: contactList\n    });\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      noContentFoundMessage: 'No contact found in selected folder',\n      alertMessage: '',\n      showMessage: false,\n      selectedSectionId: 1,\n      drawerState: false,\n      user: {\n        name: 'Robert Johnson',\n        email: 'robert.johnson@example.com',\n        avatar: 'https://via.placeholder.com/150x150'\n      },\n      searchUser: '',\n      filterOption: 'All contacts',\n      allContact: contactList,\n      contactList: contactList,\n      selectedContact: null,\n      selectedContacts: 0,\n      addContactState: false,\n    }\n  }\n\n  onAllContactSelect() {\n    const selectAll = this.state.selectedContacts < this.state.contactList.length;\n    if (selectAll) {\n      this.getAllContact();\n    } else {\n      this.getUnselectedAllContact();\n    }\n  }\n\n  updateContactUser(evt) {\n    this.setState({\n      searchUser: evt.target.value,\n    });\n    this.filterContact(evt.target.value)\n  }\n\n  onToggleDrawer() {\n    this.setState({\n      drawerState: !this.state.drawerState\n    });\n  }\n\n  render() {\n    const {user, contactList, addContactState, selectedContacts, alertMessage, showMessage, noContentFoundMessage} = this.state;\n    return (\n      <div className=\"app-wrapper\">\n        <div className=\"app-module animated slideInUpTiny animation-duration-3\">\n\n          <div className=\"d-block d-xl-none\">\n            <Drawer\n              open={this.state.drawerState}\n              onClose={this.onToggleDrawer.bind(this)}>\n              {this.ContactSideBar(user)}\n            </Drawer>\n          </div>\n          <div className=\"app-module-sidenav d-none d-xl-flex\">\n            {this.ContactSideBar(user)}\n          </div>\n\n          <div className=\"module-box\">\n            <div className=\"module-box-header\">\n              <IconButton className=\"drawer-btn d-block d-xl-none\" aria-label=\"Menu\"\n                          onClick={this.onToggleDrawer.bind(this)}>\n                <i className=\"zmdi zmdi-menu\"/>\n              </IconButton>\n              <AppModuleHeader placeholder=\"Search contact\" notification={false} apps={false}\n                               user={this.state.user}\n                               onChange={this.updateContactUser.bind(this)}\n                               value={this.state.searchUser}/>\n            </div>\n            <div className=\"module-box-content\">\n\n              <div className=\"module-box-topbar\">\n                <Checkbox color=\"primary\"\n                          indeterminate={selectedContacts > 0 && selectedContacts < contactList.length}\n                          checked={selectedContacts > 0}\n                          onChange={this.onAllContactSelect.bind(this)}\n                          value=\"SelectMail\"/>\n\n\n                {selectedContacts > 0 &&\n                <IconButton className=\"icon-btn\"\n                            onClick={this.onDeleteSelectedContact.bind(this)}>\n                  <i className=\"zmdi zmdi-delete\"/>\n                </IconButton>}\n\n              </div>\n              <CustomScrollbars className=\"module-list-scroll scrollbar\"\n                                style={{height: this.props.width >= 1200 ? 'calc(100vh - 261px)' : 'calc(100vh - 240px)'}}>\n                {contactList.length === 0 ?\n                  <div className=\"h-100 d-flex align-items-center justify-content-center\">\n                    {noContentFoundMessage}\n                  </div>\n                  : <ContactList contactList={contactList}\n                                 addFavourite={this.addFavourite.bind(this)}\n                                 onContactSelect={this.onContactSelect.bind(this)}\n                                 onDeleteContact={this.onDeleteContact.bind(this)}\n                                 onSaveContact={this.onSaveContact.bind(this)}/>\n                }\n\n\n              </CustomScrollbars>\n\n            </div>\n          </div>\n        </div>\n\n        <AddContact open={addContactState} contact={{\n          'id': contactId++,\n          'name': '',\n          'thumb': '',\n          'email': '',\n          'phone': '',\n          'designation': '',\n          'selected': false,\n          'starred': false,\n          'frequently': false,\n        }} onSaveContact={this.onSaveContact}\n                    onContactClose={this.onContactClose} onDeleteContact={this.onDeleteContact}/>\n        <Snackbar\n          anchorOrigin={{vertical: 'top', horizontal: 'center'}}\n          open={showMessage}\n          autoHideDuration={3000}\n          onClose={this.handleRequestClose}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{alertMessage}</span>}\n        /></div>\n    )\n  }\n}\n\nconst mapStateToProps = ({settings}) => {\n  const {width} = settings;\n  return {width}\n};\nexport default connect(mapStateToProps)(Contact);"]},"metadata":{},"sourceType":"module"}