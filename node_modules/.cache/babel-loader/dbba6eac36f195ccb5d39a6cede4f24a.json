{"ast":null,"code":"import { all, call, put, takeEvery } from 'redux-saga/effects';\nimport { fetchMailsSuccess, showMailMessage } from 'actions/Mail';\nimport { database } from '../firebase/firebase';\nimport { FETCH_ALL_MAIL } from 'constants/ActionTypes';\n\nconst getMails = async () => await database.ref('prod/mail').once('value').then(snapshot => {\n  const mails = [];\n  snapshot.forEach(rawData => {\n    const mail = rawData.val(); // change object to array\n\n    const labels = [];\n\n    if (mail.labels) {\n      mail.labels.forEach(label => labels.push(label));\n    } // change object to array\n\n\n    const tos = [];\n    mail.to.forEach(to => tos.push(to));\n    mail.to = tos;\n    mail.labels = labels;\n    mails.push(mail);\n  });\n  return mails;\n}).catch(error => error);\n\nfunction* fetchMailRequest() {\n  try {\n    const fetchedMail = yield call(getMails);\n    yield put(fetchMailsSuccess(fetchedMail));\n  } catch (error) {\n    yield put(showMailMessage(error));\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(FETCH_ALL_MAIL, fetchMailRequest)]);\n}","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/sagas/Mail.js"],"names":["all","call","put","takeEvery","fetchMailsSuccess","showMailMessage","database","FETCH_ALL_MAIL","getMails","ref","once","then","snapshot","mails","forEach","rawData","mail","val","labels","label","push","tos","to","catch","error","fetchMailRequest","fetchedMail","rootSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,IAAb,EAAmBC,GAAnB,EAAwBC,SAAxB,QAAwC,oBAAxC;AACA,SAAQC,iBAAR,EAA2BC,eAA3B,QAAiD,cAAjD;AACA,SAAQC,QAAR,QAAuB,sBAAvB;AACA,SAAQC,cAAR,QAA6B,uBAA7B;;AAEA,MAAMC,QAAQ,GAAG,YACf,MAAMF,QAAQ,CAACG,GAAT,CAAa,WAAb,EAA0BC,IAA1B,CAA+B,OAA/B,EACHC,IADG,CACGC,QAAD,IAAc;AAClB,QAAMC,KAAK,GAAG,EAAd;AACAD,EAAAA,QAAQ,CAACE,OAAT,CAAkBC,OAAD,IAAa;AAC5B,UAAMC,IAAI,GAAGD,OAAO,CAACE,GAAR,EAAb,CAD4B,CAG5B;;AACA,UAAMC,MAAM,GAAG,EAAf;;AACA,QAAIF,IAAI,CAACE,MAAT,EAAiB;AACfF,MAAAA,IAAI,CAACE,MAAL,CAAYJ,OAAZ,CAAqBK,KAAD,IAClBD,MAAM,CAACE,IAAP,CAAYD,KAAZ,CADF;AAGD,KAT2B,CAW5B;;;AACA,UAAME,GAAG,GAAG,EAAZ;AACAL,IAAAA,IAAI,CAACM,EAAL,CAAQR,OAAR,CAAiBQ,EAAD,IACdD,GAAG,CAACD,IAAJ,CAASE,EAAT,CADF;AAIAN,IAAAA,IAAI,CAACM,EAAL,GAAUD,GAAV;AACAL,IAAAA,IAAI,CAACE,MAAL,GAAcA,MAAd;AACAL,IAAAA,KAAK,CAACO,IAAN,CAAWJ,IAAX;AACD,GApBD;AAqBA,SAAOH,KAAP;AACD,CAzBG,EA0BHU,KA1BG,CA0BGC,KAAK,IAAIA,KA1BZ,CADR;;AA8BA,UAAUC,gBAAV,GAA6B;AAC3B,MAAI;AACF,UAAMC,WAAW,GAAG,MAAMzB,IAAI,CAACO,QAAD,CAA9B;AACA,UAAMN,GAAG,CAACE,iBAAiB,CAACsB,WAAD,CAAlB,CAAT;AACD,GAHD,CAGE,OAAOF,KAAP,EAAc;AACd,UAAMtB,GAAG,CAACG,eAAe,CAACmB,KAAD,CAAhB,CAAT;AACD;AACF;;AAGD,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAM3B,GAAG,CAAC,CAACG,SAAS,CAACI,cAAD,EAAiBkB,gBAAjB,CAAV,CAAD,CAAT;AACD","sourcesContent":["import {all, call, put, takeEvery} from 'redux-saga/effects';\nimport {fetchMailsSuccess, showMailMessage} from 'actions/Mail';\nimport {database} from '../firebase/firebase';\nimport {FETCH_ALL_MAIL} from 'constants/ActionTypes';\n\nconst getMails = async () =>\n  await database.ref('prod/mail').once('value')\n    .then((snapshot) => {\n      const mails = [];\n      snapshot.forEach((rawData) => {\n        const mail = rawData.val();\n\n        // change object to array\n        const labels = [];\n        if (mail.labels) {\n          mail.labels.forEach((label) =>\n            labels.push(label)\n          );\n        }\n\n        // change object to array\n        const tos = [];\n        mail.to.forEach((to) =>\n          tos.push(to)\n        );\n\n        mail.to = tos;\n        mail.labels = labels;\n        mails.push(mail);\n      });\n      return mails;\n    })\n    .catch(error => error);\n\n\nfunction* fetchMailRequest() {\n  try {\n    const fetchedMail = yield call(getMails);\n    yield put(fetchMailsSuccess(fetchedMail));\n  } catch (error) {\n    yield put(showMailMessage(error));\n  }\n}\n\n\nexport default function* rootSaga() {\n  yield all([takeEvery(FETCH_ALL_MAIL, fetchMailRequest)]);\n}"]},"metadata":{},"sourceType":"module"}