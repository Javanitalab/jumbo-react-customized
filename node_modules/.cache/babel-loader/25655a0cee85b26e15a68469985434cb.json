{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/selection/switches/Switches.js\";\nimport React, { Component } from 'react';\nimport Switch from '@material-ui/core/Switch';\n\nclass Switches extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      checkedA: true,\n      checkedB: true,\n      checkedC: false,\n      checkedD: false,\n      checkedE: true,\n      checkedF: true,\n      checkedG: true\n    };\n\n    this.handleChange = name => (event, checked) => {\n      this.setState({\n        [name]: checked\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      classes: {\n        checked: 'text-primary',\n        bar: 'bg-primary'\n      },\n      checked: this.state.checkedA,\n      onChange: this.handleChange('checkedA'),\n      \"aria-label\": \"checkedA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      classes: {\n        checked: 'text-secondary',\n        bar: 'bg-secondary'\n      },\n      checked: this.state.checkedB,\n      onChange: this.handleChange('checkedB'),\n      \"aria-label\": \"checkedB\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      classes: {\n        checked: 'text-dark',\n        bar: 'bg-dark'\n      },\n      checked: this.state.checkedC,\n      onChange: this.handleChange('checkedC'),\n      \"aria-label\": \"checkedC\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      classes: {\n        checked: 'text-dark',\n        bar: 'bg-dark'\n      },\n      checked: this.state.checkedD,\n      onChange: this.handleChange('checkedD'),\n      \"aria-label\": \"checkedD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      classes: {\n        checked: 'text-success',\n        bar: 'bg-success'\n      },\n      checked: this.state.checkedE,\n      onChange: this.handleChange('checkedE'),\n      \"aria-label\": \"checkedE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      classes: {\n        checked: 'text-danger',\n        bar: 'bg-danger'\n      },\n      checked: this.state.checkedF,\n      onChange: this.handleChange('checkedF'),\n      \"aria-label\": \"checkedF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      classes: {\n        checked: 'text-warning',\n        bar: 'bg-warning'\n      },\n      checked: this.state.checkedG,\n      onChange: this.handleChange('checkedG'),\n      \"aria-label\": \"checkedG\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Switches;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/components/routes/selection/switches/Switches.js"],"names":["React","Component","Switch","Switches","state","checkedA","checkedB","checkedC","checkedD","checkedE","checkedF","checkedG","handleChange","name","event","checked","setState","render","bar"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BG,KAD+B,GACvB;AACNC,MAAAA,QAAQ,EAAE,IADJ;AAENC,MAAAA,QAAQ,EAAE,IAFJ;AAGNC,MAAAA,QAAQ,EAAE,KAHJ;AAINC,MAAAA,QAAQ,EAAE,KAJJ;AAKNC,MAAAA,QAAQ,EAAE,IALJ;AAMNC,MAAAA,QAAQ,EAAE,IANJ;AAONC,MAAAA,QAAQ,EAAE;AAPJ,KADuB;;AAAA,SAW/BC,YAX+B,GAWhBC,IAAI,IAAI,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACzC,WAAKC,QAAL,CAAc;AAAC,SAACH,IAAD,GAAQE;AAAT,OAAd;AACD,KAb8B;AAAA;;AAe/BE,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE;AACPF,QAAAA,OAAO,EAAE,cADF;AAEPG,QAAAA,GAAG,EAAE;AAFE,OADX;AAKE,MAAA,OAAO,EAAE,KAAKd,KAAL,CAAWC,QALtB;AAME,MAAA,QAAQ,EAAE,KAAKO,YAAL,CAAkB,UAAlB,CANZ;AAOE,oBAAW,UAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAUE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE;AACPG,QAAAA,OAAO,EAAE,gBADF;AAEPG,QAAAA,GAAG,EAAE;AAFE,OADX;AAKE,MAAA,OAAO,EAAE,KAAKd,KAAL,CAAWE,QALtB;AAME,MAAA,QAAQ,EAAE,KAAKM,YAAL,CAAkB,UAAlB,CANZ;AAOE,oBAAW,UAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAqBE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE;AACPG,QAAAA,OAAO,EAAE,WADF;AAEPG,QAAAA,GAAG,EAAE;AAFE,OADX;AAKE,MAAA,OAAO,EAAE,KAAKd,KAAL,CAAWG,QALtB;AAME,MAAA,QAAQ,EAAE,KAAKK,YAAL,CAAkB,UAAlB,CANZ;AAOE,oBAAW,UAPb;AAQE,MAAA,QAAQ,MARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,EA+BE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE;AACPG,QAAAA,OAAO,EAAE,WADF;AAEPG,QAAAA,GAAG,EAAE;AAFE,OADX;AAKE,MAAA,OAAO,EAAE,KAAKd,KAAL,CAAWI,QALtB;AAME,MAAA,QAAQ,EAAE,KAAKI,YAAL,CAAkB,UAAlB,CANZ;AAOE,oBAAW,UAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/BF,EAwCE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE;AACPG,QAAAA,OAAO,EAAE,cADF;AAEPG,QAAAA,GAAG,EAAE;AAFE,OADX;AAKE,MAAA,OAAO,EAAE,KAAKd,KAAL,CAAWK,QALtB;AAME,MAAA,QAAQ,EAAE,KAAKG,YAAL,CAAkB,UAAlB,CANZ;AAOE,oBAAW,UAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxCF,EAkDE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE;AACPG,QAAAA,OAAO,EAAE,aADF;AAEPG,QAAAA,GAAG,EAAE;AAFE,OADX;AAKE,MAAA,OAAO,EAAE,KAAKd,KAAL,CAAWM,QALtB;AAME,MAAA,QAAQ,EAAE,KAAKE,YAAL,CAAkB,UAAlB,CANZ;AAOE,oBAAW,UAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlDF,EA4DE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE;AACPG,QAAAA,OAAO,EAAE,cADF;AAEPG,QAAAA,GAAG,EAAE;AAFE,OADX;AAKE,MAAA,OAAO,EAAE,KAAKd,KAAL,CAAWO,QALtB;AAME,MAAA,QAAQ,EAAE,KAAKC,YAAL,CAAkB,UAAlB,CANZ;AAOE,oBAAW,UAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5DF,CADF;AAwED;;AAxF8B;;AA2FjC,eAAeT,QAAf","sourcesContent":["import React, {Component} from 'react';\nimport Switch from '@material-ui/core/Switch';\n\nclass Switches extends Component {\n  state = {\n    checkedA: true,\n    checkedB: true,\n    checkedC: false,\n    checkedD: false,\n    checkedE: true,\n    checkedF: true,\n    checkedG: true,\n  };\n\n  handleChange = name => (event, checked) => {\n    this.setState({[name]: checked});\n  };\n\n  render() {\n    return (\n      <div>\n        <Switch\n          classes={{\n            checked: 'text-primary',\n            bar: 'bg-primary',\n          }}\n          checked={this.state.checkedA}\n          onChange={this.handleChange('checkedA')}\n          aria-label=\"checkedA\"\n        />\n        <Switch\n          classes={{\n            checked: 'text-secondary',\n            bar: 'bg-secondary',\n          }}\n          checked={this.state.checkedB}\n          onChange={this.handleChange('checkedB')}\n          aria-label=\"checkedB\"\n        />\n\n\n        <Switch\n          classes={{\n            checked: 'text-dark',\n            bar: 'bg-dark',\n          }}\n          checked={this.state.checkedC}\n          onChange={this.handleChange('checkedC')}\n          aria-label=\"checkedC\"\n          disabled\n        />\n        <Switch\n          classes={{\n            checked: 'text-dark',\n            bar: 'bg-dark',\n          }}\n          checked={this.state.checkedD}\n          onChange={this.handleChange('checkedD')}\n          aria-label=\"checkedD\"\n        />\n        <Switch\n          classes={{\n            checked: 'text-success',\n            bar: 'bg-success',\n          }}\n          checked={this.state.checkedE}\n          onChange={this.handleChange('checkedE')}\n          aria-label=\"checkedE\"\n        />\n\n        <Switch\n          classes={{\n            checked: 'text-danger',\n            bar: 'bg-danger',\n          }}\n          checked={this.state.checkedF}\n          onChange={this.handleChange('checkedF')}\n          aria-label=\"checkedF\"\n        />\n\n        <Switch\n          classes={{\n            checked: 'text-warning',\n            bar: 'bg-warning',\n          }}\n          checked={this.state.checkedG}\n          onChange={this.handleChange('checkedG')}\n          aria-label=\"checkedG\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default Switches;"]},"metadata":{},"sourceType":"module"}