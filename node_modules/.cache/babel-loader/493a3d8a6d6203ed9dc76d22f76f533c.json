{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/dashboard/routes/CRM/TicketItem.js\";\nimport React from \"react\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Aux from \"util/Auxiliary\";\nimport { taskStatus } from \"./data\";\n\nconst getStatus = status => {\n  const statusData = taskStatus.filter((taskStatus, index) => status === taskStatus.id)[0];\n  return React.createElement(Aux, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"jr-nonhover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: `zmdi zmdi-circle jr-fs-sm text-${statusData.color}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    className: `badge jr-hover mb-0 text-white badge-${statusData.color}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, statusData.title));\n};\n\nconst TicketItem = ({\n  data\n}) => {\n  const {\n    id,\n    title,\n    avatar,\n    description,\n    status\n  } = data;\n  return React.createElement(\"div\", {\n    key: \"TicketItem\" + id,\n    className: \"media jr-task-list-item flex-nowrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: \"mr-3 size-36\",\n    src: avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"media-body jr-task-item-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"jr-task-item-content-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"text-truncate jr-task-item-title mb-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, title), React.createElement(\"p\", {\n    key: id,\n    className: \"text-grey jr-fs-sm mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, description)), React.createElement(\"div\", {\n    className: \"jr-task-item-content-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, getStatus(status))));\n};\n\nexport default TicketItem;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/app/routes/dashboard/routes/CRM/TicketItem.js"],"names":["React","Avatar","Aux","taskStatus","getStatus","status","statusData","filter","index","id","color","title","TicketItem","data","avatar","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,SAAQC,UAAR,QAAyB,QAAzB;;AAEA,MAAMC,SAAS,GAAIC,MAAD,IAAY;AAC5B,QAAMC,UAAU,GAAGH,UAAU,CAACI,MAAX,CAAkB,CAACJ,UAAD,EAAaK,KAAb,KAAuBH,MAAM,KAAKF,UAAU,CAACM,EAA/D,EAAmE,CAAnE,CAAnB;AACA,SAAO,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8B;AAAG,IAAA,SAAS,EAAG,kCAAiCH,UAAU,CAACI,KAAM,EAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,CADK,EAEL;AAAM,IAAA,SAAS,EAAG,wCAAuCJ,UAAU,CAACI,KAAM,EAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,UAAU,CAACK,KADd,CAFK,CAAP;AAMD,CARD;;AAUA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAE7B,QAAM;AAACJ,IAAAA,EAAD;AAAKE,IAAAA,KAAL;AAAYG,IAAAA,MAAZ;AAAoBC,IAAAA,WAApB;AAAiCV,IAAAA;AAAjC,MAA2CQ,IAAjD;AACA,SACE;AAAK,IAAA,GAAG,EAAE,eAAeJ,EAAzB;AAA6B,IAAA,SAAS,EAAC,qCAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,GAAG,EAAEK,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,uCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuDH,KAAvD,CADF,EAEE;AAAG,IAAA,GAAG,EAAEF,EAAR;AAAY,IAAA,SAAS,EAAC,yBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiDM,WAAjD,CAFF,CADF,EAKE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,SAAS,CAACC,MAAD,CADZ,CALF,CAFF,CADF;AAeD,CAlBD;;AAoBA,eAAeO,UAAf","sourcesContent":["import React from \"react\";\nimport Avatar from '@material-ui/core/Avatar';\n\nimport Aux from \"util/Auxiliary\";\nimport {taskStatus} from \"./data\";\n\nconst getStatus = (status) => {\n  const statusData = taskStatus.filter((taskStatus, index) => status === taskStatus.id)[0];\n  return <Aux>\n    <span className=\"jr-nonhover\"><i className={`zmdi zmdi-circle jr-fs-sm text-${statusData.color}`}/></span>\n    <span className={`badge jr-hover mb-0 text-white badge-${statusData.color}`}>\n      {statusData.title}\n    </span>\n  </Aux>\n};\n\nconst TicketItem = ({data}) => {\n\n  const {id, title, avatar, description, status} = data;\n  return (\n    <div key={\"TicketItem\" + id} className=\"media jr-task-list-item flex-nowrap\">\n      <Avatar className=\"mr-3 size-36\" src={avatar}/>\n      <div className=\"media-body jr-task-item-content\">\n        <div className=\"jr-task-item-content-left\">\n          <h5 className=\"text-truncate jr-task-item-title mb-1\">{title}</h5>\n          <p key={id} className=\"text-grey jr-fs-sm mb-0\">{description}</p>\n        </div>\n        <div className=\"jr-task-item-content-right\">\n          {getStatus(status)}\n        </div>\n      </div>\n    </div>\n\n  );\n};\n\nexport default TicketItem;\n"]},"metadata":{},"sourceType":"module"}