{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/components/Tour/index.js\";\nimport React from 'react';\nimport Joyride from 'react-joyride';\n\nclass Tour extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      autoStart: false,\n      running: false,\n      steps: [{\n        text: 'Shows logged-in user\\'s info with dropdown context menu.',\n        textAlign: 'center',\n        selector: '.app-container .app-sidebar .user-profile',\n        position: 'right',\n        isFixed: true\n      }, {\n        title: 'Notifications',\n        text: 'Keep yourself notified with the upcoming alerts and announcements',\n        textAlign: 'center',\n        selector: '.app-container .app-main-container .app-main-header .app-tour',\n        position: 'top',\n        isFixed: true\n      }, {\n        title: 'Messages',\n        text: 'Check your recent messages from your connections.',\n        textAlign: 'center',\n        selector: '.app-container .app-main-container .app-main-header .mail-tour',\n        position: 'top',\n        isFixed: false\n      }],\n      step: 0\n    };\n    this.handleNextButtonClick = this.handleNextButtonClick.bind(this);\n    this.handleJoyrideCallback = this.handleJoyrideCallback.bind(this);\n  }\n\n  handleNextButtonClick() {\n    if (this.state.step === 1) {\n      this.joyride.next();\n    }\n  }\n\n  handleJoyrideCallback(result) {\n    const {\n      joyride\n    } = this.props;\n\n    if (result.type === 'step:before') {\n      // Keep internal state in sync with joyride\n      this.setState({\n        step: result.index\n      });\n    }\n\n    if (result.type === 'finished' && this.state.running) {\n      // Need to set our running state to false, so we can restart if we click start again.\n      this.setState({\n        running: false\n      });\n    }\n\n    if (result.type === 'error:target_not_found') {\n      this.setState({\n        step: result.action === 'back' ? result.index - 1 : result.index + 1,\n        autoStart: result.action !== 'close' && result.action !== 'esc'\n      });\n    }\n\n    if (typeof joyride.callback === 'function') {\n      joyride.callback();\n    }\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        running: true,\n        step: 0\n      });\n    }, 1000);\n  }\n\n  render() {\n    const {\n      joyride\n    } = this.props;\n    const joyrideProps = {\n      autoStart: joyride.autoStart || this.state.autoStart,\n      callback: this.handleJoyrideCallback,\n      debug: false,\n      disableOverlay: this.state.step === 1,\n      resizeDebounce: joyride.resizeDebounce,\n      run: joyride.run || this.state.running,\n      scrollToFirstStep: joyride.scrollToFirstStep || true,\n      stepIndex: joyride.stepIndex || this.state.step,\n      steps: joyride.steps || this.state.steps,\n      type: joyride.type || 'continuous'\n    };\n    return React.createElement(Joyride, Object.assign({}, joyrideProps, {\n      ref: c => this.joyride = c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }));\n  }\n\n}\n\nTour.defaultProps = {\n  joyride: {\n    autoStart: false,\n    resizeDebounce: false,\n    run: false\n  }\n};\nexport default Tour;","map":{"version":3,"sources":["/Users/mohammad/Documents/SimpleApp/jumbo-react-source/src/components/Tour/index.js"],"names":["React","Joyride","Tour","PureComponent","constructor","props","state","autoStart","running","steps","text","textAlign","selector","position","isFixed","title","step","handleNextButtonClick","bind","handleJoyrideCallback","joyride","next","result","type","setState","index","action","callback","componentDidMount","setTimeout","render","joyrideProps","debug","disableOverlay","resizeDebounce","run","scrollToFirstStep","stepIndex","c","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Joyride from 'react-joyride';\n\nclass Tour extends React.PureComponent {\n\n  static defaultProps = {\n    joyride: {\n      autoStart: false,\n      resizeDebounce: false,\n      run: false,\n    },\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      autoStart: false,\n      running: false,\n      steps: [\n        {\n          text: 'Shows logged-in user\\'s info with dropdown context menu.',\n          textAlign: 'center',\n          selector: '.app-container .app-sidebar .user-profile',\n          position: 'right',\n          isFixed: true,\n        },\n        {\n          title: 'Notifications',\n          text: 'Keep yourself notified with the upcoming alerts and announcements',\n          textAlign: 'center',\n          selector: '.app-container .app-main-container .app-main-header .app-tour',\n          position: 'top',\n          isFixed: true,\n        },\n        {\n          title: 'Messages',\n          text: 'Check your recent messages from your connections.',\n          textAlign: 'center',\n          selector: '.app-container .app-main-container .app-main-header .mail-tour',\n          position: 'top',\n          isFixed: false,\n        }\n      ],\n      step: 0,\n    };\n\n    this.handleNextButtonClick = this.handleNextButtonClick.bind(this);\n    this.handleJoyrideCallback = this.handleJoyrideCallback.bind(this);\n  }\n\n  handleNextButtonClick() {\n    if (this.state.step === 1) {\n      this.joyride.next();\n    }\n  }\n\n  handleJoyrideCallback(result) {\n    const {joyride} = this.props;\n\n    if (result.type === 'step:before') {\n      // Keep internal state in sync with joyride\n      this.setState({step: result.index});\n    }\n\n    if (result.type === 'finished' && this.state.running) {\n      // Need to set our running state to false, so we can restart if we click start again.\n      this.setState({running: false});\n    }\n\n    if (result.type === 'error:target_not_found') {\n      this.setState({\n        step: result.action === 'back' ? result.index - 1 : result.index + 1,\n        autoStart: result.action !== 'close' && result.action !== 'esc',\n      });\n    }\n\n    if (typeof joyride.callback === 'function') {\n      joyride.callback();\n    }\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        running: true,\n        step: 0,\n      });\n    }, 1000);\n  }\n\n  render() {\n    const {joyride} = this.props;\n    const joyrideProps = {\n      autoStart: joyride.autoStart || this.state.autoStart,\n      callback: this.handleJoyrideCallback,\n      debug: false,\n      disableOverlay: this.state.step === 1,\n      resizeDebounce: joyride.resizeDebounce,\n      run: joyride.run || this.state.running,\n      scrollToFirstStep: joyride.scrollToFirstStep || true,\n      stepIndex: joyride.stepIndex || this.state.step,\n      steps: joyride.steps || this.state.steps,\n      type: joyride.type || 'continuous'\n    };\n    return (<Joyride\n        {...joyrideProps}\n        ref={c => (this.joyride = c)}/>\n\n    )\n\n  }\n}\n\nexport default Tour;\n\n"]},"metadata":{},"sourceType":"module"}